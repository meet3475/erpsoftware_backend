DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE ` get_outstanding_all_invoice_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_party_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION	

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_outstanding_all_invoice_data');

END;   
      
     SELECT pur_tax.purchase_tax_invoice_date as invoice_date,pur_tax.purchase_tax_invoice_no as invoice_no,'purchase' as book,pur_tax.purchase_tax_invoice_net_amount as amount,(SELECT COALESCE(SUM(debit_note.purchase_return_total_net_amount),0) FROM erp_purchase_return as debit_note WHERE debit_note.invoice_no_id=pur_tax.id AND debit_note.purchase_return_type_id!='95' AND debit_note.is_delete_status='0') - (SELECT COALESCE(SUM(debit_note.purchase_return_total_net_amount),0) FROM erp_purchase_return as debit_note WHERE debit_note.invoice_no_id=pur_tax.id AND debit_note.purchase_return_type_id='95' AND debit_note.is_delete_status='0') as return_amt,(SELECT COALESCE(SUM(vc_child.voucher_child_balance),0) FROM erp_voucher_child as vc_child WHERE vc_child.tax_invoice_id=pur_tax.id AND vc_child.voucher_child_invoice_type='purchase' AND vc_child.is_delete_status='0') as paid,(SELECT voucher.voucher_date FROM erp_voucher as voucher LEFT JOIN erp_voucher_child as child ON child.voucher_id=voucher.id WHERE child.tax_invoice_id=pur_tax.id AND child.voucher_child_invoice_type='purchase' AND child.is_delete_status='0' ORDER BY child.id DESC LIMIT 1) as due_on FROM erp_purchase_tax_invoice as pur_tax WHERE pur_tax.user_id=login_user_id AND pur_tax.company_id=login_company_id AND pur_tax.branch_id=login_branch_id AND pur_tax.year_id=login_year_id AND pur_tax.supplier_id=login_party_id AND pur_tax.is_delete_status='0' AND DATE(pur_tax.purchase_tax_invoice_entry_date)>=from_date AND DATE(pur_tax.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT journal.journal_purchase_invoice_date as invoice_date,journal.journal_purchase_invoice_no as invoice_no,'journalpurchase' as book,journal.journal_purchase_child_net_total as amount,(SELECT COALESCE(SUM(debit_note.purchase_return_total_net_amount),0) FROM erp_purchase_return as debit_note WHERE debit_note.invoice_no_id=journal.id AND debit_note.purchase_return_type_id!='95' AND debit_note.is_delete_status='0') - (SELECT COALESCE(SUM(debit_note.purchase_return_total_net_amount),0) FROM erp_purchase_return as debit_note WHERE debit_note.invoice_no_id=journal.id AND debit_note.purchase_return_type_id='95' AND debit_note.is_delete_status='0') as return_amt,(SELECT COALESCE(SUM(vc_child.voucher_child_balance),0) FROM erp_voucher_child as vc_child WHERE vc_child.tax_invoice_id=journal.id AND vc_child.voucher_child_invoice_type='journalpurchase' AND vc_child.is_delete_status='0') as paid,(SELECT voucher.voucher_date FROM erp_voucher as voucher LEFT JOIN erp_voucher_child as child ON child.voucher_id=voucher.id WHERE child.tax_invoice_id=journal.id AND child.voucher_child_invoice_type='journalpurchase' AND child.is_delete_status='0' ORDER BY child.id DESC LIMIT 1) as due_on FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT mill.mill_tax_invoice_date as invoice_date,mill.mill_tax_invoice_no as invoice_no,'mill' as book,mill.mill_tax_invoice_total_net_amount as amount,0 as return_amt,(SELECT COALESCE(SUM(vc_child.voucher_child_balance),0) FROM erp_voucher_child as vc_child WHERE vc_child.tax_invoice_id=mill.id AND vc_child.voucher_child_invoice_type='mill' AND vc_child.is_delete_status='0') as paid,(SELECT voucher.voucher_date FROM erp_voucher as voucher LEFT JOIN erp_voucher_child as child ON child.voucher_id=voucher.id WHERE child.tax_invoice_id=mill.id AND child.voucher_child_invoice_type='mill' AND child.is_delete_status='0' ORDER BY child.id DESC LIMIT 1) as due_on FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT jober.jober_invoice_date as invoice_date,jober.jober_invoice_no as invoice_no,'jober' as book,jober.jober_invoice_total_net_amount as amount,0 as return_amt,(SELECT COALESCE(SUM(vc_child.voucher_child_balance),0) FROM erp_voucher_child as vc_child WHERE vc_child.tax_invoice_id=jober.id AND vc_child.voucher_child_invoice_type='jober' AND vc_child.is_delete_status='0') as paid,(SELECT voucher.voucher_date FROM erp_voucher as voucher LEFT JOIN erp_voucher_child as child ON child.voucher_id=voucher.id WHERE child.tax_invoice_id=jober.id AND child.voucher_child_invoice_type='jober' AND child.is_delete_status='0' ORDER BY child.id DESC LIMIT 1) as due_on FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND jober.jober_id=login_party_id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date UNION ALL SELECT sale.sale_tax_invoice_date as invoice_date,sale.sale_tax_invoice_no as invoice_no,'sale' as book,sale.sale_tax_invoice_total_net_amount as amount,(SELECT COALESCE(SUM(credit_note.sale_return_total_net_amount),0) FROM erp_sale_return as credit_note WHERE credit_note.invoice_no_id=sale.id AND credit_note.sale_return_type_id!='97' AND credit_note.is_delete_status='0') - (SELECT COALESCE(SUM(credit_note.sale_return_total_net_amount),0) FROM erp_sale_return as credit_note WHERE credit_note.invoice_no_id=sale.id AND credit_note.sale_return_type_id='97' AND credit_note.is_delete_status='0') as return_amt,(SELECT COALESCE(SUM(vc_child.voucher_child_balance),0) FROM erp_voucher_child as vc_child WHERE vc_child.tax_invoice_id=sale.id AND vc_child.voucher_child_invoice_type='sale' AND vc_child.is_delete_status='0') as paid,(SELECT voucher.voucher_date FROM erp_voucher as voucher LEFT JOIN erp_voucher_child as child ON child.voucher_id=voucher.id WHERE child.tax_invoice_id=sale.id AND child.voucher_child_invoice_type='sale' AND child.is_delete_status='0' ORDER BY child.id DESC LIMIT 1) as due_on FROM erp_sale_tax_invoice as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.buyer_id=login_party_id AND sale.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `change_password`(IN `update_id` INT, IN `update_confirm_password` VARCHAR(100), IN `update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'change_password');

 END;

   UPDATE `erp_user` SET `user_password`=update_confirm_password,`user_update_date`=update_date WHERE id=update_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `change_status_sale_child`(IN `change_id` INT, IN `login_order_status` VARCHAR(100), IN `delete_date` DATETIME)
BEGIN
	DECLARE exit handler for SQLEXCEPTION

     BEGIN
        GET DIAGNOSTICS CONDITION 1 
        @sqlstate = RETURNED_SQLSTATE,@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
        
        INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'change_status_sale_child');
     END;
     
  	UPDATE `erp_sale_child` SET `order_status`=login_order_status,`sale_child_update_date`=delete_date WHERE id=change_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_account_head`(IN `update_id` INT, IN `login_user_id` INT, IN `login_head_id` INT, IN `login_account_head_name` VARCHAR(255), IN `login_account_head_short_name` VARCHAR(255), IN `login_entery_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_account_head');

 END;

IF update_id > 0 THEN
	UPDATE erp_account_head SET account_head_id=login_head_id,user_id=login_user_id,account_head_name=login_account_head_name,account_head_short_name=login_account_head_short_name,account_head_update_date=login_update_date WHERE id=update_id;
	
ELSE

	INSERT INTO erp_account_head(user_id,account_head_name,account_head_short_name,account_head_id, account_head_entry_date,account_head_update_date) VALUES (login_user_id,login_account_head_name,login_account_head_short_name,login_head_id,login_entery_date,login_update_date);

	SELECT erp_account_head.id as account_head_id,erp_account_head.* FROM erp_account_head WHERE id = LAST_INSERT_ID();
    
    
END IF;
    
    

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_all_activity_log`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_type` VARCHAR(255), IN `login_description` VARCHAR(255), IN `login_page` VARCHAR(255), IN `login_entry_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_all_activity_log');

 END;

   INSERT INTO erp_activity_log(user_id,company_id,type,description,page,activity_log_entry_date) VALUES (login_user_id,login_company_id,login_type,login_description,login_page,login_entry_date);
	

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_bank`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_bank_name` VARCHAR(255), IN `login_bank_ac_no` VARCHAR(100), IN `login_bank_branch_name` VARCHAR(255), IN `login_bank_ifsc_code` VARCHAR(255), IN `login_entery_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_bank');

 END;

IF update_id > 0 THEN

	UPDATE `erp_bank` SET `user_id`=login_user_id,`company_id`=login_company_id,`year_id`=login_year_id,`bank_name`=login_bank_name,`bank_ac_no`=login_bank_ac_no,`bank_branch_name`=login_bank_branch_name,`bank_ifsc_code`=login_bank_ifsc_code,`bank_update_date`=login_update_date WHERE id = update_id;

ELSE
	INSERT INTO `erp_bank`(`user_id`, `company_id`, `year_id`, `bank_name`, `bank_ac_no`, `bank_branch_name`, `bank_ifsc_code`, `bank_entry_date`, `bank_update_date`) VALUES (login_user_id,login_company_id,login_year_id,login_bank_name,login_bank_ac_no,login_bank_branch_name,login_bank_ifsc_code,login_entery_date,login_update_date);
    
    SELECT id as bank_id,erp_bank.* FROM erp_bank WHERE id = LAST_INSERT_ID();
END IF;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_branch`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_state_id` INT, IN `login_industries_id` INT, IN `login_branch_name` VARCHAR(255), IN `login_branch_address` TEXT, IN `login_branch_pincode` INT, IN `login_branch_gst_no` VARCHAR(255), IN `login_branch_code` VARCHAR(100), IN `login_branch_mobile_1` VARCHAR(255), IN `login_branch_mobile_2` VARCHAR(255), IN `login_branch_mobile_3` VARCHAR(255), IN `login_branch_bill_of_supply` VARCHAR(255), IN `login_branch_tax_invoice` VARCHAR(255), IN `login_branch_invoice` VARCHAR(255), IN `login_branch_sales_journal` VARCHAR(255), IN `login_branch_sales_return` VARCHAR(255), IN `login_branch_sgst_payble` VARCHAR(100), IN `login_branch_cgst_payble` VARCHAR(100), IN `login_branch_igst_payble` VARCHAR(100), IN `login_branch_sgst_receivable` VARCHAR(100), IN `login_branch_cgst_receivable` VARCHAR(100), IN `login_branch_igst_receivable` VARCHAR(100), IN `login_branch_interim_sgst_payble` VARCHAR(100), IN `login_branch_interim_cgst_payble` VARCHAR(100), IN `login_branch_interim_igst_payble` VARCHAR(100), IN `login_branch_interim_sgst_receivable` VARCHAR(100), IN `login_branch_interim_cgst_receivable` VARCHAR(100), IN `login_branch_interim_igst_receivable` VARCHAR(100), IN `login_branch_sale_return_sgst` VARCHAR(100), IN `login_branch_sale_return_cgst` VARCHAR(100), IN `login_branch_sale_return_igst` VARCHAR(100), IN `login_branch_purchase_return_sgst` VARCHAR(100), IN `login_branch_purchase_return_cgst` VARCHAR(100), IN `login_branch_purchase_return_igst` VARCHAR(100), IN `login_branch_gst_tax_payble` VARCHAR(100), IN `login_branch_tcs_payble` VARCHAR(100), IN `login_branch_tcs_receivable` VARCHAR(100), IN `login_branch_shipping_charge` VARCHAR(255), IN `login_branch_expenses` VARCHAR(255), IN `login_entery_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_branch');

 END;

IF update_id > 0 THEN

	UPDATE `erp_branch` SET `user_id`=login_user_id,`company_id`=login_company_id,`state_id`=login_state_id,`industries_id`=login_industries_id,`branch_name`=login_branch_name,`branch_address`=login_branch_address,`branch_pincode`=login_branch_pincode,`branch_gst_no`=login_branch_gst_no,`branch_code`=login_branch_code,`branch_mobile_1`=login_branch_mobile_1,`branch_mobile_2`=login_branch_mobile_2,`branch_mobile_3`=login_branch_mobile_3,`branch_bill_of_supply`=login_branch_bill_of_supply,`branch_tax_invoice`=login_branch_tax_invoice,`branch_invoice`=login_branch_invoice,`branch_sales_journal`=login_branch_sales_journal,`branch_sales_return`=login_branch_sales_return,`branch_sgst_payble`=login_branch_sgst_payble,`branch_cgst_payble`=login_branch_cgst_payble,`branch_igst_payble`=login_branch_igst_payble,`branch_sgst_receivable`=login_branch_sgst_receivable,`branch_cgst_receivable`=login_branch_cgst_receivable,`branch_igst_receivable`=login_branch_igst_receivable,`branch_interim_sgst_payble`=login_branch_interim_sgst_payble,`branch_interim_cgst_payble`=login_branch_interim_cgst_payble,`branch_interim_igst_payble`=login_branch_interim_igst_payble,`branch_interim_sgst_receivable`=login_branch_interim_sgst_receivable,`branch_interim_cgst_receivable`=login_branch_interim_cgst_receivable,`branch_interim_igst_receivable`=login_branch_interim_igst_receivable,`branch_sale_return_sgst`=login_branch_sale_return_sgst,`branch_sale_return_cgst`=login_branch_sale_return_cgst,`branch_sale_return_igst`=login_branch_sale_return_igst,`branch_purchase_return_sgst`=login_branch_purchase_return_sgst,`branch_purchase_return_cgst`=login_branch_purchase_return_cgst,`branch_purchase_return_igst`=login_branch_purchase_return_igst,`branch_gst_tax_payble`=login_branch_gst_tax_payble,`branch_tcs_payble`=login_branch_tcs_payble,`branch_tcs_receivable`=login_branch_tcs_receivable,`branch_shipping_charge`=login_branch_shipping_charge,`branch_expenses`=login_branch_expenses,`branch_update_date`=login_update_date WHERE id = update_id;

ELSE
	INSERT INTO erp_branch(user_id,company_id,state_id,industries_id,branch_name,branch_address,branch_pincode,branch_gst_no,branch_code,branch_mobile_1, branch_mobile_2,branch_mobile_3,branch_bill_of_supply,branch_tax_invoice,branch_invoice,branch_sales_journal,branch_sales_return,branch_sgst_payble, branch_cgst_payble,branch_igst_payble,branch_sgst_receivable,branch_cgst_receivable,branch_igst_receivable,branch_interim_sgst_payble,branch_interim_cgst_payble, branch_interim_igst_payble,branch_interim_sgst_receivable,branch_interim_cgst_receivable,branch_interim_igst_receivable,branch_sale_return_sgst, branch_sale_return_cgst,branch_sale_return_igst,branch_purchase_return_sgst,branch_purchase_return_cgst,branch_purchase_return_igst,branch_gst_tax_payble, branch_tcs_payble,branch_tcs_receivable,branch_shipping_charge,branch_expenses,branch_entry_date,branch_update_date) VALUES (login_user_id,login_company_id,login_state_id,login_industries_id,login_branch_name,login_branch_address,login_branch_pincode,login_branch_gst_no,login_branch_code,login_branch_mobile_1,login_branch_mobile_2,login_branch_mobile_3,login_branch_bill_of_supply,login_branch_tax_invoice,login_branch_invoice,login_branch_sales_journal,login_branch_sales_return,login_branch_sgst_payble,login_branch_cgst_payble,login_branch_igst_payble,login_branch_sgst_receivable,login_branch_cgst_receivable,login_branch_igst_receivable,login_branch_interim_sgst_payble,login_branch_interim_cgst_payble,login_branch_interim_igst_payble,login_branch_interim_sgst_receivable,login_branch_interim_cgst_receivable,login_branch_interim_igst_receivable,login_branch_sale_return_sgst,login_branch_sale_return_cgst,login_branch_sale_return_igst,login_branch_purchase_return_sgst,login_branch_purchase_return_cgst,login_branch_purchase_return_igst,login_branch_gst_tax_payble,login_branch_tcs_payble,login_branch_tcs_receivable,login_branch_shipping_charge,login_branch_expenses,login_entery_date,login_update_date);
    
    SELECT id as branch_id,erp_branch.* FROM erp_branch WHERE id = LAST_INSERT_ID();
END IF;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_brand`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_supplier_id` INT, IN `login_brand_name` VARCHAR(255), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_brand');

 END;

IF update_id > 0 THEN

	UPDATE `erp_brand` SET `user_id`=login_user_id,`company_id`=login_company_id,`supplier_id`=login_supplier_id,`brand_name`=login_brand_name,`brand_update_date`=login_update_date WHERE id=update_id;
ELSE

	INSERT INTO `erp_brand`(`user_id`, `company_id`, `supplier_id`, `brand_name`,`brand_entry_date`, `brand_update_date`) VALUES (login_user_id,login_company_id,login_supplier_id,login_brand_name,login_entry_date,login_update_date);
	
    SELECT id as brand_id,erp_brand.* FROM erp_brand WHERE id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_category`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_category_name` VARCHAR(255), IN `login_category_type` VARCHAR(255), IN `login_entery_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_category');

 END;

IF update_id > 0 THEN

	UPDATE erp_category SET user_id=login_user_id,company_id=login_company_id,category_name=login_category_name,category_type=login_category_type,category_update_date=login_update_date WHERE id=update_id;
ELSE

	INSERT INTO erp_category (user_id,company_id,category_name,category_type,category_entry_date,category_update_date) VALUES (login_user_id,login_company_id,login_category_name,login_category_type,login_entery_date,login_update_date);
	
    SELECT id as category_id,erp_category.* FROM erp_category WHERE id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_company`(IN `login_user_id` INT, IN `login_company_name` VARCHAR(255), IN `login_company_address` VARCHAR(255), IN `login_year_id` INT, IN `login_industries_id` INT, IN `login_company_business_group` VARCHAR(255), IN `login_company_code` INT, IN `login_company_entery_date` DATETIME, IN `login_company_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_company');

 END;

   
    INSERT INTO erp_company(user_id,company_name,company_address,year_id,industries_id,company_business_group,company_code,company_entery_date,company_update_date) VALUES (login_user_id,login_company_name,login_company_address,login_year_id,login_industries_id,login_company_business_group,login_company_code,login_company_entery_date,login_company_update_date);
    
    SELECT id as company_id,null as branch_id,null as branch_name,null as state_id,null as godown_id,null as godown_name,erp_company.* FROM erp_company WHERE id = LAST_INSERT_ID();
    
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_company_user_relation`(IN `login_user_id` INT, IN `login_company_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_company_user_relation');

 END;


	INSERT INTO erp_company_user_relation(user_id,company_id) VALUES (login_user_id,login_company_id);

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_company_year_data`(IN `login_company_id` INT, IN `login_year_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_company_year_data');

 END;

	INSERT INTO erp_company_year(company_id,year_id) VALUES (login_company_id,login_year_id);

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_default_branch`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_state_id` INT, IN `login_branch_name` VARCHAR(255), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_default_branch');

 END;
 
	INSERT INTO erp_branch (user_id,company_id,state_id,branch_name,branch_entry_date,branch_update_date) VALUES (login_user_id,login_company_id,login_state_id,login_branch_name,login_entry_date,login_update_date);

SELECT id as branch_id,company_id,branch_name,state_id FROM erp_branch WHERE id = LAST_INSERT_ID();
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_default_depreciation_rate`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_party_id` INT, IN `login_depreciation_rate_amount` VARCHAR(100), IN `login_depreciation_rate_rate` VARCHAR(100), IN `login_depreciation_rate_depreciation` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_default_depreciation_rate');

 END;
 
 IF update_id > 0 THEN
 
    UPDATE `erp_depreciation_rate` SET `user_id`=login_user_id,`company_id`=login_company_id,`party_id`=login_party_id,`depreciation_rate_amount`=login_depreciation_rate_amount,`depreciation_rate_rate`=login_depreciation_rate_rate,`depreciation_rate_depreciation`=login_depreciation_rate_depreciation,`depreciation_rate_update_date`=login_update_date WHERE id=update_id;
    
ELSE

 	INSERT INTO `erp_depreciation_rate`(`user_id`, `company_id`, `party_id`, `depreciation_rate_amount`, `depreciation_rate_rate`, `depreciation_rate_depreciation`,`depreciation_rate_entry_date`, `depreciation_rate_update_date`) VALUES (login_user_id,login_company_id,login_party_id,login_depreciation_rate_amount,login_depreciation_rate_rate,login_depreciation_rate_depreciation,login_entry_date,login_update_date);

    SELECT id as depreciation_rate_id,erp_depreciation_rate.* FROM erp_depreciation_rate WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_default_godown`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT, IN `login_godown_name` VARCHAR(255), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_default_godown');

 END;
 
	INSERT INTO `erp_godown`(`user_id`, `company_id`, `year_id`, `branch_id`, `godown_name`, `godown_entry_date`, `godown_update_date`) VALUES (login_user_id,login_company_id,login_year_id,login_branch_id,login_godown_name,login_entry_date,login_update_date);
    
SELECT id as godown_id,company_id,branch_id,godown_name FROM erp_godown WHERE id = LAST_INSERT_ID();

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_default_party`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_account_head_id` INT, IN `login_party_name` VARCHAR(255), IN `login_is_primary` VARCHAR(50), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_default_party');

 END;
 
	INSERT INTO `erp_party`(`user_id`, `company_id`,`account_head_id`, `party_name`,`is_primary`,`party_entry_date`, `party_update_date`) VALUES (login_user_id,login_company_id,login_account_head_id,login_party_name,login_is_primary,login_entry_date,login_update_date);


END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_default_tds_rate`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_godown_id` INT, IN `login_nature_of_payment_id` INT, IN `login_status_id` INT, IN `login_tds_rate` VARCHAR(100), IN `login_entery_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_default_tds_rate');

 END;

IF update_id > 0 THEN
	
    UPDATE `erp_tds_rate` SET `user_id`=login_user_id,`year_id`=login_year_id,`company_id`=login_company_id,`branch_id`=login_branch_id,`godown_id`=login_godown_id,`nature_of_payment_id`=login_nature_of_payment_id,`status_id`=login_status_id,`tds_rate`=login_tds_rate,`tds_rate_update_date`=login_update_date WHERE id=update_id;
	
ELSE

	INSERT INTO `erp_tds_rate`(`user_id`, `year_id`, `company_id`, `branch_id`, `godown_id`, `nature_of_payment_id`, `status_id`, `tds_rate`, `tds_rate_entry_date`, `tds_rate_update_date`) VALUES (login_user_id,login_year_id,login_company_id,login_branch_id,login_godown_id,login_nature_of_payment_id,login_status_id,login_tds_rate,login_entery_date,login_update_date);

	SELECT id as tds_rate_id,erp_tds_rate.* FROM erp_tds_rate WHERE id = LAST_INSERT_ID();
    
    
END IF;
    
    

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_default_voucher`(IN `login_user_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_from_party_id` INT, IN `login_to_party_id` INT, IN `login_voucher_type` VARCHAR(100), IN `login_voucher_transaction_type` VARCHAR(100), IN `login_voucher_no` VARCHAR(100), IN `login_voucher_date` VARCHAR(100), IN `login_voucher_amount` VARCHAR(100), IN `login_invoice_id` INT, IN `login_invoice_type` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  @sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_default_voucher');

END;

 INSERT INTO `erp_voucher`(`user_id`, `branch_id`, `company_id`, `year_id`, `from_party_id`, `to_party_id`, `voucher_type`,`voucher_transaction_type`,`voucher_no`, `voucher_date`, `voucher_amount`, `invoice_id`, `invoice_type`, `voucher_entry_date`, `voucher_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_from_party_id,login_to_party_id,login_voucher_type,login_voucher_transaction_type,login_voucher_no,login_voucher_date,login_voucher_amount,login_invoice_id,login_invoice_type,login_entry_date,login_update_date);
     
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_finish_receive`(IN `update_id` INT, IN `login_user_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_godown_id` INT, IN `login_quality_id` INT, IN `login_mill_id` INT, IN `login_grey_issue_id` INT, IN `login_mill_receive_mill_challan_no` VARCHAR(100), IN `login_mill_receive_date` VARCHAR(100), IN `login_mill_receive_taka` VARCHAR(100), IN `login_mill_receive_qty` VARCHAR(100), IN `login_mill_receive_weight` VARCHAR(100), IN `login_mill_grey_issue_taka` VARCHAR(100), IN `login_mill_grey_issue_meter` VARCHAR(100), IN `login_mill_grey_issue_weight` VARCHAR(100), IN `login_mill_receive_width` VARCHAR(100), IN `login_mill_receive_remark` VARCHAR(100), IN `login_mill_receive_shortage` VARCHAR(100), IN `login_mill_receive_mill_lot_no` VARCHAR(100), IN `login_mill_receive_lot_completed` VARCHAR(100), IN `login_is_grey_return` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_finish_receive');

 END;

 IF update_id > 0 THEN
 
 	UPDATE `erp_mill_receive` SET `user_id`=login_user_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`godown_id`=login_godown_id,`quality_id`=login_quality_id,`mill_id`=login_mill_id,`grey_issue_id`=login_grey_issue_id,`mill_receive_mill_challan_no`=login_mill_receive_mill_challan_no,`mill_receive_date`=login_mill_receive_date,`mill_receive_taka`=login_mill_receive_taka,`mill_receive_qty`=login_mill_receive_qty,`mill_receive_weight`=login_mill_receive_weight,`mill_grey_issue_taka`=login_mill_grey_issue_taka,`mill_grey_issue_meter`=login_mill_grey_issue_meter,`mill_grey_issue_weight`=login_mill_grey_issue_weight,`mill_receive_width`=login_mill_receive_width,`mill_receive_remark`=login_mill_receive_remark,`mill_receive_shortage`=login_mill_receive_shortage,`mill_receive_mill_lot_no`=login_mill_receive_mill_lot_no,`mill_receive_lot_completed`=login_mill_receive_lot_completed,`is_grey_return`=login_is_grey_return,`mill_receive_update_date`=login_update_date WHERE id=update_id;

ELSE
    
    INSERT INTO `erp_mill_receive`(`user_id`, `branch_id`, `company_id`, `year_id`, `godown_id`, `quality_id`, `mill_id`, `grey_issue_id`, `mill_receive_mill_challan_no`, `mill_receive_date`, `mill_receive_taka`, `mill_receive_qty`, `mill_receive_weight`,`mill_grey_issue_taka`,`mill_grey_issue_meter`,`mill_grey_issue_weight`, `mill_receive_width`, `mill_receive_remark`, `mill_receive_shortage`, `mill_receive_mill_lot_no`, `mill_receive_lot_completed`, `is_grey_return`, `mill_receive_entry_date`, `mill_receive_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_godown_id,login_quality_id,login_mill_id,login_grey_issue_id,login_mill_receive_mill_challan_no,login_mill_receive_date,login_mill_receive_taka,login_mill_receive_qty,login_mill_receive_weight,login_mill_grey_issue_taka,login_mill_grey_issue_meter,login_mill_grey_issue_weight,login_mill_receive_width,login_mill_receive_remark,login_mill_receive_shortage,login_mill_receive_mill_lot_no,login_mill_receive_lot_completed,login_is_grey_return,login_entry_date,login_update_date);
    
    SELECT id as mill_receive_id,erp_mill_receive.* FROM erp_mill_receive WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_godown`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT, IN `login_godown_name` VARCHAR(255), IN `login_godown_address` VARCHAR(255), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_godown');

 END;

IF update_id > 0 THEN

	UPDATE `erp_godown` SET `user_id`=login_user_id,`company_id`=login_company_id,`year_id`=login_year_id,`branch_id`=login_branch_id,`godown_name`=login_godown_name,`godown_address`=login_godown_address,`godown_update_date`=login_update_date WHERE id=update_id;

ELSE

	INSERT INTO `erp_godown`(`user_id`, `company_id`, `year_id`, `branch_id`, `godown_name`, `godown_address`, `godown_entry_date`, `godown_update_date`) VALUES (login_user_id,login_company_id,login_year_id,login_branch_id,login_godown_name,login_godown_address,login_entry_date,login_update_date);
	
    SELECT id as godown_id,erp_godown.* FROM erp_godown WHERE id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_godown_level`(IN `update_id` INT, IN `login_user_id` INT, IN `login_godown_id` INT, IN `login_godown_level_name` VARCHAR(255), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_godown_level');

 END;
 
 IF update_id > 0 THEN
 	UPDATE `erp_godown_level` SET `user_id`=login_user_id,`godown_id`=login_godown_id,`godown_level_name`=login_godown_level_name,`godown_level_update_date`=login_update_date WHERE id=update_id;
 
ELSE
	INSERT INTO `erp_godown_level`(`user_id`, `godown_id`, `godown_level_name`, `godown_level_entry_date`, `godown_level_update_date`) VALUES (login_user_id,login_godown_id,login_godown_level_name,login_entry_date,login_update_date);
	
    SELECT id as godown_level_id,erp_godown_level.* FROM erp_godown_level WHERE id = LAST_INSERT_ID();
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_grey_issue`(IN `update_id` INT, IN `login_user_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_godown_id` INT, IN `login_purchase_tax_invoice_child_id` INT, IN `login_quality_id` INT, IN `login_mill_id` INT, IN `login_grey_issue_prefix` VARCHAR(100), IN `login_grey_issue_challan_no` VARCHAR(100), IN `login_grey_issue_mill_lot_no` VARCHAR(100), IN `login_grey_issue_date` VARCHAR(100), IN `login_grey_issue_taka` VARCHAR(100), IN `login_grey_issue_meter` VARCHAR(100), IN `login_grey_issue_weight` VARCHAR(100), IN `login_grey_issue_remark` TEXT, IN `login_grey_issue_job_type` VARCHAR(100), IN `login_is_rf` VARCHAR(50), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_grey_issue');

 END;

 IF update_id > 0 THEN

 	UPDATE `erp_grey_issue` SET `user_id`=login_user_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`godown_id`=login_godown_id,`purchase_tax_invoice_child_id`=login_purchase_tax_invoice_child_id,`quality_id`=login_quality_id,`mill_id`=login_mill_id,`grey_issue_prefix`=login_grey_issue_prefix,`grey_issue_challan_no`=login_grey_issue_challan_no,`grey_issue_mill_lot_no`=login_grey_issue_mill_lot_no,`grey_issue_date`=login_grey_issue_date,`grey_issue_taka`=login_grey_issue_taka,`grey_issue_meter`=login_grey_issue_meter,`grey_issue_weight`=login_grey_issue_weight,`grey_issue_remark`=login_grey_issue_remark,`grey_issue_job_type`=login_grey_issue_job_type,`is_rf`=login_is_rf,`grey_issue_update_date`=login_update_date WHERE id=update_id;

ELSE
    
    INSERT INTO `erp_grey_issue`(`user_id`, `branch_id`, `company_id`, `year_id`, `godown_id`, `purchase_tax_invoice_child_id`, `quality_id`, `mill_id`, `grey_issue_prefix`, `grey_issue_challan_no`, `grey_issue_mill_lot_no`, `grey_issue_date`, `grey_issue_taka`, `grey_issue_meter`, `grey_issue_weight`, `grey_issue_remark`, `grey_issue_job_type`,`is_rf`,`grey_issue_entry_date`, `grey_issue_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_godown_id,login_purchase_tax_invoice_child_id,login_quality_id,login_mill_id,login_grey_issue_prefix,login_grey_issue_challan_no,login_grey_issue_mill_lot_no,login_grey_issue_date,login_grey_issue_taka,login_grey_issue_meter,login_grey_issue_weight,login_grey_issue_remark,login_grey_issue_job_type,login_is_rf,login_entry_date,login_update_date);
    
    SELECT id as grey_issue_id,erp_grey_issue.* FROM erp_grey_issue WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_inventory`(IN `update_id` INT, IN `login_user_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_godown_id` INT, IN `login_quality_type_id` INT, IN `login_jober_id` INT, IN `login_jober_godown_address_id` INT, IN `login_broker_id` INT, IN `login_haste_id` INT, IN `login_order_no_id` INT, IN `login_inventory_order_no` VARCHAR(100), IN `login_inventory_prefix` VARCHAR(100), IN `login_inventory_challan_no` TEXT, IN `login_inventory_challan_date` VARCHAR(50), IN `login_inventory_lf_no` VARCHAR(100), IN `login_inventory_remark` VARCHAR(100), IN `login_inventory_total_unit_sent` VARCHAR(100), IN `login_inventory_total_qty_sent` VARCHAR(100), IN `login_inventory_total_net_meter` VARCHAR(100), IN `login_inventory_total_rate` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_inventory');

 END;
 
 IF update_id > 0 THEN
 
    UPDATE `erp_inventory` SET `user_id`=login_user_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`godown_id`=login_godown_id,`quality_type_id`=login_quality_type_id,`jober_id`=login_jober_id,`jober_godown_address_id`=login_jober_godown_address_id,`broker_id`=login_broker_id,`haste_id`=login_haste_id,`order_no_id`=login_order_no_id,`inventory_order_no`=login_inventory_order_no,`inventory_prefix`=login_inventory_prefix,`inventory_challan_no`=login_inventory_challan_no,`inventory_challan_date`=login_inventory_challan_date,`inventory_lf_no`=login_inventory_lf_no,`inventory_remark`=login_inventory_remark,`inventory_total_unit_sent`=login_inventory_total_unit_sent,`inventory_total_qty_sent`=login_inventory_total_qty_sent,`inventory_total_net_meter`=login_inventory_total_net_meter,`inventory_total_rate`=login_inventory_total_rate,`inventory_update_date`=login_update_date WHERE id=update_id;
    
ELSE

 	INSERT INTO `erp_inventory`(`user_id`, `branch_id`, `company_id`, `year_id`, `godown_id`, `quality_type_id`, `jober_id`, `jober_godown_address_id`, `broker_id`, `haste_id`, `order_no_id`, `inventory_order_no`, `inventory_prefix`, `inventory_challan_no`, `inventory_challan_date`, `inventory_lf_no`, `inventory_remark`, `inventory_total_unit_sent`, `inventory_total_qty_sent`, `inventory_total_net_meter`, `inventory_total_rate`, `inventory_entry_date`, `inventory_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_godown_id,login_quality_type_id,login_jober_id,login_jober_godown_address_id,login_broker_id,login_haste_id,login_order_no_id,login_inventory_order_no,login_inventory_prefix,login_inventory_challan_no,login_inventory_challan_date,login_inventory_lf_no,login_inventory_remark,login_inventory_total_unit_sent,login_inventory_total_qty_sent,login_inventory_total_net_meter,login_inventory_total_rate,login_entry_date,login_update_date);

    SELECT id as inventory_id,erp_inventory.* FROM erp_inventory WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_inventory_child`(IN `update_id` INT, IN `login_user_id` INT, IN `login_inventory_id` INT, IN `login_quality_id` INT, IN `login_qty_per_id` INT, IN `login_inventory_child_remark` TEXT, IN `login_inventory_child_hsn` VARCHAR(100), IN `login_inventory_child_stock` VARCHAR(100), IN `login_inventory_child_pkg` VARCHAR(100), IN `login_inventory_child_unit_sent` VARCHAR(100), IN `login_inventory_child_qty_sent` VARCHAR(100), IN `login_inventory_child_fold` VARCHAR(100), IN `login_inventory_child_net_meter` VARCHAR(100), IN `login_inventory_child_rate` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_inventory_child');

 END;

IF update_id > 0 THEN

    UPDATE `erp_inventory_child` SET `user_id`=login_user_id,`inventory_id`=login_inventory_id,`quality_id`=login_quality_id,`qty_per_id`=login_qty_per_id,`inventory_child_remark`=login_inventory_child_remark,`inventory_child_hsn`=login_inventory_child_hsn,`inventory_child_stock`=login_inventory_child_stock,`inventory_child_pkg`=login_inventory_child_pkg,`inventory_child_unit_sent`=login_inventory_child_unit_sent,`inventory_child_qty_sent`=login_inventory_child_qty_sent,`inventory_child_fold`=login_inventory_child_fold,`inventory_child_net_meter`=login_inventory_child_net_meter,`inventory_child_rate`=login_inventory_child_rate,`inventory_child_update_date`=login_update_date WHERE id=update_id;

ELSE

	INSERT INTO `erp_inventory_child`( `user_id`, `inventory_id`, `quality_id`, `qty_per_id`, `inventory_child_remark`, `inventory_child_hsn`, `inventory_child_stock`, `inventory_child_pkg`, `inventory_child_unit_sent`, `inventory_child_qty_sent`, `inventory_child_fold`, `inventory_child_net_meter`, `inventory_child_rate`,`inventory_child_entry_date`, `inventory_child_update_date`) VALUES (login_user_id,login_inventory_id,login_quality_id,login_qty_per_id,login_inventory_child_remark,login_inventory_child_hsn,login_inventory_child_stock,login_inventory_child_pkg,login_inventory_child_unit_sent,login_inventory_child_qty_sent,login_inventory_child_fold,login_inventory_child_net_meter,login_inventory_child_rate,login_entry_date,login_update_date);
	
    SELECT id as inventory_child_id,erp_inventory_child.* FROM erp_inventory_child WHERE id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_inventory_invoice`(IN `update_id` INT, IN `login_user_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_godown_id` INT, IN `login_account_head_id` INT, IN `login_processor_id` INT, IN `login_tds_on_id` INT, IN `login_nature_of_payment_id` INT, IN `login_status_id` INT, IN `login_inventory_invoice_no` VARCHAR(100), IN `login_inventory_invoice_date` VARCHAR(100), IN `login_inventory_invoice_lf_no` VARCHAR(100), IN `login_inventory_invoice_total_unit` VARCHAR(100), IN `login_inventory_invoice_total_qty` VARCHAR(100), IN `login_inventory_invoice_total_meter` VARCHAR(100), IN `login_inventory_invoice_total_amount` VARCHAR(100), IN `login_inventory_invoice_total_disc_amt` VARCHAR(100), IN `login_inventory_invoice_total_freight` TEXT, IN `login_inventory_invoice_total_freight_less` VARCHAR(100), IN `login_inventory_invoice_total_taxable` VARCHAR(100), IN `login_inventory_invoice_total_sgst` VARCHAR(100), IN `login_inventory_invoice_total_cgst` VARCHAR(100), IN `login_inventory_invoice_total_igst` VARCHAR(100), IN `login_inventory_invoice_total_total` VARCHAR(100), IN `login_is_invoice_base_on_grey` VARCHAR(100), IN `login_is_tds_deduction` VARCHAR(100), IN `login_inventory_invoice_applicable_rate` VARCHAR(100), IN `login_inventory_invoice_total_tds` VARCHAR(100), IN `login_inventory_invoice_total_included_tax_amount` VARCHAR(100), IN `login_inventory_invoice_total_round_off` VARCHAR(100), IN `login_inventory_invoice_total_net_amount` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_inventory_invoice');

 END;

 IF update_id > 0 THEN

 	UPDATE `erp_inventory_invoice` SET `user_id`=login_user_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`godown_id`=login_godown_id,`account_head_id`=login_account_head_id,`processor_id`=login_processor_id,`tds_on_id`=login_tds_on_id,`nature_of_payment_id`=login_nature_of_payment_id,`status_id`=login_status_id,`inventory_invoice_no`=login_inventory_invoice_no,`inventory_invoice_date`=login_inventory_invoice_date,`inventory_invoice_lf_no`=login_inventory_invoice_lf_no,`inventory_invoice_total_unit`=login_inventory_invoice_total_unit,`inventory_invoice_total_qty`=login_inventory_invoice_total_qty,`inventory_invoice_total_meter`=login_inventory_invoice_total_meter,`inventory_invoice_total_amount`=login_inventory_invoice_total_amount,`inventory_invoice_total_disc_amt`=login_inventory_invoice_total_disc_amt,`inventory_invoice_total_freight`=login_inventory_invoice_total_freight,`inventory_invoice_total_freight_less`=login_inventory_invoice_total_freight_less,`inventory_invoice_total_taxable`=login_inventory_invoice_total_taxable,`inventory_invoice_total_sgst`=login_inventory_invoice_total_sgst,`inventory_invoice_total_cgst`=login_inventory_invoice_total_cgst,`inventory_invoice_total_igst`=login_inventory_invoice_total_igst,`inventory_invoice_total_total`=login_inventory_invoice_total_total,`is_invoice_base_on_grey`=login_is_invoice_base_on_grey,`is_tds_deduction`=login_is_tds_deduction,`inventory_invoice_applicable_rate`=login_inventory_invoice_applicable_rate,`inventory_invoice_total_tds`=login_inventory_invoice_total_tds,`inventory_invoice_total_included_tax_amount`=login_inventory_invoice_total_included_tax_amount,`inventory_invoice_total_round_off`=login_inventory_invoice_total_round_off,`inventory_invoice_total_net_amount`=login_inventory_invoice_total_net_amount,`inventory_invoice_update_date`=login_update_date WHERE id=update_id;

ELSE
   
   INSERT INTO `erp_inventory_invoice`(`user_id`, `branch_id`, `company_id`, `year_id`, `godown_id`, `account_head_id`,`processor_id`, `tds_on_id`, `nature_of_payment_id`, `status_id`, `inventory_invoice_no`, `inventory_invoice_date`, `inventory_invoice_lf_no`, `inventory_invoice_total_unit`, `inventory_invoice_total_qty`, `inventory_invoice_total_meter`, `inventory_invoice_total_amount`, `inventory_invoice_total_disc_amt`, `inventory_invoice_total_freight`, `inventory_invoice_total_freight_less`, `inventory_invoice_total_taxable`, `inventory_invoice_total_sgst`, `inventory_invoice_total_cgst`, `inventory_invoice_total_igst`, `inventory_invoice_total_total`, `is_invoice_base_on_grey`, `is_tds_deduction`, `inventory_invoice_applicable_rate`, `inventory_invoice_total_tds`,`inventory_invoice_total_included_tax_amount`, `inventory_invoice_total_round_off`, `inventory_invoice_total_net_amount`, `inventory_invoice_entry_date`, `inventory_invoice_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_godown_id,login_account_head_id,login_processor_id,login_tds_on_id,login_nature_of_payment_id,login_status_id,login_inventory_invoice_no,login_inventory_invoice_date,login_inventory_invoice_lf_no,login_inventory_invoice_total_unit,login_inventory_invoice_total_qty,login_inventory_invoice_total_meter,login_inventory_invoice_total_amount,login_inventory_invoice_total_disc_amt,login_inventory_invoice_total_freight,login_inventory_invoice_total_freight_less,login_inventory_invoice_total_taxable,login_inventory_invoice_total_sgst,login_inventory_invoice_total_cgst,login_inventory_invoice_total_igst,login_inventory_invoice_total_total,login_is_invoice_base_on_grey,login_is_tds_deduction,login_inventory_invoice_applicable_rate,login_inventory_invoice_total_tds,login_inventory_invoice_total_included_tax_amount,login_inventory_invoice_total_round_off,login_inventory_invoice_total_net_amount,login_entry_date,login_update_date);
    
    SELECT id as inventory_invoice_id,erp_inventory_invoice.*,NULL as inventory_child_data FROM erp_inventory_invoice WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_inventory_invoice_child`(IN `update_id` INT, IN `login_user_id` INT, IN `login_inventory_invoice_id` INT, IN `login_inventory_receive_id` INT, IN `login_quality_id` INT, IN `login_gst_id` INT, IN `login_rate_per_id` VARCHAR(100), IN `login_inventory_invoice_child_remark` TEXT, IN `login_inventory_invoice_child_challan_no` VARCHAR(100), IN `login_inventory_invoice_child_unit` VARCHAR(100), IN `login_inventory_invoice_child_qty` VARCHAR(100), IN `login_inventory_invoice_child_rate` VARCHAR(100), IN `login_inventory_invoice_child_amount` VARCHAR(100), IN `login_inventory_invoice_child_disc_per` VARCHAR(100), IN `login_inventory_invoice_child_disc_amt` VARCHAR(100), IN `login_inventory_invoice_child_freight` VARCHAR(100), IN `login_inventory_invoice_child_freight_less` VARCHAR(100), IN `login_inventory_invoice_child_taxable` VARCHAR(100), IN `login_inventory_invoice_child_sgst` VARCHAR(100), IN `login_inventory_invoice_child_cgst` VARCHAR(100), IN `login_inventory_invoice_child_igst` VARCHAR(100), IN `login_inventory_invoice_child_total` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_inventory_invoice_child');

 END;

IF update_id > 0 THEN
	UPDATE `erp_inventory_invoice_child` SET `user_id`=login_user_id,`inventory_invoice_id`=login_inventory_invoice_id,`inventory_receive_id`=login_inventory_receive_id,`quality_id`=login_quality_id,`gst_id`=login_gst_id,`rate_per_id`=login_rate_per_id,`inventory_invoice_child_remark`=login_inventory_invoice_child_remark,`inventory_invoice_child_challan_no`=login_inventory_invoice_child_challan_no,`inventory_invoice_child_unit`=login_inventory_invoice_child_unit,`inventory_invoice_child_qty`=login_inventory_invoice_child_qty,`inventory_invoice_child_rate`=login_inventory_invoice_child_rate,`inventory_invoice_child_amount`=login_inventory_invoice_child_amount,`inventory_invoice_child_disc_per`=login_inventory_invoice_child_disc_per,`inventory_invoice_child_disc_amt`=login_inventory_invoice_child_disc_amt,`inventory_invoice_child_freight`=login_inventory_invoice_child_freight,`inventory_invoice_child_freight_less`=login_inventory_invoice_child_freight_less,`inventory_invoice_child_taxable`=login_inventory_invoice_child_taxable,`inventory_invoice_child_sgst`=login_inventory_invoice_child_sgst,`inventory_invoice_child_cgst`=login_inventory_invoice_child_cgst,`inventory_invoice_child_igst`=login_inventory_invoice_child_igst,`inventory_invoice_child_total`=login_inventory_invoice_child_total,`inventory_invoice_child_update_date`=login_update_date WHERE id=update_id;
ELSE
    INSERT INTO `erp_inventory_invoice_child`(`user_id`, `inventory_invoice_id`, `inventory_receive_id`, `quality_id`, `gst_id`, `rate_per_id`, `inventory_invoice_child_remark`, `inventory_invoice_child_challan_no`, `inventory_invoice_child_unit`, `inventory_invoice_child_qty`, `inventory_invoice_child_rate`, `inventory_invoice_child_amount`, `inventory_invoice_child_disc_per`, `inventory_invoice_child_disc_amt`, `inventory_invoice_child_freight`, `inventory_invoice_child_freight_less`, `inventory_invoice_child_taxable`, `inventory_invoice_child_sgst`, `inventory_invoice_child_cgst`, `inventory_invoice_child_igst`, `inventory_invoice_child_total`,`inventory_invoice_child_entry_date`, `inventory_invoice_child_update_date`) VALUES (login_user_id,login_inventory_invoice_id,login_inventory_receive_id,login_quality_id,login_gst_id,login_rate_per_id,login_inventory_invoice_child_remark,login_inventory_invoice_child_challan_no,login_inventory_invoice_child_unit,login_inventory_invoice_child_qty,login_inventory_invoice_child_rate,login_inventory_invoice_child_amount,login_inventory_invoice_child_disc_per,login_inventory_invoice_child_disc_amt,login_inventory_invoice_child_freight,login_inventory_invoice_child_freight_less,login_inventory_invoice_child_taxable,login_inventory_invoice_child_sgst,login_inventory_invoice_child_cgst,login_inventory_invoice_child_igst,login_inventory_invoice_child_total,login_entry_date,login_update_date);
	    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_inventory_receive`(IN `update_id` INT, IN `login_user_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_godown_id` INT, IN `login_inventory_id` INT, IN `login_inventory_child_id` INT, IN `login_receive_quality_id` INT, IN `login_jober_id` INT, IN `login_inventory_receive_no` VARCHAR(100), IN `login_inventory_receive_challan_no` VARCHAR(100), IN `login_inventory_receive_challan_date` VARCHAR(100), IN `login_inventory_receive_lot_no` VARCHAR(100), IN `login_inventory_receive_unit_sent` VARCHAR(100), IN `login_inventory_receive_grey_qty` VARCHAR(100), IN `login_inventory_receive_qty_sent` VARCHAR(100), IN `login_inventory_receive_meter` VARCHAR(100), IN `login_inventory_receive_shortage` VARCHAR(100), IN `login_inventory_receive_remark` TEXT, IN `login_is_receive_completed` VARCHAR(100), IN `login_is_return` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_inventory_receive');

 END;

 IF update_id > 0 THEN

 	UPDATE `erp_inventory_receive` SET `user_id`=login_user_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`godown_id`=login_godown_id,`inventory_id`=login_inventory_id,`inventory_child_id`=login_inventory_child_id,`receive_quality_id`=login_receive_quality_id,`jober_id`=login_jober_id,`inventory_receive_no`=login_inventory_receive_no,`inventory_receive_challan_no`=login_inventory_receive_challan_no,`inventory_receive_challan_date`=login_inventory_receive_challan_date,`inventory_receive_lot_no`=login_inventory_receive_lot_no,`inventory_receive_unit_sent`=login_inventory_receive_unit_sent,`inventory_receive_grey_qty`=login_inventory_receive_grey_qty,`inventory_receive_qty_sent`=login_inventory_receive_qty_sent,`inventory_receive_meter`=login_inventory_receive_meter,`inventory_receive_shortage`=login_inventory_receive_shortage,`inventory_receive_remark`=login_inventory_receive_remark,`is_receive_completed`=login_is_receive_completed,`is_return`=login_is_return,`inventory_receive_update_date`=login_update_date WHERE id=update_id;
    
  ELSE
    
    INSERT INTO `erp_inventory_receive`(`user_id`, `branch_id`, `company_id`, `year_id`, `godown_id`, `inventory_id`, `inventory_child_id`, `receive_quality_id`, `jober_id`, `inventory_receive_no`, `inventory_receive_challan_no`, `inventory_receive_challan_date`, `inventory_receive_lot_no`, `inventory_receive_unit_sent`, `inventory_receive_grey_qty`, `inventory_receive_qty_sent`, `inventory_receive_meter`, `inventory_receive_shortage`, `inventory_receive_remark`, `is_receive_completed`, `is_return`, `inventory_receive_entry_date`, `inventory_receive_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_godown_id,login_inventory_id,login_inventory_child_id,login_receive_quality_id,login_jober_id,login_inventory_receive_no,login_inventory_receive_challan_no,login_inventory_receive_challan_date,login_inventory_receive_lot_no,login_inventory_receive_unit_sent,login_inventory_receive_grey_qty,login_inventory_receive_qty_sent,login_inventory_receive_meter,login_inventory_receive_shortage,login_inventory_receive_remark,login_is_receive_completed,login_is_return,login_entry_date,login_update_date);
        
    SELECT id as inventory_issue_id,erp_inventory_receive.* FROM erp_inventory_receive WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_jober_invoice`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT, IN `login_godown_id` INT, IN `login_sale_jober_receive_id` INT, IN `login_account_head_id` INT, IN `login_jober_invoice_account_type` INT, IN `login_tds_on_id` INT, IN `login_nature_of_payment_id` INT, IN `login_status_id` INT, IN `login_jober_id` INT, IN `login_jober_invoice_no` VARCHAR(100), IN `login_jober_invoice_date` VARCHAR(100), IN `login_jober_invoice_lf_no` VARCHAR(100), IN `login_jober_invoice_total_meter` VARCHAR(100), IN `login_jober_invoice_total_weight` VARCHAR(100), IN `login_jober_invoice_total_total` VARCHAR(100), IN `login_jober_invoice_total_disc_amt` VARCHAR(100), IN `login_jober_invoice_total_taxable` VARCHAR(100), IN `login_jober_invoice_total_sgst` VARCHAR(100), IN `login_jober_invoice_total_cgst` VARCHAR(100), IN `login_jober_invoice_total_igst` VARCHAR(100), IN `is_tds_applicable` VARCHAR(100), IN `login_jober_invoice_applicable_rate` VARCHAR(100), IN `login_jober_invoice_total_tds` VARCHAR(100), IN `login_jober_invoice_total_included_tax_amount` VARCHAR(100), IN `login_jober_invoice_total_round_off` VARCHAR(100), IN `login_jober_invoice_total_net_amount` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_jober_invoice');

 END;
 
 IF update_id > 0 THEN

    UPDATE `erp_jober_invoice` SET `user_id`=login_user_id,`company_id`=login_company_id,`year_id`=login_year_id,`branch_id`=login_branch_id,`godown_id`=login_godown_id,`sale_jober_receive_id`=login_sale_jober_receive_id,`account_head_id`=login_account_head_id,`jober_invoice_account_type`=login_jober_invoice_account_type,`tds_on_id`=login_tds_on_id,`nature_of_payment_id`=login_nature_of_payment_id,`status_id`=login_status_id,`jober_id`=login_jober_id,`jober_invoice_no`=login_jober_invoice_no,`jober_invoice_date`=login_jober_invoice_date,`jober_invoice_lf_no`=login_jober_invoice_lf_no,`jober_invoice_total_meter`=login_jober_invoice_total_meter,`jober_invoice_total_weight`=login_jober_invoice_total_weight,`jober_invoice_total_total`=login_jober_invoice_total_total,`jober_invoice_total_disc_amt`=login_jober_invoice_total_disc_amt,`jober_invoice_total_taxable`=login_jober_invoice_total_taxable,`jober_invoice_total_sgst`=login_jober_invoice_total_sgst,`jober_invoice_total_cgst`=login_jober_invoice_total_cgst,`jober_invoice_total_igst`=login_jober_invoice_total_igst,`is_tds_applicable`=is_tds_applicable,`jober_invoice_applicable_rate`=login_jober_invoice_applicable_rate,`jober_invoice_total_tds`=login_jober_invoice_total_tds,`jober_invoice_total_included_tax_amount`=login_jober_invoice_total_included_tax_amount,`jober_invoice_total_round_off`=login_jober_invoice_total_round_off,`jober_invoice_total_net_amount`=login_jober_invoice_total_net_amount,`jober_invoice_update_date`=login_update_date WHERE id=update_id;
	
ELSE
    
    INSERT INTO `erp_jober_invoice`(`user_id`, `company_id`, `year_id`, `branch_id`, `godown_id`, `sale_jober_receive_id`, `account_head_id`,`jober_invoice_account_type`,`tds_on_id`, `nature_of_payment_id`, `status_id`, `jober_id`, `jober_invoice_no`, `jober_invoice_date`, `jober_invoice_lf_no`, `jober_invoice_total_meter`, `jober_invoice_total_weight`, `jober_invoice_total_total`, `jober_invoice_total_disc_amt`, `jober_invoice_total_taxable`, `jober_invoice_total_sgst`, `jober_invoice_total_cgst`, `jober_invoice_total_igst`, `is_tds_applicable`, `jober_invoice_applicable_rate`, `jober_invoice_total_tds`, `jober_invoice_total_included_tax_amount`, `jober_invoice_total_round_off`, `jober_invoice_total_net_amount`, `jober_invoice_entry_date`, `jober_invoice_update_date`) VALUES (login_user_id,login_company_id,login_year_id,login_branch_id,login_godown_id,login_sale_jober_receive_id,login_account_head_id,login_jober_invoice_account_type,login_tds_on_id,login_nature_of_payment_id,login_status_id,login_jober_id,login_jober_invoice_no,login_jober_invoice_date,login_jober_invoice_lf_no,login_jober_invoice_total_meter,login_jober_invoice_total_weight,login_jober_invoice_total_total,login_jober_invoice_total_disc_amt,login_jober_invoice_total_taxable,login_jober_invoice_total_sgst,login_jober_invoice_total_cgst,login_jober_invoice_total_igst,is_tds_applicable,login_jober_invoice_applicable_rate,login_jober_invoice_total_tds,login_jober_invoice_total_included_tax_amount,login_jober_invoice_total_round_off,login_jober_invoice_total_net_amount,login_entry_date,login_update_date);
    
    SELECT id as jober_invoice_id,erp_jober_invoice.* FROM erp_jober_invoice WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_jober_invoice_child`(IN `update_id` INT, IN `login_user_id` INT, IN `login_jober_invoice_id` INT, IN `login_jober_receive_id` INT, IN `login_quality_id` INT, IN `login_gst_id` INT, IN `login_rate_per_id` INT, IN `login_jober_invoice_child_remark` TEXT, IN `login_jober_invoice_child_invoice_no` VARCHAR(100), IN `login_jober_invoice_child_meter` VARCHAR(100), IN `login_jober_invoice_child_weight` VARCHAR(100), IN `login_jober_invoice_child_fold` VARCHAR(100), IN `login_jober_invoice_child_count_meter` VARCHAR(100), IN `login_jober_invoice_child_rate` VARCHAR(100), IN `login_jober_invoice_child_amount` VARCHAR(100), IN `login_jober_invoice_child_disc_per` VARCHAR(100), IN `login_jober_invoice_child_disc_amt` VARCHAR(100), IN `login_jober_invoice_child_taxable` VARCHAR(100), IN `login_jober_invoice_child_sgst` VARCHAR(100), IN `login_jober_invoice_child_cgst` VARCHAR(100), IN `login_jober_invoice_child_igst` VARCHAR(100), IN `login_jober_invoice_child_total` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_jober_invoice_child');

 END;
 
IF update_id > 0 THEN

	UPDATE `erp_jober_invoice_child` SET `user_id`=login_user_id,`jober_invoice_id`=login_jober_invoice_id,`jober_receive_id`=login_jober_receive_id,`quality_id`=login_quality_id,`gst_id`=login_gst_id,`rate_per_id`=login_rate_per_id,`jober_invoice_child_remark`=login_jober_invoice_child_remark,`jober_invoice_child_invoice_no`=login_jober_invoice_child_invoice_no,`jober_invoice_child_meter`=login_jober_invoice_child_meter,`jober_invoice_child_weight`=login_jober_invoice_child_weight,`jober_invoice_child_fold`=login_jober_invoice_child_fold,`jober_invoice_child_count_meter`=login_jober_invoice_child_count_meter,`jober_invoice_child_rate`=login_jober_invoice_child_rate,`jober_invoice_child_amount`=login_jober_invoice_child_amount,`jober_invoice_child_disc_per`=login_jober_invoice_child_disc_per,`jober_invoice_child_disc_amt`=login_jober_invoice_child_disc_amt,`jober_invoice_child_taxable`=login_jober_invoice_child_taxable,`jober_invoice_child_sgst`=login_jober_invoice_child_sgst,`jober_invoice_child_cgst`=login_jober_invoice_child_cgst,`jober_invoice_child_igst`=login_jober_invoice_child_igst,`jober_invoice_child_total`=login_jober_invoice_child_total,`jober_invoice_child_update_date`=login_update_date WHERE id=update_id;

ELSE
	INSERT INTO `erp_jober_invoice_child`(`user_id`, `jober_invoice_id`, `jober_receive_id`, `quality_id`, `gst_id`, `rate_per_id`, `jober_invoice_child_remark`, `jober_invoice_child_invoice_no`, `jober_invoice_child_meter`, `jober_invoice_child_weight`,`jober_invoice_child_fold`,`jober_invoice_child_count_meter`,`jober_invoice_child_rate`, `jober_invoice_child_amount`, `jober_invoice_child_disc_per`, `jober_invoice_child_disc_amt`, `jober_invoice_child_taxable`, `jober_invoice_child_sgst`, `jober_invoice_child_cgst`, `jober_invoice_child_igst`, `jober_invoice_child_total`, `jober_invoice_child_entry_date`, `jober_invoice_child_update_date`) VALUES (login_user_id,login_jober_invoice_id,login_jober_receive_id,login_quality_id,login_gst_id,login_rate_per_id,login_jober_invoice_child_remark,login_jober_invoice_child_invoice_no,login_jober_invoice_child_meter,login_jober_invoice_child_weight,login_jober_invoice_child_fold,login_jober_invoice_child_count_meter,login_jober_invoice_child_rate,login_jober_invoice_child_amount,login_jober_invoice_child_disc_per,login_jober_invoice_child_disc_amt,login_jober_invoice_child_taxable,login_jober_invoice_child_sgst,login_jober_invoice_child_cgst,login_jober_invoice_child_igst,login_jober_invoice_child_total,login_entry_date,login_update_date);
	
    SELECT id as jober_invoice_child_id,erp_jober_invoice_child.* FROM erp_jober_invoice_child WHERE id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_journal_purchase`(IN `update_id` INT, IN `login_user_id` INT, IN `login_supplier_id` INT, IN `login_nature_of_payment_id` INT, IN `login_status_id` INT, IN `login_tds_on_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT, IN `login_godown_id` INT, IN `login_account_head_id` INT, IN `login_journal_purchase_account_type` INT, IN `login_journal_purchase_invoice_no` VARCHAR(100), IN `login_journal_purchase_lf_no` VARCHAR(100), IN `login_journal_purchase_invoice_date` VARCHAR(100), IN `login_journal_purchase_credit_days` VARCHAR(100), IN `login_journal_purchase_remark` TEXT, IN `login_is_rcm` VARCHAR(100), IN `login_is_tds_applicable` VARCHAR(50), IN `login_journal_purchase_applicable_rate` VARCHAR(100), IN `login_journal_purchase_tds` VARCHAR(100), IN `login_journal_purchase_tds_with_total_net_amount` VARCHAR(100), IN `login_journal_purchase_round_off` VARCHAR(100), IN `login_journal_purchase_total_amount` VARCHAR(100), IN `login_journal_purchase_net_amount` VARCHAR(100), IN `login_journal_purchase_child_total_amount` VARCHAR(100), IN `login_journal_purchase_child_total_disc` VARCHAR(100), IN `login_journal_purchase_child_total_taxable` VARCHAR(100), IN `login_journal_purchase_child_total_sgst` VARCHAR(100), IN `login_journal_purchase_child_total_cgst` VARCHAR(100), IN `login_journal_purchase_child_total_igst` VARCHAR(100), IN `login_journal_purchase_tcs_percentage` VARCHAR(100), IN `login_journal_purchase_tcs_amount` VARCHAR(100), IN `login_journal_purchase_child_net_total` VARCHAR(100), IN `login_journal_purchase_image` LONGTEXT, IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_journal_purchase');

 END;
 
 IF update_id > 0 THEN
 
 	 	UPDATE erp_journal_purchase SET user_id=login_user_id,supplier_id=login_supplier_id,nature_of_payment_id=login_nature_of_payment_id,status_id=login_status_id,tds_on_id=login_tds_on_id,company_id=login_company_id,year_id=login_year_id,branch_id=login_branch_id,godown_id=login_godown_id,`account_head_id`=login_account_head_id,`journal_purchase_account_type`=login_journal_purchase_account_type,journal_purchase_invoice_no=login_journal_purchase_invoice_no,journal_purchase_lf_no=login_journal_purchase_lf_no,journal_purchase_invoice_date=login_journal_purchase_invoice_date,journal_purchase_credit_days=login_journal_purchase_credit_days,journal_purchase_remark=login_journal_purchase_remark,is_rcm=login_is_rcm,is_tds_applicable=login_is_tds_applicable,journal_purchase_applicable_rate=login_journal_purchase_applicable_rate,journal_purchase_tds=login_journal_purchase_tds,journal_purchase_tds_with_total_net_amount=login_journal_purchase_tds_with_total_net_amount,journal_purchase_round_off=login_journal_purchase_round_off,journal_purchase_total_amount=login_journal_purchase_total_amount,journal_purchase_net_amount=login_journal_purchase_net_amount,journal_purchase_child_total_amount=login_journal_purchase_child_total_amount,journal_purchase_child_total_disc=login_journal_purchase_child_total_disc,journal_purchase_child_total_taxable=login_journal_purchase_child_total_taxable,journal_purchase_child_total_sgst=login_journal_purchase_child_total_sgst,journal_purchase_child_total_cgst=login_journal_purchase_child_total_cgst,journal_purchase_child_total_igst=login_journal_purchase_child_total_igst,journal_purchase_tcs_percentage=login_journal_purchase_tcs_percentage,journal_purchase_tcs_amount=login_journal_purchase_tcs_amount,journal_purchase_child_net_total=login_journal_purchase_child_net_total,`journal_purchase_image`=login_journal_purchase_image,journal_purchase_update_date=login_update_date WHERE id=update_id;

ELSE
 	INSERT INTO erp_journal_purchase (user_id,supplier_id,nature_of_payment_id,status_id,tds_on_id,company_id,year_id,branch_id,godown_id,account_head_id,`journal_purchase_account_type`,journal_purchase_invoice_no,journal_purchase_lf_no,journal_purchase_invoice_date,journal_purchase_credit_days,journal_purchase_remark,is_rcm,is_tds_applicable,journal_purchase_applicable_rate,journal_purchase_tds,journal_purchase_tds_with_total_net_amount,journal_purchase_round_off,journal_purchase_total_amount,journal_purchase_net_amount,journal_purchase_child_total_amount,journal_purchase_child_total_disc,journal_purchase_child_total_taxable,journal_purchase_child_total_sgst,journal_purchase_child_total_cgst,journal_purchase_child_total_igst,journal_purchase_tcs_percentage,journal_purchase_tcs_amount,journal_purchase_child_net_total,`journal_purchase_image`,journal_purchase_entry_date,journal_purchase_update_date) VALUES (login_user_id,login_supplier_id,login_nature_of_payment_id,login_status_id,login_tds_on_id,login_company_id,login_year_id,login_branch_id,login_godown_id,login_account_head_id,login_journal_purchase_account_type,login_journal_purchase_invoice_no,login_journal_purchase_lf_no,login_journal_purchase_invoice_date,login_journal_purchase_credit_days,login_journal_purchase_remark,login_is_rcm,login_is_tds_applicable,login_journal_purchase_applicable_rate,login_journal_purchase_tds,login_journal_purchase_tds_with_total_net_amount,login_journal_purchase_round_off,login_journal_purchase_total_amount,login_journal_purchase_net_amount,login_journal_purchase_child_total_amount,login_journal_purchase_child_total_disc,login_journal_purchase_child_total_taxable,login_journal_purchase_child_total_sgst,login_journal_purchase_child_total_cgst,login_journal_purchase_child_total_igst,login_journal_purchase_tcs_percentage,login_journal_purchase_tcs_amount,login_journal_purchase_child_net_total,login_journal_purchase_image,login_entry_date,login_update_date);
    
    SELECT id as journal_purchse_id,erp_journal_purchase.* FROM erp_journal_purchase WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_journal_purchase_child`(IN `update_id` INT, IN `login_user_id` INT, IN `login_journal_purchase_id` INT, IN `login_supplier_id` INT, IN `login_gst_id` INT, IN `login_journal_purchase_child_remark` TEXT, IN `login_journal_purchase_child_hsn` VARCHAR(100), IN `login_journal_purchase_child_unit` VARCHAR(100), IN `login_journal_purchase_child_qty` VARCHAR(100), IN `login_journal_purchase_child_rate_per_type` VARCHAR(100), IN `login_journal_purchase_child_rate` VARCHAR(100), IN `login_journal_purchase_child_amount` VARCHAR(100), IN `login_journal_purchase_child_disc_per` VARCHAR(100), IN `login_journal_purchase_child_disc_amount` VARCHAR(100), IN `login_journal_purchase_child_taxable` VARCHAR(100), IN `login_journal_purchase_child_sgst` VARCHAR(100), IN `login_journal_purchase_child_cgst` VARCHAR(100), IN `login_journal_purchase_child_igst` VARCHAR(100), IN `login_journal_purchase_child_total` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_journal_purchase_child');

 END;

IF update_id > 0 THEN

	UPDATE `erp_journal_purchase_child` SET `user_id`=login_user_id,`journal_purchase_id`=login_journal_purchase_id,`supplier_id`=login_supplier_id,`gst_id`=login_gst_id,`journal_purchase_child_remark`=login_journal_purchase_child_remark,`journal_purchase_child_hsn`=login_journal_purchase_child_hsn,`journal_purchase_child_unit`=login_journal_purchase_child_unit,`journal_purchase_child_qty`=login_journal_purchase_child_qty,`journal_purchase_child_rate_per_type`=login_journal_purchase_child_rate_per_type,`journal_purchase_child_rate`=login_journal_purchase_child_rate,`journal_purchase_child_amount`=login_journal_purchase_child_amount,`journal_purchase_child_disc_per`=login_journal_purchase_child_disc_per,`journal_purchase_child_disc_amount`=login_journal_purchase_child_disc_amount,`journal_purchase_child_taxable`=login_journal_purchase_child_taxable,`journal_purchase_child_sgst`=login_journal_purchase_child_sgst,`journal_purchase_child_cgst`=login_journal_purchase_child_cgst,`journal_purchase_child_igst`=login_journal_purchase_child_igst,`journal_purchase_child_total`=login_journal_purchase_child_total,`journal_purchase_child_update_date`=login_update_date WHERE id=update_id;

ELSE

	INSERT INTO `erp_journal_purchase_child`(`user_id`, `journal_purchase_id`, `supplier_id`, `gst_id`, `journal_purchase_child_remark`,`journal_purchase_child_hsn`, `journal_purchase_child_unit`, `journal_purchase_child_qty`, `journal_purchase_child_rate_per_type`, `journal_purchase_child_rate`, `journal_purchase_child_amount`, `journal_purchase_child_disc_per`, `journal_purchase_child_disc_amount`, `journal_purchase_child_taxable`, `journal_purchase_child_sgst`, `journal_purchase_child_cgst`, `journal_purchase_child_igst`, `journal_purchase_child_total`, `journal_purchase_child_entry_date`, `journal_purchase_child_update_date`) VALUES (login_user_id,login_journal_purchase_id,login_supplier_id,login_gst_id,login_journal_purchase_child_remark,login_journal_purchase_child_hsn,login_journal_purchase_child_unit,login_journal_purchase_child_qty,login_journal_purchase_child_rate_per_type,login_journal_purchase_child_rate,login_journal_purchase_child_amount,login_journal_purchase_child_disc_per,login_journal_purchase_child_disc_amount,login_journal_purchase_child_taxable,login_journal_purchase_child_sgst,login_journal_purchase_child_cgst,login_journal_purchase_child_igst,login_journal_purchase_child_total,login_entry_date,login_update_date);
	
    SELECT id as jornal_purchse_child_id,erp_journal_purchase_child.* FROM erp_journal_purchase_child WHERE id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_journal_sale`(IN `update_id` INT, IN `login_user_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_godown_id` INT, IN `login_buyer_id` INT, IN `login_tds_on_id` INT, IN `login_nature_of_payment_id` INT, IN `login_status_id` INT, IN `login_sale_status_id` INT, IN `login_account_head_id` INT, IN `login_transporter_id` INT, IN `login_sale_account_head_type` VARCHAR(100), IN `login_sale_order_no` VARCHAR(100), IN `login_sale_order_date` VARCHAR(100), IN `login_sale_total_qty` VARCHAR(100), IN `login_sale_total_meter` VARCHAR(100), IN `login_sale_total_total` VARCHAR(100), IN `login_sale_total_disc_amount` VARCHAR(100), IN `login_sale_total_freight` VARCHAR(100), IN `login_sale_total_fless` VARCHAR(100), IN `login_sale_total_taxable` VARCHAR(100), IN `login_sale_total_sgst` VARCHAR(100), IN `login_sale_total_cgst` VARCHAR(100), IN `login_sale_total_igst` VARCHAR(100), IN `login_sale_total_amount` VARCHAR(100), IN `login_is_tds_applicable` VARCHAR(100), IN `login_sale_tds_applicable_rate` VARCHAR(100), IN `login_sale_tds_with_total_net_amount` VARCHAR(100), IN `login_sale_tcs_per` VARCHAR(100), IN `login_sale_tcs_amt` VARCHAR(100), IN `login_sale_round_off` VARCHAR(100), IN `login_sale_total_net_amount` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_journal_sale');

 END;
 
 IF update_id > 0 THEN
 
 	 	UPDATE `erp_sale` SET `user_id`=login_user_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`godown_id`=login_godown_id,`buyer_id`=login_buyer_id,`tds_on_id`=login_tds_on_id,`nature_of_payment_id`=login_nature_of_payment_id,`status_id`=login_status_id,`sale_status_id`=login_sale_status_id,`account_head_id`=login_account_head_id,`transporter_id`=login_transporter_id,`sale_account_head_type`=login_sale_account_head_type,`sale_order_no`=login_sale_order_no,`sale_order_date`=login_sale_order_date,`sale_total_qty`=login_sale_total_qty,`sale_total_meter`=login_sale_total_meter,`sale_total_total`=login_sale_total_total,`sale_total_disc_amount`=login_sale_total_disc_amount,`sale_total_freight`=login_sale_total_freight,`sale_total_fless`=login_sale_total_fless,`sale_total_taxable`=login_sale_total_taxable,`sale_total_sgst`=login_sale_total_sgst,`sale_total_cgst`=login_sale_total_cgst,`sale_total_igst`=login_sale_total_igst,`sale_total_amount`=login_sale_total_amount,`is_tds_applicable`=login_is_tds_applicable,`sale_tds_applicable_rate`=login_sale_tds_applicable_rate,`sale_tds_with_total_net_amount`=login_sale_tds_with_total_net_amount,`sale_tcs_per`=login_sale_tcs_per,`sale_tcs_amt`=login_sale_tcs_amt,`sale_round_off`=login_sale_round_off,`sale_total_net_amount`=login_sale_total_net_amount,`sale_update_date`=login_update_date WHERE id=update_id;

ELSE
 	INSERT INTO `erp_sale`(`user_id`, `branch_id`, `company_id`, `year_id`, `godown_id`, `buyer_id`, `tds_on_id`, `nature_of_payment_id`, `status_id`, `sale_status_id`,`account_head_id`,`transporter_id`,`sale_account_head_type`, `sale_order_no`, `sale_order_date`,`sale_total_qty`, `sale_total_meter`, `sale_total_total`, `sale_total_disc_amount`, `sale_total_freight`, `sale_total_fless`, `sale_total_taxable`, `sale_total_sgst`, `sale_total_cgst`, `sale_total_igst`, `sale_total_amount`,`is_tds_applicable`,`sale_tds_applicable_rate`,`sale_tds_with_total_net_amount`, `sale_tcs_per`, `sale_tcs_amt`, `sale_round_off`, `sale_total_net_amount`, `sale_entry_date`, `sale_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_godown_id,login_buyer_id,login_tds_on_id,login_nature_of_payment_id,login_status_id,login_sale_status_id,login_account_head_id,login_transporter_id,login_sale_account_head_type,login_sale_order_no,login_sale_order_date,login_sale_total_qty,login_sale_total_meter,login_sale_total_total,login_sale_total_disc_amount,login_sale_total_freight,login_sale_total_fless,login_sale_total_taxable,login_sale_total_sgst,login_sale_total_cgst,login_sale_total_igst,login_sale_total_amount,login_is_tds_applicable,login_sale_tds_applicable_rate,login_sale_tds_with_total_net_amount,login_sale_tcs_per,login_sale_tcs_amt,login_sale_round_off,login_sale_total_net_amount,login_entry_date,login_update_date);
    
    SELECT id as journal_sale_id,erp_sale.* FROM erp_sale WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_journal_sale_child`(IN `update_id` INT, IN `login_user_id` INT, IN `login_sale_id` INT, IN `login_quality_id` INT, IN `login_jober_id` INT, IN `login_order_status_id` INT, IN `login_gst_id` INT, IN `login_sale_child_remark` TEXT, IN `login_sale_child_remark_2` TEXT, IN `login_sale_child_quality_colour` VARCHAR(100), IN `login_sale_child_work` VARCHAR(100), IN `login_sale_child_work_colour` VARCHAR(100), IN `login_sale_child_meter` VARCHAR(100), IN `login_sale_child_fold` VARCHAR(100), IN `login_sale_child_count_meter` VARCHAR(100), IN `login_sale_child_rate` VARCHAR(100), IN `login_sale_child_rate_per` INT, IN `login_sale_child_help` VARCHAR(100), IN `login_sale_child_total` VARCHAR(100), IN `login_sale_child_disc_per` VARCHAR(100), IN `login_sale_child_disc_amt` VARCHAR(100), IN `login_sale_child_freight` VARCHAR(100), IN `login_sale_child_fless` VARCHAR(100), IN `login_sale_child_taxable` VARCHAR(100), IN `login_sale_child_sgst` VARCHAR(100), IN `login_sale_child_cgst` VARCHAR(100), IN `login_sale_child_igst` VARCHAR(100), IN `login_sale_child_amount` VARCHAR(100), IN `login_is_not_to_jober` VARCHAR(50), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_journal_sale_child');

 END;
 
 IF update_id > 0 THEN
 
 UPDATE `erp_sale_child` SET `user_id`=login_user_id,`sale_id`=login_sale_id,`quality_id`=login_quality_id,`jober_id`=login_jober_id,`order_status_id`=login_order_status_id,`gst_id`=login_gst_id,`sale_child_remark`=login_sale_child_remark,`sale_child_remark_2`=login_sale_child_remark_2,`sale_child_quality_colour`=login_sale_child_quality_colour,`sale_child_work`=login_sale_child_work,`sale_child_work_colour`=login_sale_child_work_colour,`sale_child_meter`=login_sale_child_meter,`sale_child_fold`=login_sale_child_fold,`sale_child_count_meter`=login_sale_child_count_meter,`sale_child_rate`=login_sale_child_rate,`sale_child_rate_per`=login_sale_child_rate_per,`sale_child_help`=login_sale_child_help,`sale_child_total`=login_sale_child_total,`sale_child_disc_per`=login_sale_child_disc_per,`sale_child_disc_amt`=login_sale_child_disc_amt,`sale_child_freight`=login_sale_child_freight,`sale_child_fless`=login_sale_child_fless,`sale_child_taxable`=login_sale_child_taxable,`sale_child_sgst`=login_sale_child_sgst,`sale_child_cgst`=login_sale_child_cgst,`sale_child_igst`=login_sale_child_igst,`sale_child_amount`=login_sale_child_amount,`is_not_to_jober`=login_is_not_to_jober,`sale_child_update_date`=login_update_date WHERE id=update_id;

ELSE
 	INSERT INTO `erp_sale_child`(`user_id`, `sale_id`, `quality_id`, `jober_id`, `order_status_id`,`gst_id`, `sale_child_remark`,`sale_child_remark_2`,`sale_child_quality_colour`, `sale_child_work`, `sale_child_work_colour`, `sale_child_meter`, `sale_child_fold`,`sale_child_count_meter`, `sale_child_rate`,`sale_child_rate_per`, `sale_child_help`, `sale_child_total`, `sale_child_disc_per`, `sale_child_disc_amt`, `sale_child_freight`, `sale_child_fless`, `sale_child_taxable`, `sale_child_sgst`, `sale_child_cgst`, `sale_child_igst`, `sale_child_amount`,`is_not_to_jober`, `sale_child_entry_date`, `sale_child_update_date`) VALUES (login_user_id,login_sale_id,login_quality_id,login_jober_id,login_order_status_id,login_gst_id,login_sale_child_remark,login_sale_child_remark_2,login_sale_child_quality_colour,login_sale_child_work,login_sale_child_work_colour,login_sale_child_meter,login_sale_child_fold,login_sale_child_count_meter,login_sale_child_rate,login_sale_child_rate_per,login_sale_child_help,login_sale_child_total,login_sale_child_disc_per,login_sale_child_disc_amt,login_sale_child_freight,login_sale_child_fless,login_sale_child_taxable,login_sale_child_sgst,login_sale_child_cgst,login_sale_child_igst,login_sale_child_amount,login_is_not_to_jober,login_entry_date,login_update_date);
    
    SELECT id as journal_sale_child_id,erp_sale_child.* FROM erp_sale_child WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_material`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_gst_id` INT, IN `login_export_gst_id` INT, IN `login_material_name` VARCHAR(255), IN `login_material_hsn` VARCHAR(100), IN `login_material_image` LONGTEXT, IN `login_material_purchase_qty` INT, IN `login_material_sale_qty` INT, IN `login_material_purchase_rate` INT, IN `login_material_sale_rate` INT, IN `login_material_matrix_view` INT, IN `login_material_packing_view` INT, IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_material');

 END;

IF update_id > 0 THEN

	UPDATE `erp_material` SET `user_id`=login_user_id,`company_id`=login_company_id,`gst_id`=login_gst_id,`export_gst_id`=login_export_gst_id,`material_name`=login_material_name,`material_hsn`=login_material_hsn,`material_image`=login_material_image,`material_purchase_qty`=login_material_purchase_qty,`material_sale_qty`=login_material_sale_qty,`material_purchase_rate`=login_material_purchase_rate,`material_sale_rate`=login_material_sale_rate,`material_matrix_view`=login_material_matrix_view,`material_packing_view`=login_material_packing_view,`material_update_date`=login_update_date WHERE id=update_id;

ELSE
	INSERT INTO `erp_material`(`user_id`, `company_id`, `gst_id`, `export_gst_id`, `material_name`, `material_hsn`, `material_image`, `material_purchase_qty`, `material_sale_qty`, `material_purchase_rate`, `material_sale_rate`, `material_matrix_view`, `material_packing_view`, `material_entry_date`, `material_update_date`) VALUES (login_user_id,login_company_id,login_gst_id,login_export_gst_id,login_material_name,login_material_hsn,login_material_image,login_material_purchase_qty,login_material_sale_qty,login_material_purchase_rate,login_material_sale_rate,login_material_matrix_view,login_material_packing_view,login_entry_date,login_update_date);
	
    SELECT id as material_id,erp_material.* FROM erp_material WHERE id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_mill_tax_invoice`(IN `update_id` INT, IN `login_user_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_godown_id` INT, IN `login_mill_receive_id` INT, IN `login_account_head_id` INT, IN `login_tds_on_id` INT, IN `login_nature_of_payment_id` INT, IN `login_status_id` INT, IN `login_mill_id` INT, IN `login_mill_tax_invoice_no` VARCHAR(100), IN `login_mill_tax_invoice_lf_no` VARCHAR(100), IN `login_mill_tax_invoice_date` VARCHAR(100), IN `login_mill_tax_invoice_total_taka` VARCHAR(100), IN `login_mill_tax_invoice_total_meter` VARCHAR(100), IN `login_mill_tax_invoice_total_weight` VARCHAR(100), IN `login_mill_tax_invoice_total_amount` VARCHAR(100), IN `login_mill_tax_invoice_total_dis_amt` VARCHAR(100), IN `login_mill_tax_invoice_total_other_charge` VARCHAR(100), IN `login_mill_tax_invoice_total_taxable_amount` VARCHAR(100), IN `login_mill_tax_invoice_total_sgst` VARCHAR(100), IN `login_mill_tax_invoice_total_cgst` VARCHAR(100), IN `login_mill_tax_invoice_total_igst` VARCHAR(100), IN `login_mill_tax_invoice_applicable_rate` VARCHAR(100), IN `login_mill_tax_invoice_total_tds` VARCHAR(100), IN `is_tds_applicable` VARCHAR(100), IN `is_invoice_base_on_grey` VARCHAR(100), IN `login_mill_tax_invoice_total_included_tax_amount` VARCHAR(100), IN `login_mill_tax_invoice_total_round_off` VARCHAR(100), IN `login_mill_tax_invoice_total_net_amount` VARCHAR(100), IN `login_mill_tax_invoice_image` LONGTEXT, IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_mill_tax_invoice');

 END;
 
 IF update_id > 0 THEN
 
    UPDATE `erp_mill_tax_invoice` SET `user_id`=login_user_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`godown_id`=login_godown_id,`mill_receive_id`=login_mill_receive_id,`account_head_id`=login_account_head_id,`tds_on_id`=login_tds_on_id,`nature_of_payment_id`=login_nature_of_payment_id,`status_id`=login_status_id,`mill_id`=login_mill_id,`mill_tax_invoice_no`=login_mill_tax_invoice_no,`mill_tax_invoice_lf_no`=login_mill_tax_invoice_lf_no,`mill_tax_invoice_date`=login_mill_tax_invoice_date,`mill_tax_invoice_total_taka`=login_mill_tax_invoice_total_taka,`mill_tax_invoice_total_meter`=login_mill_tax_invoice_total_meter,`mill_tax_invoice_total_weight`=login_mill_tax_invoice_total_weight,`mill_tax_invoice_total_amount`=login_mill_tax_invoice_total_amount,`mill_tax_invoice_total_dis_amt`=login_mill_tax_invoice_total_dis_amt,`mill_tax_invoice_total_other_charge`=login_mill_tax_invoice_total_other_charge,`mill_tax_invoice_total_taxable_amount`=login_mill_tax_invoice_total_taxable_amount,`mill_tax_invoice_total_sgst`=login_mill_tax_invoice_total_sgst,`mill_tax_invoice_total_cgst`=login_mill_tax_invoice_total_cgst,`mill_tax_invoice_total_igst`=login_mill_tax_invoice_total_igst,`mill_tax_invoice_applicable_rate`=login_mill_tax_invoice_applicable_rate,`mill_tax_invoice_total_tds`=login_mill_tax_invoice_total_tds,`is_tds_applicable`=is_tds_applicable,`is_invoice_base_on_grey`=is_invoice_base_on_grey,`mill_tax_invoice_total_included_tax_amount`=login_mill_tax_invoice_total_included_tax_amount,`mill_tax_invoice_total_round_off`=login_mill_tax_invoice_total_round_off,`mill_tax_invoice_total_net_amount`=login_mill_tax_invoice_total_net_amount,`mill_tax_invoice_image`=login_mill_tax_invoice_image,`mill_tax_invoice_update_date`=login_update_date WHERE id=update_id;
	
ELSE
    
    INSERT INTO `erp_mill_tax_invoice`(`user_id`, `branch_id`, `company_id`, `year_id`, `godown_id`, `mill_receive_id`, `account_head_id`, `tds_on_id`, `nature_of_payment_id`, `status_id`,`mill_id`, `mill_tax_invoice_no`, `mill_tax_invoice_lf_no`, `mill_tax_invoice_date`, `mill_tax_invoice_total_taka`, `mill_tax_invoice_total_meter`, `mill_tax_invoice_total_weight`, `mill_tax_invoice_total_amount`, `mill_tax_invoice_total_dis_amt`, `mill_tax_invoice_total_other_charge`, `mill_tax_invoice_total_taxable_amount`, `mill_tax_invoice_total_sgst`, `mill_tax_invoice_total_cgst`, `mill_tax_invoice_total_igst`, `mill_tax_invoice_applicable_rate`, `mill_tax_invoice_total_tds`, `is_tds_applicable`, `is_invoice_base_on_grey`, `mill_tax_invoice_total_included_tax_amount`, `mill_tax_invoice_total_round_off`, `mill_tax_invoice_total_net_amount`,`mill_tax_invoice_image`,`mill_tax_invoice_entry_date`, `mill_tax_invoice_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_godown_id,login_mill_receive_id,login_account_head_id,login_tds_on_id,login_nature_of_payment_id,login_status_id,login_mill_id,login_mill_tax_invoice_no,login_mill_tax_invoice_lf_no,login_mill_tax_invoice_date,login_mill_tax_invoice_total_taka,login_mill_tax_invoice_total_meter,login_mill_tax_invoice_total_weight,login_mill_tax_invoice_total_amount,login_mill_tax_invoice_total_dis_amt,login_mill_tax_invoice_total_other_charge,login_mill_tax_invoice_total_taxable_amount,login_mill_tax_invoice_total_sgst,login_mill_tax_invoice_total_cgst,login_mill_tax_invoice_total_igst,login_mill_tax_invoice_applicable_rate,login_mill_tax_invoice_total_tds,is_tds_applicable,is_invoice_base_on_grey,login_mill_tax_invoice_total_included_tax_amount,login_mill_tax_invoice_total_round_off,login_mill_tax_invoice_total_net_amount,login_mill_tax_invoice_image,login_entry_date,login_update_date);
    
    SELECT id as mill_tax_invoice_id,erp_mill_tax_invoice.* FROM erp_mill_tax_invoice WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_mill_tax_invoice_child`(IN `update_id` INT, IN `login_user_id` INT, IN `login_mill_tax_invoice_id` INT, IN `login_mill_receive_id` INT, IN `login_quality_id` INT, IN `login_gst_id` INT, IN `login_mill_tax_invoice_child_count_on` INT, IN `login_mill_tax_invoice_child_remark` TEXT, IN `login_mill_tax_invoice_child_challan_no` VARCHAR(100), IN `login_mill_tax_invoice_child_taka` VARCHAR(100), IN `login_mill_tax_invoice_child_meter` VARCHAR(100), IN `login_mill_tax_invoice_child_weight` VARCHAR(100), IN `login_mill_tax_invoice_child_rate_per` VARCHAR(100), IN `login_mill_tax_invoice_child_rate` VARCHAR(100), IN `login_mill_tax_invoice_child_amount` VARCHAR(100), IN `login_mill_tax_invoice_child_disc_per` VARCHAR(100), IN `login_mill_tax_invoice_child_disc_amt` VARCHAR(100), IN `login_mill_tax_invoice_child_other_charge` VARCHAR(100), IN `login_mill_tax_invoice_child_taxable` VARCHAR(100), IN `login_mill_tax_invoice_child_sgst` VARCHAR(100), IN `login_mill_tax_invoice_child_cgst` VARCHAR(100), IN `login_mill_tax_invoice_child_igst` VARCHAR(100), IN `login_mill_tax_invoice_child_total` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_mill_tax_invoice_child');

 END;
 
IF update_id > 0 THEN

	 UPDATE `erp_mill_tax_invoice_child` SET `user_id`=login_user_id,`mill_tax_invoice_id`=login_mill_tax_invoice_id,`mill_receive_id`=login_mill_receive_id,`quality_id`=login_quality_id,`gst_id`=login_gst_id,`mill_tax_invoice_child_count_on`=login_mill_tax_invoice_child_count_on,`mill_tax_invoice_child_remark`=login_mill_tax_invoice_child_remark,`mill_tax_invoice_child_challan_no`=login_mill_tax_invoice_child_challan_no,`mill_tax_invoice_child_taka`=login_mill_tax_invoice_child_taka,`mill_tax_invoice_child_meter`=login_mill_tax_invoice_child_meter,`mill_tax_invoice_child_weight`=login_mill_tax_invoice_child_weight,`mill_tax_invoice_child_rate_per`=login_mill_tax_invoice_child_rate_per,`mill_tax_invoice_child_rate`=login_mill_tax_invoice_child_rate,`mill_tax_invoice_child_amount`=login_mill_tax_invoice_child_amount,`mill_tax_invoice_child_disc_per`=login_mill_tax_invoice_child_disc_per,`mill_tax_invoice_child_disc_amt`=login_mill_tax_invoice_child_disc_amt,`mill_tax_invoice_child_other_charge`=login_mill_tax_invoice_child_other_charge,`mill_tax_invoice_child_taxable`=login_mill_tax_invoice_child_taxable,`mill_tax_invoice_child_sgst`=login_mill_tax_invoice_child_sgst,`mill_tax_invoice_child_cgst`=login_mill_tax_invoice_child_cgst,`mill_tax_invoice_child_igst`=login_mill_tax_invoice_child_igst,`mill_tax_invoice_child_total`=login_mill_tax_invoice_child_total,`mill_tax_invoice_child_update_date`=login_update_date WHERE id=update_id;

ELSE
	INSERT INTO `erp_mill_tax_invoice_child`(`user_id`, `mill_tax_invoice_id`, `mill_receive_id`, `quality_id`, `gst_id`,`mill_tax_invoice_child_count_on`, `mill_tax_invoice_child_remark`, `mill_tax_invoice_child_challan_no`, `mill_tax_invoice_child_taka`, `mill_tax_invoice_child_meter`,`mill_tax_invoice_child_weight`, `mill_tax_invoice_child_rate_per`, `mill_tax_invoice_child_rate`, `mill_tax_invoice_child_amount`, `mill_tax_invoice_child_disc_per`, `mill_tax_invoice_child_disc_amt`, `mill_tax_invoice_child_other_charge`, `mill_tax_invoice_child_taxable`, `mill_tax_invoice_child_sgst`, `mill_tax_invoice_child_cgst`, `mill_tax_invoice_child_igst`, `mill_tax_invoice_child_total`, `mill_tax_invoice_child_entry_date`, `mill_tax_invoice_child_update_date`) VALUES (login_user_id,login_mill_tax_invoice_id,login_mill_receive_id,login_quality_id,login_gst_id,login_mill_tax_invoice_child_count_on,login_mill_tax_invoice_child_remark,login_mill_tax_invoice_child_challan_no,login_mill_tax_invoice_child_taka,login_mill_tax_invoice_child_meter,login_mill_tax_invoice_child_weight,login_mill_tax_invoice_child_rate_per,login_mill_tax_invoice_child_rate,login_mill_tax_invoice_child_amount,login_mill_tax_invoice_child_disc_per,login_mill_tax_invoice_child_disc_amt,login_mill_tax_invoice_child_other_charge,login_mill_tax_invoice_child_taxable,login_mill_tax_invoice_child_sgst,login_mill_tax_invoice_child_cgst,login_mill_tax_invoice_child_igst,login_mill_tax_invoice_child_total,login_entry_date,login_update_date);
	
    SELECT id as mill_tax_invoice_child_id,erp_mill_tax_invoice_child.* FROM erp_mill_tax_invoice_child WHERE id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_next_year_party_data`(IN `update_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_party_id` INT, IN `login_party_balance` VARCHAR(100), IN `login_party_balance_type` VARCHAR(100), IN `entry_date` VARCHAR(100), IN `update_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_next_year_party_data');

 END;
	
    IF update_id > 0 THEN
    
    	UPDATE `erp_party_opening_balance` SET `company_id`=login_company_id,`year_id`=login_year_id,`party_id`=login_party_id,`party_balance`=login_party_balance,`party_balance_type`=login_party_balance_type,`update_date`=update_date WHERE id=id;
    ELSE
		INSERT INTO `erp_party_opening_balance`(`company_id`, `year_id`, `party_id`, `party_balance`, `party_balance_type`,`entry_date`,`update_date`) VALUES (login_company_id,login_year_id,login_party_id,login_party_balance,login_party_balance_type,entry_date,update_date);
    
	END IF;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_opening_purchase`(IN `update_id` INT, IN `login_user_id` INT, IN `login_supplier_id` INT, IN `login_broker_id` INT, IN `login_haste_id` INT, IN `login_quality_type_id` INT, IN `login_godown_id` INT, IN `login_transporter_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_opening_purchase_sub_order_no` VARCHAR(100), IN `login_opening_purchase_challan_no` VARCHAR(100), IN `login_opening_purchase_challan_date` VARCHAR(100), IN `login_opening_purchase_delivery_days` VARCHAR(100), IN `login_opening_purchase_delivery_completion_date` VARCHAR(100), IN `login_opening_purchase_credit_days` VARCHAR(100), IN `login_opening_purchase_other_transporter` VARCHAR(100), IN `login_opening_purchase_lr_no` VARCHAR(100), IN `login_opening_purchase_driver_name` VARCHAR(255), IN `login_opening_purchase_driver_mobile_no` VARCHAR(255), IN `login_opening_purchase_driver_vehicle_no` VARCHAR(100), IN `login_opening_purchase_bela_marka` VARCHAR(255), IN `login_is_transporter_paid` VARCHAR(50), IN `login_opening_purchase_remark` TEXT, IN `login_opening_purchase_total_unit_sent` VARCHAR(100), IN `login_opening_purchase_total_qty_sent` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_opening_purchase');

 END;
 IF update_id > 0 THEN
 
 	UPDATE `erp_opening_purchase` SET `user_id`=login_user_id,`supplier_id`=login_supplier_id,`broker_id`=login_broker_id,`haste_id`=login_haste_id,`quality_type_id`=login_quality_type_id,`godown_id`=login_godown_id,`transporter_id`=login_transporter_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`opening_purchase_sub_order_no`=login_opening_purchase_sub_order_no,`opening_purchase_challan_no`=login_opening_purchase_challan_no,`opening_purchase_challan_date`=login_opening_purchase_challan_date,`opening_purchase_delivery_days`=login_opening_purchase_delivery_days,`opening_purchase_delivery_completion_date`=login_opening_purchase_delivery_completion_date,`opening_purchase_credit_days`=login_opening_purchase_credit_days,`opening_purchase_other_transporter`=login_opening_purchase_other_transporter,`opening_purchase_lr_no`=login_opening_purchase_lr_no,`opening_purchase_driver_name`=login_opening_purchase_driver_name,`opening_purchase_driver_mobile_no`=login_opening_purchase_driver_mobile_no,`opening_purchase_driver_vehicle_no`=login_opening_purchase_driver_vehicle_no,`opening_purchase_bela_marka`=login_opening_purchase_bela_marka,`is_transporter_paid`=login_is_transporter_paid,`opening_purchase_remark`=login_opening_purchase_remark,`opening_purchase_total_unit_sent`=login_opening_purchase_total_unit_sent,`opening_purchase_total_qty_sent`=login_opening_purchase_total_qty_sent,`opening_purchase_update_date`=login_update_date WHERE id=update_id;
  	
ELSE

    INSERT INTO `erp_opening_purchase`(`user_id`, `supplier_id`, `broker_id`, `haste_id`, `quality_type_id`, `godown_id`, `transporter_id`, `branch_id`, `company_id`, `year_id`, `opening_purchase_sub_order_no`, `opening_purchase_challan_no`, `opening_purchase_challan_date`, `opening_purchase_delivery_days`, `opening_purchase_delivery_completion_date`, `opening_purchase_credit_days`, `opening_purchase_other_transporter`, `opening_purchase_lr_no`, `opening_purchase_driver_name`, `opening_purchase_driver_mobile_no`, `opening_purchase_driver_vehicle_no`, `opening_purchase_bela_marka`, `is_transporter_paid`, `opening_purchase_remark`,`opening_purchase_total_unit_sent`,`opening_purchase_total_qty_sent`,`opening_purchase_entry_date`,`opening_purchase_update_date`) VALUES (login_user_id,login_supplier_id,login_broker_id,login_haste_id,login_quality_type_id,login_godown_id,login_transporter_id,login_branch_id,login_company_id,login_year_id,login_opening_purchase_sub_order_no,login_opening_purchase_challan_no,login_opening_purchase_challan_date,login_opening_purchase_delivery_days,login_opening_purchase_delivery_completion_date,login_opening_purchase_credit_days,login_opening_purchase_other_transporter,login_opening_purchase_lr_no,login_opening_purchase_driver_name,login_opening_purchase_driver_mobile_no,login_opening_purchase_driver_vehicle_no,login_opening_purchase_bela_marka,login_is_transporter_paid,login_opening_purchase_remark,login_opening_purchase_total_unit_sent,login_opening_purchase_total_qty_sent,login_entry_date,login_update_date);
    
    SELECT id as opening_purchse_id,erp_opening_purchase.* FROM erp_opening_purchase WHERE id=LAST_INSERT_ID();
    
END IF;    
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_opening_purchase_child`(IN `update_id` INT, IN `login_user_id` INT, IN `login_opening_purchase_id` INT, IN `login_quality_id` INT, IN `login_gst_id` INT, IN `login_opening_purchase_child_remark` TEXT, IN `login_opening_purchase_child_hsn` VARCHAR(100), IN `login_opening_purchase_child_qty_per` VARCHAR(100), IN `login_opening_purchase_child_cut` VARCHAR(100), IN `login_opening_purchase_child_cut_meter` VARCHAR(100), IN `login_opening_purchase_child_unit_sent` VARCHAR(100), IN `login_opening_purchase_child_pkg` VARCHAR(100), IN `login_opening_purchase_child_qty_sent` VARCHAR(100), IN `login_opening_purchase_child_meter` VARCHAR(100), IN `login_opening_purchase_child_fold` VARCHAR(100), IN `login_opening_purchase_child_net_meter` VARCHAR(100), IN `login_opening_purchase_child_rate` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_opening_purchase_child');

 END;

IF update_id > 0 THEN

	UPDATE `erp_opening_purchase_child` SET `user_id`=login_user_id,`opening_purchase_id`=login_opening_purchase_id,`quality_id`=login_quality_id,`gst_id`=login_gst_id,`opening_purchase_child_remark`=login_opening_purchase_child_remark,`opening_purchase_child_hsn`=login_opening_purchase_child_hsn,`opening_purchase_child_qty_per`=login_opening_purchase_child_qty_per,`opening_purchase_child_cut`=login_opening_purchase_child_cut,`opening_purchase_child_cut_meter`=login_opening_purchase_child_cut_meter,`opening_purchase_child_unit_sent`=login_opening_purchase_child_unit_sent,`opening_purchase_child_pkg`=login_opening_purchase_child_pkg,`opening_purchase_child_qty_sent`=login_opening_purchase_child_qty_sent,`opening_purchase_child_meter`=login_opening_purchase_child_meter,`opening_purchase_child_fold`=login_opening_purchase_child_fold,`opening_purchase_child_net_meter`=login_opening_purchase_child_net_meter,`opening_purchase_child_rate`=login_opening_purchase_child_rate,`opening_purchase_child_update_date`=login_update_date WHERE id=update_id;

ELSE

	INSERT INTO `erp_opening_purchase_child`(`user_id`, `opening_purchase_id`, `quality_id`, `gst_id`, `opening_purchase_child_remark`, `opening_purchase_child_hsn`, `opening_purchase_child_qty_per`, `opening_purchase_child_cut`, `opening_purchase_child_cut_meter`, `opening_purchase_child_unit_sent`, `opening_purchase_child_pkg`, `opening_purchase_child_qty_sent`, `opening_purchase_child_meter`, `opening_purchase_child_fold`, `opening_purchase_child_net_meter`, `opening_purchase_child_rate`, `opening_purchase_child_entry_date`, `opening_purchase_child_update_date`) VALUES (login_user_id,login_opening_purchase_id,login_quality_id,login_gst_id,login_opening_purchase_child_remark,login_opening_purchase_child_hsn,login_opening_purchase_child_qty_per,login_opening_purchase_child_cut,login_opening_purchase_child_cut_meter,login_opening_purchase_child_unit_sent,login_opening_purchase_child_pkg,login_opening_purchase_child_qty_sent,login_opening_purchase_child_meter,login_opening_purchase_child_fold,login_opening_purchase_child_net_meter,login_opening_purchase_child_rate,login_entry_date,login_update_date);

	SELECT id as opening_purchase_child_id,erp_opening_purchase_child.* FROM erp_opening_purchase_child WHERE id=LAST_INSERT_ID();

END IF;


END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_party_broker`(IN `update_id` INT, IN `login_user_id` INT, IN `login_party_group_id` INT, IN `login_company_id` INT, IN `login_state_id` INT, IN `login_account_head_id` INT, IN `login_broker_id` INT, IN `login_sales_person_id` INT, IN `login_sales_man_id` INT, IN `login_transporter_id` INT, IN `login_party_type_id` INT, IN `login_category_id` INT, IN `login_nature_of_payment_id` INT, IN `login_status_id` INT, IN `login_tds_on_id` INT, IN `login_party_name` VARCHAR(255), IN `login_party_image` LONGTEXT, IN `login_party_gst_no` VARCHAR(255), IN `login_party_address_1` TEXT, IN `login_party_address_2` TEXT, IN `login_party_area` VARCHAR(100), IN `login_party_city` VARCHAR(100), IN `login_party_pincode` INT, IN `login_party_country` VARCHAR(100), IN `login_party_area_code` VARCHAR(100), IN `login_contact_person_1` VARCHAR(255), IN `login_contact_person_2` VARCHAR(255), IN `login_contact_person_image` LONGTEXT, IN `login_party_mobile_1` VARCHAR(255), IN `login_party_mobile_2` VARCHAR(255), IN `login_party_landline` VARCHAR(255), IN `login_party_email` VARCHAR(255), IN `login_party_cc_email` VARCHAR(255), IN `login_party_narration` TEXT, IN `login_party_pancard_no` VARCHAR(100), IN `login_base_value` VARCHAR(100), IN `login_party_fssai` VARCHAR(100), IN `login_is_default` VARCHAR(100), IN `login_party_opening_balance` VARCHAR(100), IN `login_opening_balance_type` VARCHAR(100), IN `login_party_discount` VARCHAR(100), IN `login_party_auto_entry` VARCHAR(100), IN `login_party_auto_email` VARCHAR(100), IN `login_party_credit_periods` VARCHAR(255), IN `login_party_credit_amount` VARCHAR(100), IN `login_party_client_credit_date` VARCHAR(100), IN `login_is_tds_applicable` VARCHAR(100), IN `login_party_applicable_rate` VARCHAR(100), IN `login_is_sms_allow` VARCHAR(100), IN `login_is_tcs_applicable` VARCHAR(100), IN `login_entery_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_party_broker');
 END;
 
 IF update_id > 0 THEN

 	UPDATE `erp_party` SET `user_id`=login_user_id,`party_group_id`=login_party_group_id,`company_id`=login_company_id,`state_id`=login_state_id,`account_head_id`=login_account_head_id,`broker_id`=login_broker_id,`sales_person_id`=login_sales_person_id,`sales_man_id`=login_sales_man_id,`transporter_id`=login_transporter_id,`party_type_id`=login_party_type_id,`category_id`=login_category_id,`nature_of_payment_id`=login_nature_of_payment_id,`status_id`=login_status_id,`tds_on_id`=login_tds_on_id,`party_name`=login_party_name,`party_image`=login_party_image,`party_gst_no`=login_party_gst_no,`party_address_1`=login_party_address_1,`party_address_2`=login_party_address_2,`party_area`=login_party_area,`party_city`=login_party_city,`party_pincode`=login_party_pincode,`party_area_code`=login_party_area_code,`contact_person_1`=login_contact_person_1,`contact_person_2`=login_contact_person_2,`contact_person_image`=login_contact_person_image,`party_mobile_1`=login_party_mobile_1,`party_mobile_2`=login_party_mobile_2,`party_landline`=login_party_landline,`party_email`=login_party_email,`party_cc_email`=login_party_cc_email,`party_narration`=login_party_narration,`party_pancard_no`=login_party_pancard_no,`base_value`=login_base_value,`party_fssai`=login_party_fssai,`is_default`=login_is_default,`party_opening_balance`=login_party_opening_balance,`opening_balance_type`=login_opening_balance_type,`party_discount`=login_party_discount,`party_auto_entry`=login_party_auto_entry,`party_auto_email`=login_party_auto_email,`party_credit_periods`=login_party_credit_periods,`party_credit_amount`=login_party_credit_amount,`party_client_credit_date`=login_party_client_credit_date,`is_tds_applicable`=login_is_tds_applicable,`party_applicable_rate`=login_party_applicable_rate,`is_sms_allow`=login_is_sms_allow,`is_tcs_applicable`=login_is_tcs_applicable,`party_update_date`=login_update_date WHERE id=update_id;
 
 ELSE
 
 INSERT INTO erp_party(user_id,party_group_id,company_id,state_id,account_head_id,broker_id,sales_person_id,sales_man_id,transporter_id,party_type_id,category_id,nature_of_payment_id,status_id,tds_on_id,party_name,party_image,party_gst_no,party_address_1,party_address_2,party_area,party_city,party_pincode,party_country,party_area_code,contact_person_1,contact_person_2,contact_person_image,party_mobile_1,party_mobile_2,party_landline,party_email, party_cc_email,party_narration,party_pancard_no,base_value,party_fssai,is_default,party_opening_balance,opening_balance_type,party_discount, party_auto_entry,party_auto_email,party_credit_periods,party_credit_amount,party_client_credit_date,is_tds_applicable,party_applicable_rate, is_sms_allow,is_tcs_applicable,party_entry_date,party_update_date) VALUES (login_user_id,login_party_group_id,login_company_id,login_state_id,login_account_head_id,login_broker_id,login_sales_person_id,login_sales_man_id,login_transporter_id,login_party_type_id,login_category_id,login_nature_of_payment_id,login_status_id,login_tds_on_id,login_party_name,login_party_image,login_party_gst_no,login_party_address_1,login_party_address_2,login_party_area,login_party_city,login_party_pincode,login_party_country,login_party_area_code,login_contact_person_1,login_contact_person_2,login_contact_person_image,login_party_mobile_1,login_party_mobile_2,login_party_landline,login_party_email,login_party_cc_email,login_party_narration,login_party_pancard_no,login_base_value,login_party_fssai,login_is_default,login_party_opening_balance,login_opening_balance_type,login_party_discount,login_party_auto_entry,login_party_auto_email,login_party_credit_periods,login_party_credit_amount,login_party_client_credit_date,login_is_tds_applicable,login_party_applicable_rate,login_is_sms_allow,login_is_tcs_applicable,login_entery_date,login_update_date);
 
 	SELECT id as party_id,erp_party.* FROM erp_party WHERE id=LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_party_broker_group`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_account_head_id` INT, IN `login_party_group_name` VARCHAR(255), IN `login_entery_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_party_broker_group');

 END;

IF update_id > 0 THEN

	UPDATE erp_party_group SET user_id=login_user_id,company_id=login_company_id,account_head_id=login_account_head_id,party_group_name=login_party_group_name,party_group_update_date=login_update_date WHERE id=update_id;
    
ELSE

	INSERT INTO erp_party_group (user_id,company_id,account_head_id,party_group_name,party_group_entry_date, party_group_update_date) VALUES (login_user_id,login_company_id,login_account_head_id,login_party_group_name,login_entery_date,login_update_date);
    
    SELECT * FROM erp_party_group WHERE id=LAST_INSERT_ID();
    
END IF;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_party_merge`(IN `update_id` INT, IN `login_merge_amount` VARCHAR(100), IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_party_merge');
 END;
 
 	UPDATE `erp_party` SET `party_opening_balance`=login_merge_amount,`party_update_date`=login_update_date WHERE id=update_id;
 

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_purchase_return`(IN `update_id` INT, IN `login_user_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_supplier_id` INT, IN `login_broker_id` INT, IN `login_haste_id` INT, IN `login_receiving_goods_address_id` INT, IN `login_invoice_no_id` INT, IN `login_godown_id` INT, IN `login_transporter_id` INT, IN `login_buyer_id` INT, IN `login_tds_on_id` INT, IN `login_nature_of_payment_id` INT, IN `login_status_id` INT, IN `login_purchase_return_type_id` INT, IN `login_quality_type_id` INT, IN `login_purchase_return_account_type` VARCHAR(100), IN `login_purchase_return_prefix` VARCHAR(100), IN `login_purchase_return_note_no` VARCHAR(100), IN `login_purchase_return_date` VARCHAR(100), IN `login_purchase_return_other_transporter` VARCHAR(100), IN `login_purchase_return_lr_no` VARCHAR(100), IN `login_purchase_return_bale_marka` VARCHAR(100), IN `login_purchase_return_remark` TEXT, IN `login_purchase_return_lf_no` VARCHAR(100), IN `login_purchase_return_days` VARCHAR(100), IN `login_purchase_return_document_no` VARCHAR(100), IN `login_purchase_return_document_date` VARCHAR(100), IN `login_is_tds_applicable` VARCHAR(50), IN `login_purchase_return_tds_applicable_rate` VARCHAR(100), IN `login_purchase_return_total_tds` VARCHAR(100), IN `login_purchase_return_total_unit_sent` VARCHAR(100), IN `login_purchase_return_total_qty_sent` VARCHAR(100), IN `login_purchase_return_amount` VARCHAR(100), IN `login_purchase_return_total_disc_amt` VARCHAR(100), IN `login_purchase_return_total_freight` VARCHAR(100), IN `login_purchase_return_total_taxable` VARCHAR(100), IN `login_purchase_return_total_sgst` VARCHAR(100), IN `login_purchase_return_total_cgst` VARCHAR(100), IN `login_purchase_return_total_igst` VARCHAR(100), IN `login_purchase_return_total_amount` VARCHAR(100), IN `login_purchase_return_total_tcs_per` VARCHAR(100), IN `login_purchase_return_total_tcs_amt` VARCHAR(100), IN `login_purchase_return_round_off` VARCHAR(100), IN `login_purchase_return_total_net_amount` VARCHAR(100), IN `login_purchase_return_tds_with_total_net_amount` DOUBLE, IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_purchase_return');
  
 END;
 
 IF update_id > 0 THEN
 
 	UPDATE `erp_purchase_return` SET `user_id`=login_user_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`supplier_id`=login_supplier_id,`broker_id`=login_broker_id,`haste_id`=login_haste_id,`receiving_goods_address_id`=login_receiving_goods_address_id,`invoice_no_id`=login_invoice_no_id,`godown_id`=login_godown_id,`transporter_id`=login_transporter_id,`buyer_id`=login_buyer_id,`tds_on_id`=login_tds_on_id,`nature_of_payment_id`=login_nature_of_payment_id,`status_id`=login_status_id,`purchase_return_type_id`=login_purchase_return_type_id,`quality_type_id`=login_quality_type_id,`purchase_return_account_type`=login_purchase_return_account_type,`purchase_return_prefix`=login_purchase_return_prefix,`purchase_return_note_no`=login_purchase_return_note_no,`purchase_return_date`=login_purchase_return_date,`purchase_return_other_transporter`=login_purchase_return_other_transporter,`purchase_return_lr_no`=login_purchase_return_lr_no,`purchase_return_bale_marka`=login_purchase_return_bale_marka,`purchase_return_remark`=login_purchase_return_remark,`purchase_return_lf_no`=login_purchase_return_lf_no,`purchase_return_days`=login_purchase_return_days,`purchase_return_document_no`=login_purchase_return_document_no,`purchase_return_document_date`=login_purchase_return_document_date,`is_tds_applicable`=login_is_tds_applicable,`purchase_return_tds_applicable_rate`=login_purchase_return_tds_applicable_rate,`purchase_return_total_tds`=login_purchase_return_total_tds,`purchase_return_total_unit_sent`=login_purchase_return_total_unit_sent,`purchase_return_total_qty_sent`=login_purchase_return_total_qty_sent,`purchase_return_amount`=login_purchase_return_amount,`purchase_return_total_disc_amt`=login_purchase_return_total_disc_amt,`purchase_return_total_freight`=login_purchase_return_total_freight,`purchase_return_total_taxable`=login_purchase_return_total_taxable,`purchase_return_total_sgst`=login_purchase_return_total_sgst,`purchase_return_total_cgst`=login_purchase_return_total_cgst,`purchase_return_total_igst`=login_purchase_return_total_igst,`purchase_return_total_amount`=login_purchase_return_total_amount,`purchase_return_total_tcs_per`=login_purchase_return_total_tcs_per,`purchase_return_total_tcs_amt`=login_purchase_return_total_tcs_amt,`purchase_return_round_off`=login_purchase_return_round_off,`purchase_return_total_net_amount`=login_purchase_return_total_net_amount,`purchase_return_tds_with_total_net_amount`=login_purchase_return_tds_with_total_net_amount,`purchase_return_update_date`=login_update_date WHERE id=update_id;

ELSE
 
 	INSERT INTO `erp_purchase_return`(`user_id`, `branch_id`, `company_id`, `year_id`, `supplier_id`, `broker_id`, `haste_id`, `receiving_goods_address_id`, `invoice_no_id`, `godown_id`, `transporter_id`, `buyer_id`, `tds_on_id`, `nature_of_payment_id`, `status_id`, `purchase_return_type_id`,`quality_type_id`, `purchase_return_account_type`, `purchase_return_prefix`, `purchase_return_note_no`, `purchase_return_date`, `purchase_return_other_transporter`, `purchase_return_lr_no`, `purchase_return_bale_marka`, `purchase_return_remark`, `purchase_return_lf_no`, `purchase_return_days`, `purchase_return_document_no`, `purchase_return_document_date`, `is_tds_applicable`, `purchase_return_tds_applicable_rate`, `purchase_return_total_tds`, `purchase_return_total_unit_sent`, `purchase_return_total_qty_sent`, `purchase_return_amount`, `purchase_return_total_disc_amt`, `purchase_return_total_freight`, `purchase_return_total_taxable`, `purchase_return_total_sgst`, `purchase_return_total_cgst`, `purchase_return_total_igst`, `purchase_return_total_amount`, `purchase_return_total_tcs_per`, `purchase_return_total_tcs_amt`, `purchase_return_round_off`, `purchase_return_total_net_amount`,`purchase_return_tds_with_total_net_amount`, `purchase_return_entry_date`, `purchase_return_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_supplier_id,login_broker_id,login_haste_id,login_receiving_goods_address_id,login_invoice_no_id,login_godown_id,login_transporter_id,login_buyer_id,login_tds_on_id,login_nature_of_payment_id,login_status_id,login_purchase_return_type_id,login_quality_type_id,login_purchase_return_account_type,login_purchase_return_prefix,login_purchase_return_note_no,login_purchase_return_date,login_purchase_return_other_transporter,login_purchase_return_lr_no,login_purchase_return_bale_marka,login_purchase_return_remark,login_purchase_return_lf_no,login_purchase_return_days,login_purchase_return_document_no,login_purchase_return_document_date,login_is_tds_applicable,login_purchase_return_tds_applicable_rate,login_purchase_return_total_tds,login_purchase_return_total_unit_sent,login_purchase_return_total_qty_sent,login_purchase_return_amount,login_purchase_return_total_disc_amt,login_purchase_return_total_freight,login_purchase_return_total_taxable,login_purchase_return_total_sgst,login_purchase_return_total_cgst,login_purchase_return_total_igst,login_purchase_return_total_amount,login_purchase_return_total_tcs_per,login_purchase_return_total_tcs_amt,login_purchase_return_round_off,login_purchase_return_total_net_amount,login_purchase_return_tds_with_total_net_amount,login_entry_date,login_update_date);
    
    SELECT id as purchse_return_id,erp_purchase_return.* FROM erp_purchase_return WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_purchase_return_child`(IN `update_id` INT, IN `login_user_id` INT, IN `login_purchase_return_id` INT, IN `login_purchase_tax_child_id` INT, IN `login_quality_id` INT, IN `login_party_id` INT, IN `login_gst_id` INT, IN `login_purchase_return_child_quality_meter` VARCHAR(100), IN `login_purchase_return_child_quality_meter_average` VARCHAR(100), IN `login_purchase_return_child_remark` TEXT, IN `login_purchase_return_child_hsn` VARCHAR(100), IN `login_purchase_return_child_cut` VARCHAR(100), IN `login_purchase_return_child_qty_per` VARCHAR(100), IN `login_purchase_return_child_qty` VARCHAR(100), IN `login_purchase_return_child_unit` VARCHAR(100), IN `login_purchase_return_child_unit_sent` VARCHAR(100), IN `login_purchase_return_child_qty_sent` VARCHAR(100), IN `login_purchase_return_child_meter` VARCHAR(100), IN `login_purchase_return_child_fold` VARCHAR(100), IN `login_purchase_return_child_net_meter` VARCHAR(100), IN `login_purchase_return_child_rate_per` VARCHAR(100), IN `login_purchase_return_child_rate` VARCHAR(100), IN `login_purchase_return_child_amount` VARCHAR(100), IN `login_purchase_return_child_disc_per` VARCHAR(100), IN `login_purchase_return_child_disc_amt` VARCHAR(100), IN `login_purchase_return_child_freight` VARCHAR(100), IN `login_purchase_return_child_taxable` VARCHAR(100), IN `login_purchase_return_child_sgst` VARCHAR(100), IN `login_purchase_return_child_cgst` VARCHAR(100), IN `login_purchase_return_child_igst` VARCHAR(100), IN `login_purchase_return_child_total_amount` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_purchase_return_child');

 END;
 
IF update_id > 0 THEN

	UPDATE `erp_purchase_return_child` SET `user_id`=login_user_id,`purchase_return_id`=login_purchase_return_id,`purchase_tax_child_id`=login_purchase_tax_child_id,`quality_id`=login_quality_id,`party_id`=login_party_id,`gst_id`=login_gst_id,`purchase_return_child_quality_meter`=login_purchase_return_child_quality_meter,`purchase_return_child_quality_meter_average`=login_purchase_return_child_quality_meter_average,`purchase_return_child_remark`=login_purchase_return_child_remark,`purchase_return_child_hsn`=login_purchase_return_child_hsn,`purchase_return_child_cut`=login_purchase_return_child_cut,`purchase_return_child_qty_per`=login_purchase_return_child_qty_per,`purchase_return_child_qty`=login_purchase_return_child_qty,`purchase_return_child_unit`=login_purchase_return_child_unit,`purchase_return_child_unit_sent`=login_purchase_return_child_unit_sent,`purchase_return_child_qty_sent`=login_purchase_return_child_qty_sent,`purchase_return_child_meter`=login_purchase_return_child_meter,`purchase_return_child_fold`=login_purchase_return_child_fold,`purchase_return_child_net_meter`=login_purchase_return_child_net_meter,`purchase_return_child_rate_per`=login_purchase_return_child_rate_per,`purchase_return_child_rate`=login_purchase_return_child_rate,`purchase_return_child_amount`=login_purchase_return_child_amount,`purchase_return_child_disc_per`=login_purchase_return_child_disc_per,`purchase_return_child_disc_amt`=login_purchase_return_child_disc_amt,`purchase_return_child_freight`=login_purchase_return_child_freight,`purchase_return_child_taxable`=login_purchase_return_child_taxable,`purchase_return_child_sgst`=login_purchase_return_child_sgst,`purchase_return_child_cgst`=login_purchase_return_child_cgst,`purchase_return_child_igst`=login_purchase_return_child_igst,`purchase_return_child_total_amount`=login_purchase_return_child_total_amount,`purchase_return_child_update_date`=login_update_date WHERE id=update_id;

ELSE

	INSERT INTO `erp_purchase_return_child`(`user_id`, `purchase_return_id`, `purchase_tax_child_id`, `quality_id`, `party_id`, `gst_id`,`purchase_return_child_quality_meter`,`purchase_return_child_quality_meter_average`, `purchase_return_child_remark`, `purchase_return_child_hsn`, `purchase_return_child_cut`, `purchase_return_child_qty_per`, `purchase_return_child_qty`,`purchase_return_child_unit`, `purchase_return_child_unit_sent`, `purchase_return_child_qty_sent`, `purchase_return_child_meter`, `purchase_return_child_fold`, `purchase_return_child_net_meter`, `purchase_return_child_rate_per`, `purchase_return_child_rate`, `purchase_return_child_amount`, `purchase_return_child_disc_per`, `purchase_return_child_disc_amt`, `purchase_return_child_freight`, `purchase_return_child_taxable`, `purchase_return_child_sgst`, `purchase_return_child_cgst`, `purchase_return_child_igst`, `purchase_return_child_total_amount`, `purchase_return_child_entry_date`, `purchase_return_child_update_date`) VALUES (login_user_id,login_purchase_return_id,login_purchase_tax_child_id,login_quality_id,login_party_id,login_gst_id,login_purchase_return_child_quality_meter,login_purchase_return_child_quality_meter_average,login_purchase_return_child_remark,login_purchase_return_child_hsn,login_purchase_return_child_cut,login_purchase_return_child_qty_per,login_purchase_return_child_qty,login_purchase_return_child_unit,login_purchase_return_child_unit_sent,login_purchase_return_child_qty_sent,login_purchase_return_child_meter,login_purchase_return_child_fold,login_purchase_return_child_net_meter,login_purchase_return_child_rate_per,login_purchase_return_child_rate,login_purchase_return_child_amount,login_purchase_return_child_disc_per,login_purchase_return_child_disc_amt,login_purchase_return_child_freight,login_purchase_return_child_taxable,login_purchase_return_child_sgst,login_purchase_return_child_cgst,login_purchase_return_child_igst,login_purchase_return_child_total_amount,login_entry_date,login_update_date);
	
    SELECT id as purchase_return_child_id,erp_purchase_return_child.* FROM erp_purchase_return_child WHERE id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_purchase_tax_invoice`(IN `update_id` INT, IN `login_user_id` INT, IN `login_supplier_id` INT, IN `login_broker_id` INT, IN `login_quality_type_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_godown_id` INT, IN `login_mill_id` INT, IN `login_challan_type_id` INT, IN `login_tds_on_id` INT, IN `login_nature_of_payment_id` INT, IN `login_status_id` INT, IN `login_account_type` VARCHAR(100), IN `login_purchase_tax_invoice_lf_no` VARCHAR(100), IN `login_purchase_tax_invoice_no` VARCHAR(100), IN `login_purchase_tax_invoice_date` VARCHAR(100), IN `login_purchase_tax_invoice_sub_order_number` VARCHAR(100), IN `login_purchase_tax_invoice_lr_no` VARCHAR(100), IN `login_puchase_tax_invoice_delivery_days` VARCHAR(100), IN `login_puchase_tax_invoice_bale_marka` VARCHAR(100), IN `login_puchase_tax_invoice_shipping_address` TEXT, IN `login_purchase_tax_invoice_remark` TEXT, IN `login_purchase_tax_invoice_entry_no` VARCHAR(100), IN `login_is_cash_payment` VARCHAR(100), IN `login_is_tds_applicable` VARCHAR(100), IN `login_puchase_tax_invoice_tds_applicable_rate` VARCHAR(100), IN `login_puchase_tax_invoice_total_tds` VARCHAR(100), IN `login_puchase_tax_invoice_tds_with_total_net_amount` VARCHAR(100), IN `login_is_mill_issue` VARCHAR(100), IN `login_purchase_tax_invoice_total_unit_sent` VARCHAR(100), IN `login_purchase_tax_invoice_total_qty_sent` VARCHAR(100), IN `login_purchase_tax_invoice_total_net_meter` VARCHAR(100), IN `login_purchase_tax_invoice_total_total` VARCHAR(100), IN `login_purchase_tax_invoice_total_disc_amt` VARCHAR(100), IN `login_purchase_tax_invoice_total_freight` VARCHAR(100), IN `login_purchase_tax_invoice_total_fless` VARCHAR(100), IN `login_purchase_tax_invoice_total_insurance` VARCHAR(100), IN `login_purchase_tax_invoice_total_taxable` VARCHAR(100), IN `login_purchase_tax_invoice_total_sgst` VARCHAR(100), IN `login_purchase_tax_invoice_total_cgst` VARCHAR(100), IN `login_purchase_tax_invoice_total_igst` VARCHAR(100), IN `login_purchase_tax_invoice_total_amount` VARCHAR(100), IN `login_puchase_tax_invoice_tcs_per` VARCHAR(100), IN `login_puchase_tax_invoice_tcs_amt` VARCHAR(100), IN `login_purchase_tax_invoice_round_off` VARCHAR(100), IN `login_purchase_tax_invoice_net_amount` VARCHAR(100), IN `login_purchase_tax_invoice_image` LONGTEXT, IN `login_purchase_tax_invoice_credit_days` VARCHAR(100), IN `login_purchase_tax_invoice_payment_date` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_purchase_tax_invoice');

 END;

 IF update_id > 0 THEN
 
 	UPDATE `erp_purchase_tax_invoice` SET `user_id`=login_user_id,`supplier_id`=login_supplier_id,`broker_id`=login_broker_id,`quality_type_id`=login_quality_type_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`godown_id`=login_godown_id,`mill_id`=login_mill_id,`challan_type_id`=login_challan_type_id,`tds_on_id`=login_tds_on_id,`nature_of_payment_id`=login_nature_of_payment_id,`status_id`=login_status_id,`account_type`=login_account_type,`purchase_tax_invoice_lf_no`=login_purchase_tax_invoice_lf_no,`purchase_tax_invoice_no`=login_purchase_tax_invoice_no,`purchase_tax_invoice_date`=login_purchase_tax_invoice_date,`purchase_tax_invoice_sub_order_number`=login_purchase_tax_invoice_sub_order_number,`purchase_tax_invoice_lr_no`=login_purchase_tax_invoice_lr_no,`puchase_tax_invoice_delivery_days`=login_puchase_tax_invoice_delivery_days,`puchase_tax_invoice_bale_marka`=login_puchase_tax_invoice_bale_marka,`puchase_tax_invoice_shipping_address`=login_puchase_tax_invoice_shipping_address,`purchase_tax_invoice_remark`=login_purchase_tax_invoice_remark,`purchase_tax_invoice_entry_no`=login_purchase_tax_invoice_entry_no,`is_cash_payment`=login_is_cash_payment,`is_tds_applicable`=login_is_tds_applicable,`puchase_tax_invoice_tds_applicable_rate`=login_puchase_tax_invoice_tds_applicable_rate,`puchase_tax_invoice_total_tds`=login_puchase_tax_invoice_total_tds,`puchase_tax_invoice_tds_with_total_net_amount`=login_puchase_tax_invoice_tds_with_total_net_amount,`is_mill_issue`=login_is_mill_issue,`purchase_tax_invoice_total_unit_sent`=login_purchase_tax_invoice_total_unit_sent,`purchase_tax_invoice_total_qty_sent`=login_purchase_tax_invoice_total_qty_sent,`purchase_tax_invoice_total_net_meter`=login_purchase_tax_invoice_total_net_meter,`purchase_tax_invoice_total_total`=login_purchase_tax_invoice_total_total,`purchase_tax_invoice_total_disc_amt`=login_purchase_tax_invoice_total_disc_amt,`purchase_tax_invoice_total_freight`=login_purchase_tax_invoice_total_freight,`purchase_tax_invoice_total_fless`=login_purchase_tax_invoice_total_fless,`purchase_tax_invoice_total_insurance`=login_purchase_tax_invoice_total_insurance,`purchase_tax_invoice_total_taxable`=login_purchase_tax_invoice_total_taxable,`purchase_tax_invoice_total_sgst`=login_purchase_tax_invoice_total_sgst,`purchase_tax_invoice_total_cgst`=login_purchase_tax_invoice_total_cgst,`purchase_tax_invoice_total_igst`=login_purchase_tax_invoice_total_igst,`purchase_tax_invoice_total_amount`=login_purchase_tax_invoice_total_amount,`puchase_tax_invoice_tcs_per`=login_puchase_tax_invoice_tcs_per,`puchase_tax_invoice_tcs_amt`=login_puchase_tax_invoice_tcs_amt,`purchase_tax_invoice_round_off`=login_purchase_tax_invoice_round_off,`purchase_tax_invoice_net_amount`=login_purchase_tax_invoice_net_amount,`purchase_tax_invoice_image`=login_purchase_tax_invoice_image,`purchase_tax_invoice_credit_days`=login_purchase_tax_invoice_credit_days,`purchase_tax_invoice_payment_date`=login_purchase_tax_invoice_payment_date,`purchase_tax_invoice_update_date`=login_update_date WHERE id=update_id;

ELSE
    INSERT INTO `erp_purchase_tax_invoice`(`user_id`, `supplier_id`, `broker_id`, `quality_type_id`, `branch_id`, `company_id`, `year_id`, `godown_id`, `mill_id`, `challan_type_id`,`tds_on_id`,`nature_of_payment_id`,`status_id`, `account_type`, `purchase_tax_invoice_lf_no`, `purchase_tax_invoice_no`, `purchase_tax_invoice_date`, `purchase_tax_invoice_sub_order_number`, `purchase_tax_invoice_lr_no`,`puchase_tax_invoice_delivery_days`,`puchase_tax_invoice_bale_marka`,`puchase_tax_invoice_shipping_address`, `purchase_tax_invoice_remark`,`purchase_tax_invoice_entry_no`,`is_cash_payment`,`is_tds_applicable`,`puchase_tax_invoice_tds_applicable_rate`,`puchase_tax_invoice_total_tds`,`puchase_tax_invoice_tds_with_total_net_amount`, `is_mill_issue`, `purchase_tax_invoice_total_unit_sent`, `purchase_tax_invoice_total_qty_sent`, `purchase_tax_invoice_total_net_meter`, `purchase_tax_invoice_total_total`, `purchase_tax_invoice_total_disc_amt`, `purchase_tax_invoice_total_freight`, `purchase_tax_invoice_total_fless`, `purchase_tax_invoice_total_insurance`, `purchase_tax_invoice_total_taxable`, `purchase_tax_invoice_total_sgst`, `purchase_tax_invoice_total_cgst`, `purchase_tax_invoice_total_igst`, `purchase_tax_invoice_total_amount`, `puchase_tax_invoice_tcs_per`, `puchase_tax_invoice_tcs_amt`, `purchase_tax_invoice_round_off`, `purchase_tax_invoice_net_amount`,`purchase_tax_invoice_image`,`purchase_tax_invoice_credit_days`,`purchase_tax_invoice_payment_date`,`purchase_tax_invoice_entry_date`, `purchase_tax_invoice_update_date`) VALUES (login_user_id,login_supplier_id,login_broker_id,login_quality_type_id,login_branch_id,login_company_id,login_year_id,login_godown_id,login_mill_id,login_challan_type_id,login_tds_on_id,login_nature_of_payment_id,login_status_id,login_account_type,login_purchase_tax_invoice_lf_no,login_purchase_tax_invoice_no,login_purchase_tax_invoice_date,login_purchase_tax_invoice_sub_order_number,login_purchase_tax_invoice_lr_no,login_puchase_tax_invoice_delivery_days,login_puchase_tax_invoice_bale_marka,login_puchase_tax_invoice_shipping_address,login_purchase_tax_invoice_remark,login_purchase_tax_invoice_entry_no,login_is_cash_payment,login_is_tds_applicable,login_puchase_tax_invoice_tds_applicable_rate,login_puchase_tax_invoice_total_tds,login_puchase_tax_invoice_tds_with_total_net_amount,login_is_mill_issue,login_purchase_tax_invoice_total_unit_sent,login_purchase_tax_invoice_total_qty_sent,login_purchase_tax_invoice_total_net_meter,login_purchase_tax_invoice_total_total,login_purchase_tax_invoice_total_disc_amt,login_purchase_tax_invoice_total_freight,login_purchase_tax_invoice_total_fless,login_purchase_tax_invoice_total_insurance,login_purchase_tax_invoice_total_taxable,login_purchase_tax_invoice_total_sgst,login_purchase_tax_invoice_total_cgst,login_purchase_tax_invoice_total_igst,login_purchase_tax_invoice_total_amount,login_puchase_tax_invoice_tcs_per,login_puchase_tax_invoice_tcs_amt,login_purchase_tax_invoice_round_off,login_purchase_tax_invoice_net_amount,login_purchase_tax_invoice_image,login_purchase_tax_invoice_credit_days,login_purchase_tax_invoice_payment_date,login_entry_date,login_update_date);
    
    SELECT id as purchase_tax_invoice_id,erp_purchase_tax_invoice.*,NULL as tax_child_data FROM erp_purchase_tax_invoice WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_purchase_tax_invoice_child`(IN `update_id` INT, IN `login_user_id` INT, IN `login_purchase_tax_invoice_id` INT, IN `login_quality_id` INT, IN `login_gst_id` INT, IN `login_purchase_tax_invoice_quality_meter` VARCHAR(100), IN `login_purchase_tax_invoice_quality_meter_average` VARCHAR(100), IN `login_purchase_tax_invoice_child_remark` TEXT, IN `login_purchase_tax_invoice_child_hsn` VARCHAR(100), IN `login_purchase_tax_invoice_child_stock` VARCHAR(100), IN `login_purchase_tax_invoice_child_cut` VARCHAR(100), IN `login_purchase_tax_invoice_child_cut_meters` VARCHAR(100), IN `login_purchase_tax_invoice_child_pkg` VARCHAR(100), IN `login_purchase_tax_invoice_child_qty_per` VARCHAR(100), IN `login_purchase_tax_invoice_child_unit_sent` VARCHAR(100), IN `login_purchase_tax_invoice_child_qty_sent` VARCHAR(100), IN `login_purchase_tax_invoice_child_rate_per` VARCHAR(100), IN `login_purchase_tax_invoice_child_fold` VARCHAR(100), IN `login_purchase_tax_invoice_child_net_meter` VARCHAR(100), IN `login_purchase_tax_invoice_child_rate` VARCHAR(100), IN `login_purchase_tax_invoice_child_total` VARCHAR(100), IN `login_purchase_tax_invoice_child_disc_per` VARCHAR(100), IN `login_purchase_tax_invoice_child_disc_amt` VARCHAR(100), IN `login_purchase_tax_invoice_child_freight` VARCHAR(100), IN `login_purchase_tax_invoice_child_fless` VARCHAR(100), IN `login_purchase_tax_invoice_child_insurance` VARCHAR(100), IN `login_purchase_tax_invoice_child_taxable` VARCHAR(100), IN `login_purchase_tax_invoice_child_sgst` VARCHAR(100), IN `login_purchase_tax_invoice_child_cgst` VARCHAR(100), IN `login_purchase_tax_invoice_child_igst` VARCHAR(100), IN `login_purchase_tax_invoice_child_amount` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_purchase_tax_invoice_child');

 END;

IF update_id > 0 THEN

	UPDATE `erp_purchase_tax_invoice_child` SET `user_id`=login_user_id,`purchase_tax_invoice_id`=login_purchase_tax_invoice_id,`quality_id`=login_quality_id,`gst_id`=login_gst_id,`purchase_tax_invoice_quality_meter`=login_purchase_tax_invoice_quality_meter,`purchase_tax_invoice_quality_meter_average`=login_purchase_tax_invoice_quality_meter_average,`purchase_tax_invoice_child_remark`=login_purchase_tax_invoice_child_remark,`purchase_tax_invoice_child_hsn`=login_purchase_tax_invoice_child_hsn,`purchase_tax_invoice_child_stock`=login_purchase_tax_invoice_child_stock,`purchase_tax_invoice_child_cut`=login_purchase_tax_invoice_child_cut,`purchase_tax_invoice_child_cut_meters`=login_purchase_tax_invoice_child_cut_meters,`purchase_tax_invoice_child_pkg`=login_purchase_tax_invoice_child_pkg,`purchase_tax_invoice_child_qty_per`=login_purchase_tax_invoice_child_qty_per,`purchase_tax_invoice_child_unit_sent`=login_purchase_tax_invoice_child_unit_sent,`purchase_tax_invoice_child_qty_sent`=login_purchase_tax_invoice_child_qty_sent,`purchase_tax_invoice_child_rate_per`=login_purchase_tax_invoice_child_rate_per,`purchase_tax_invoice_child_fold`=login_purchase_tax_invoice_child_fold,`purchase_tax_invoice_child_net_meter`=login_purchase_tax_invoice_child_net_meter,`purchase_tax_invoice_child_rate`=login_purchase_tax_invoice_child_rate,`purchase_tax_invoice_child_total`=login_purchase_tax_invoice_child_total,`purchase_tax_invoice_child_disc_per`=login_purchase_tax_invoice_child_disc_per,`purchase_tax_invoice_child_disc_amt`=login_purchase_tax_invoice_child_disc_amt,`purchase_tax_invoice_child_freight`=login_purchase_tax_invoice_child_freight,`purchase_tax_invoice_child_fless`=login_purchase_tax_invoice_child_fless,`purchase_tax_invoice_child_insurance`=login_purchase_tax_invoice_child_insurance,`purchase_tax_invoice_child_taxable`=login_purchase_tax_invoice_child_taxable,`purchase_tax_invoice_child_sgst`=login_purchase_tax_invoice_child_sgst,`purchase_tax_invoice_child_cgst`=login_purchase_tax_invoice_child_cgst,`purchase_tax_invoice_child_igst`=login_purchase_tax_invoice_child_igst,`purchase_tax_invoice_child_amount`=login_purchase_tax_invoice_child_amount,`purchase_tax_invoice_child_update_date`=login_update_date WHERE id=update_id;

ELSE

	INSERT INTO `erp_purchase_tax_invoice_child`(`user_id`, `purchase_tax_invoice_id`, `quality_id`, `gst_id`,`purchase_tax_invoice_quality_meter`,`purchase_tax_invoice_quality_meter_average`, `purchase_tax_invoice_child_remark`, `purchase_tax_invoice_child_hsn`, `purchase_tax_invoice_child_stock`, `purchase_tax_invoice_child_cut`, `purchase_tax_invoice_child_cut_meters`, `purchase_tax_invoice_child_pkg`, `purchase_tax_invoice_child_qty_per`, `purchase_tax_invoice_child_unit_sent`, `purchase_tax_invoice_child_qty_sent`, `purchase_tax_invoice_child_rate_per`, `purchase_tax_invoice_child_fold`, `purchase_tax_invoice_child_net_meter`, `purchase_tax_invoice_child_rate`, `purchase_tax_invoice_child_total`, `purchase_tax_invoice_child_disc_per`, `purchase_tax_invoice_child_disc_amt`, `purchase_tax_invoice_child_freight`, `purchase_tax_invoice_child_fless`, `purchase_tax_invoice_child_insurance`, `purchase_tax_invoice_child_taxable`, `purchase_tax_invoice_child_sgst`, `purchase_tax_invoice_child_cgst`, `purchase_tax_invoice_child_igst`, `purchase_tax_invoice_child_amount`, `purchase_tax_invoice_child_entry_date`, `purchase_tax_invoice_child_update_date`) VALUES (login_user_id,login_purchase_tax_invoice_id,login_quality_id,login_gst_id,login_purchase_tax_invoice_quality_meter,login_purchase_tax_invoice_quality_meter_average,login_purchase_tax_invoice_child_remark,login_purchase_tax_invoice_child_hsn,login_purchase_tax_invoice_child_stock,login_purchase_tax_invoice_child_cut,login_purchase_tax_invoice_child_cut_meters,login_purchase_tax_invoice_child_pkg,login_purchase_tax_invoice_child_qty_per,login_purchase_tax_invoice_child_unit_sent,login_purchase_tax_invoice_child_qty_sent,login_purchase_tax_invoice_child_rate_per,login_purchase_tax_invoice_child_fold,login_purchase_tax_invoice_child_net_meter,login_purchase_tax_invoice_child_rate,login_purchase_tax_invoice_child_total,login_purchase_tax_invoice_child_disc_per,login_purchase_tax_invoice_child_disc_amt,login_purchase_tax_invoice_child_freight,login_purchase_tax_invoice_child_fless,login_purchase_tax_invoice_child_insurance,login_purchase_tax_invoice_child_taxable,login_purchase_tax_invoice_child_sgst,login_purchase_tax_invoice_child_cgst,login_purchase_tax_invoice_child_igst,login_purchase_tax_invoice_child_amount,login_entry_date,login_update_date);
	
    SELECT tax_child.id as purchase_tax_invoice_child_id,tax_child.*,tax_par.company_id,tax_par.branch_id,tax_par.year_id,tax_par.mill_id,tax_par.is_mill_issue FROM erp_purchase_tax_invoice_child as tax_child LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.id=tax_child.purchase_tax_invoice_id WHERE tax_child.id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_quality`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_brand_id` INT, IN `login_material_id` INT, IN `login_quality_type_id` INT, IN `login_quality_name` VARCHAR(255), IN `login_quality_sub_name` VARCHAR(100), IN `login_quality_sub_attribute` VARCHAR(255), IN `login_quality_sales_name` VARCHAR(255), IN `login_quality_print_name` VARCHAR(255), IN `login_quality_image` LONGTEXT, IN `login_quality_stock` VARCHAR(100), IN `login_quality_meter` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_quality');

 END;
 
IF update_id > 0 THEN

UPDATE `erp_quality` SET `user_id`=login_user_id,`company_id`=login_company_id,`brand_id`=login_brand_id,`material_id`=login_material_id,`quality_type_id`=login_quality_type_id,`quality_name`=login_quality_name,`quality_sub_name`=login_quality_sub_name,`quality_sub_attribute`=login_quality_sub_attribute,`quality_sales_name`=login_quality_sales_name,`quality_print_name`=login_quality_print_name,`quality_image`=login_quality_image,`quality_stock`=login_quality_stock,`quality_meter`=login_quality_meter,`quality_update_date`=login_update_date WHERE id=update_id;

ELSE

	INSERT INTO `erp_quality`(`user_id`, `company_id`, `brand_id`, `material_id`, `quality_type_id`, `quality_name`, `quality_sub_name`, `quality_sub_attribute`, `quality_sales_name`, `quality_print_name`, `quality_image`, `quality_stock`,`quality_meter`, `quality_entry_date`, `quality_update_date`) VALUES (login_user_id,login_company_id,login_brand_id,login_material_id,login_quality_type_id,login_quality_name,login_quality_sub_name,login_quality_sub_attribute,login_quality_sales_name,login_quality_print_name,login_quality_image,login_quality_stock,login_quality_meter,login_entry_date,login_update_date);
	
    SELECT id as quality_id,erp_quality.* FROM erp_quality WHERE id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_reprocess`(IN `update_id` INT, IN `login_user_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_godown_id` INT, IN `login_quality_id` INT, IN `login_mill_id` INT, IN `login_mill_master_id` INT, IN `login_mill_reprocess_issue_challan_no` VARCHAR(100), IN `login_mill_reprocess_issue_date` VARCHAR(100), IN `login_mill_reprocess_issue_taka` VARCHAR(100), IN `login_mill_reprocess_issue_meter` VARCHAR(100), IN `login_mill_reprocess_issue_weight` VARCHAR(100), IN `login_mill_reprocess_require_width` VARCHAR(100), IN `login_mill_reprocess_require_shortage` VARCHAR(100), IN `login_mill_reprocess_rate` VARCHAR(100), IN `login_mill_reprocess_amount` VARCHAR(100), IN `login_mill_reprocess_remark` TEXT, IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_reprocess');

 END;
 
IF update_id > 0 THEN

	UPDATE `erp_mill_reprocess` SET `user_id`=login_user_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`godown_id`=login_godown_id,`quality_id`=login_quality_id,`mill_id`=login_mill_id,`mill_master_id`=login_mill_master_id,`mill_reprocess_issue_challan_no`=login_mill_reprocess_issue_challan_no,`mill_reprocess_issue_date`=login_mill_reprocess_issue_date,`mill_reprocess_issue_taka`=login_mill_reprocess_issue_taka,`mill_reprocess_issue_meter`=login_mill_reprocess_issue_meter,`mill_reprocess_issue_weight`=login_mill_reprocess_issue_weight,`mill_reprocess_require_width`=login_mill_reprocess_require_width,`mill_reprocess_require_shortage`=login_mill_reprocess_require_shortage,`mill_reprocess_rate`=login_mill_reprocess_rate,`mill_reprocess_amount`=login_mill_reprocess_amount,`mill_reprocess_remark`=login_mill_reprocess_remark,`mill_reprocess_update_date`=login_update_date WHERE id=update_id;

ELSE
	INSERT INTO `erp_mill_reprocess`(`user_id`, `branch_id`, `company_id`, `year_id`, `godown_id`, `quality_id`, `mill_id`, `mill_master_id`, `mill_reprocess_issue_challan_no`,`mill_reprocess_issue_date`, `mill_reprocess_issue_taka`, `mill_reprocess_issue_meter`, `mill_reprocess_issue_weight`, `mill_reprocess_require_width`, `mill_reprocess_require_shortage`,`mill_reprocess_rate`,`mill_reprocess_amount`, `mill_reprocess_remark`, `mill_reprocess_entry_date`, `mill_reprocess_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_godown_id,login_quality_id,login_mill_id,login_mill_master_id,login_mill_reprocess_issue_challan_no,login_mill_reprocess_issue_date,login_mill_reprocess_issue_taka,login_mill_reprocess_issue_meter,login_mill_reprocess_issue_weight,login_mill_reprocess_require_width,login_mill_reprocess_require_shortage,login_mill_reprocess_rate,login_mill_reprocess_amount,login_mill_reprocess_remark,login_entry_date,login_update_date);
	
    SELECT id as reprocess_id,erp_mill_reprocess.* FROM erp_mill_reprocess WHERE id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_sale_jober_issue`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT, IN `login_godown_id` INT, IN `login_sale_child_id` INT, IN `login_quality_id` INT, IN `login_jober_id` INT, IN `login_gst_id` INT, IN `login_sale_jober_issue_remark` TEXT, IN `login_sale_jober_issue_invoice_no` VARCHAR(100), IN `login_sale_jober_issue_date` VARCHAR(100), IN `login_sale_jober_issue_taka` VARCHAR(100), IN `login_sale_jober_issue_meter` VARCHAR(100), IN `login_sale_jober_issue_meter_data` LONGTEXT, IN `login_sale_jober_issue_weight` VARCHAR(100), IN `login_sale_jober_issue_fold` VARCHAR(100), IN `login_sale_jober_issue_count_meter` VARCHAR(100), IN `login_sale_jober_issue_rate` VARCHAR(100), IN `login_sale_jober_issue_total` VARCHAR(100), IN `login_is_jober_issue_completed` VARCHAR(50), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_sale_jober_issue');

 END;

 IF update_id > 0 THEN

    UPDATE `erp_sale_jober_issue` SET `user_id`=login_user_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`godown_id`=login_godown_id,`sale_child_id`=login_sale_child_id,`quality_id`=login_quality_id,`jober_id`=login_jober_id,`gst_id`=login_gst_id,`sale_jober_issue_remark`=login_sale_jober_issue_remark,`sale_jober_issue_invoice_no`=login_sale_jober_issue_invoice_no,`sale_jober_issue_date`=login_sale_jober_issue_date,`sale_jober_issue_taka`=login_sale_jober_issue_taka,`sale_jober_issue_meter`=login_sale_jober_issue_meter,`sale_jober_issue_meter_data`=login_sale_jober_issue_meter_data,`sale_jober_issue_weight`=login_sale_jober_issue_weight,`sale_jober_issue_fold`=login_sale_jober_issue_fold,`sale_jober_issue_count_meter`=login_sale_jober_issue_count_meter,`sale_jober_issue_rate`=login_sale_jober_issue_rate,`sale_jober_issue_total`=login_sale_jober_issue_total,`is_jober_issue_completed`=login_is_jober_issue_completed,`sale_jober_issue_update_date`=login_update_date WHERE id=update_id;
 	
ELSE
    
    INSERT INTO `erp_sale_jober_issue`(`user_id`, `branch_id`, `company_id`, `year_id`, `godown_id`, `sale_child_id`, `quality_id`, `jober_id`, `gst_id`,`sale_jober_issue_remark`, `sale_jober_issue_invoice_no`,`sale_jober_issue_date`,`sale_jober_issue_taka`, `sale_jober_issue_meter`,`sale_jober_issue_meter_data`,`sale_jober_issue_weight`, `sale_jober_issue_fold`,`sale_jober_issue_count_meter`,`sale_jober_issue_rate`, `sale_jober_issue_total`,`is_jober_issue_completed`, `sale_jober_issue_entry_date`, `sale_jober_issue_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_godown_id,login_sale_child_id,login_quality_id,login_jober_id,login_gst_id,login_sale_jober_issue_remark,login_sale_jober_issue_invoice_no,login_sale_jober_issue_date,login_sale_jober_issue_taka,login_sale_jober_issue_meter,login_sale_jober_issue_meter_data,login_sale_jober_issue_weight,login_sale_jober_issue_fold,login_sale_jober_issue_count_meter,login_sale_jober_issue_rate,login_sale_jober_issue_total,login_is_jober_issue_completed,login_entry_date,login_update_date);
    
    SELECT id as sale_jober_issue_id,erp_sale_jober_issue.* FROM erp_sale_jober_issue WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_sale_jober_receive`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT, IN `login_godown_id` INT, IN `login_sale_jober_issue_id` INT, IN `login_quality_id` INT, IN `login_jober_id` INT, IN `login_gst_id` INT, IN `login_sale_jober_receive_remark` TEXT, IN `login_sale_jober_receive_invoice_no` VARCHAR(100), IN `login_sale_jober_receive_date` VARCHAR(100), IN `login_sale_jober_receive_lf_no` VARCHAR(100), IN `login_sale_jober_receive_taka` VARCHAR(100), IN `login_sale_jober_receive_meter` VARCHAR(100), IN `login_sale_jober_receive_meter_data` LONGTEXT, IN `login_sale_jober_receive_weight` VARCHAR(100), IN `login_sale_jober_receive_fold` VARCHAR(100), IN `login_sale_jober_receive_count_meter` VARCHAR(100), IN `login_sale_jober_receive_rate` VARCHAR(100), IN `login_sale_jober_receive_shortage` VARCHAR(100), IN `login_sale_jober_receive_total` VARCHAR(100), IN `login_is_work_completed` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_sale_jober_receive');

 END;

 IF update_id > 0 THEN
 
	UPDATE `erp_sale_jober_receive` SET `user_id`=login_user_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`godown_id`=login_godown_id,`sale_jober_issue_id`=login_sale_jober_issue_id,`quality_id`=login_quality_id,`jober_id`=login_jober_id,`gst_id`=login_gst_id,`sale_jober_receive_remark`=login_sale_jober_receive_remark,`sale_jober_receive_invoice_no`=login_sale_jober_receive_invoice_no,`sale_jober_receive_date`=login_sale_jober_receive_date,`sale_jober_receive_lf_no`=login_sale_jober_receive_lf_no,`sale_jober_receive_taka`=login_sale_jober_receive_taka,`sale_jober_receive_meter`=login_sale_jober_receive_meter,`sale_jober_receive_meter_data`=login_sale_jober_receive_meter_data,`sale_jober_receive_weight`=login_sale_jober_receive_weight,`sale_jober_receive_fold`=login_sale_jober_receive_fold,`sale_jober_receive_count_meter`=login_sale_jober_receive_count_meter,`sale_jober_receive_rate`=login_sale_jober_receive_rate,`sale_jober_receive_shortage`=login_sale_jober_receive_shortage,`sale_jober_receive_total`=login_sale_jober_receive_total,`is_work_completed`=login_is_work_completed,`sale_jober_receive_update_date`=login_update_date WHERE id=update_id;
 	
ELSE
    
    INSERT INTO `erp_sale_jober_receive`(`user_id`, `branch_id`, `company_id`, `year_id`, `godown_id`, `sale_jober_issue_id`, `quality_id`, `jober_id`, `gst_id`,`sale_jober_receive_remark`,`sale_jober_receive_invoice_no`, `sale_jober_receive_date`, `sale_jober_receive_lf_no`,`sale_jober_receive_taka`,`sale_jober_receive_meter`,`sale_jober_receive_meter_data`,`sale_jober_receive_weight`, `sale_jober_receive_fold`,`sale_jober_receive_count_meter`, `sale_jober_receive_rate`, `sale_jober_receive_shortage`, `sale_jober_receive_total`, `is_work_completed`,`sale_jober_receive_entry_date`, `sale_jober_receive_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_godown_id,login_sale_jober_issue_id,login_quality_id,login_jober_id,login_gst_id,login_sale_jober_receive_remark,login_sale_jober_receive_invoice_no,login_sale_jober_receive_date,login_sale_jober_receive_lf_no,login_sale_jober_receive_taka,login_sale_jober_receive_meter,login_sale_jober_receive_meter_data,login_sale_jober_receive_weight,login_sale_jober_receive_fold,login_sale_jober_receive_count_meter,login_sale_jober_receive_rate,login_sale_jober_receive_shortage,login_sale_jober_receive_total,login_is_work_completed,login_entry_date,login_update_date);
    
    SELECT id as sale_jober_receive_id,erp_sale_jober_receive.* FROM erp_sale_jober_receive WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_sale_return`(IN `update_id` INT, IN `login_user_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_godown_id` INT, IN `login_buyer_id` INT, IN `login_haste_id` INT, IN `login_broker_id` INT, IN `login_delivery_party_godown_id` INT, IN `login_invoice_no_id` INT, IN `login_transporter_id` INT, IN `login_tds_on_id` INT, IN `login_nature_of_payment_id` INT, IN `login_status_id` INT, IN `login_sale_return_type_id` INT, IN `login_sale_tax_invoice_ids` VARCHAR(250), IN `login_sale_return_account_type` VARCHAR(100), IN `login_sale_return_prefix` VARCHAR(100), IN `login_sale_return_note_no` VARCHAR(100), IN `login_sale_return_date` VARCHAR(100), IN `login_sale_return_other_transporter` VARCHAR(100), IN `login_sale_return_lr_no` VARCHAR(100), IN `login_sale_return_remark` TEXT, IN `login_is_without_inventory` VARCHAR(100), IN `login_sale_return_document_no` VARCHAR(100), IN `login_sale_return_document_date` VARCHAR(100), IN `login_sale_return_lf_no` VARCHAR(100), IN `login_sale_return_days` VARCHAR(100), IN `login_is_tds_applicable` VARCHAR(50), IN `login_sale_return_tds_applicable_rate` VARCHAR(100), IN `login_sale_return_total_tds` VARCHAR(100), IN `login_sale_return_total_unit_sent` VARCHAR(100), IN `login_sale_return_total_qty_sent` VARCHAR(100), IN `login_sale_return_amount` VARCHAR(100), IN `login_sale_return_total_disc_amt` VARCHAR(100), IN `login_sale_return_total_freight` VARCHAR(100), IN `login_sale_return_total_taxable` VARCHAR(100), IN `login_sale_return_total_sgst` VARCHAR(100), IN `login_sale_return_total_cgst` VARCHAR(100), IN `login_sale_return_total_igst` VARCHAR(100), IN `login_sale_return_total_amount` VARCHAR(100), IN `login_sale_return_round_off` VARCHAR(100), IN `login_sale_return_total_net_amount` VARCHAR(100), IN `login_sale_return_tds_with_total_net_amount` VARCHAR(100), IN `login_sale_return_image` LONGTEXT, IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_sale_return');
  
 END;
 
 IF update_id > 0 THEN
 
 	UPDATE `erp_sale_return` SET `user_id`=login_user_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`godown_id`=login_godown_id,`buyer_id`=login_buyer_id,`haste_id`=login_haste_id,`broker_id`=login_broker_id,`delivery_party_godown_id`=login_delivery_party_godown_id,`invoice_no_id`=login_invoice_no_id,`transporter_id`=login_transporter_id,`tds_on_id`=login_tds_on_id,`nature_of_payment_id`=login_nature_of_payment_id,`status_id`=login_status_id,`sale_return_type_id`=login_sale_return_type_id,`sale_tax_invoice_ids`=login_sale_tax_invoice_ids,`sale_return_account_type`=login_sale_return_account_type,`sale_return_prefix`=login_sale_return_prefix,`sale_return_note_no`=login_sale_return_note_no,`sale_return_date`=login_sale_return_date,`sale_return_other_transporter`=login_sale_return_other_transporter,`sale_return_lr_no`=login_sale_return_lr_no,`sale_return_remark`=login_sale_return_remark,`is_without_inventory`=login_is_without_inventory,`sale_return_document_no`=login_sale_return_document_no,`sale_return_document_date`=login_sale_return_document_date,`sale_return_lf_no`=login_sale_return_lf_no,`sale_return_days`=login_sale_return_days,`is_tds_applicable`=login_is_tds_applicable,`sale_return_tds_applicable_rate`=login_sale_return_tds_applicable_rate,`sale_return_total_tds`=login_sale_return_total_tds,`sale_return_total_unit_sent`=login_sale_return_total_unit_sent,`sale_return_total_qty_sent`=login_sale_return_total_qty_sent,`sale_return_amount`=login_sale_return_amount,`sale_return_total_disc_amt`=login_sale_return_total_disc_amt,`sale_return_total_freight`=login_sale_return_total_freight,`sale_return_total_taxable`=login_sale_return_total_taxable,`sale_return_total_sgst`=login_sale_return_total_sgst,`sale_return_total_cgst`=login_sale_return_total_cgst,`sale_return_total_igst`=login_sale_return_total_igst,`sale_return_total_amount`=login_sale_return_total_amount,`sale_return_round_off`=login_sale_return_round_off,`sale_return_total_net_amount`=login_sale_return_total_net_amount,`sale_return_tds_with_total_net_amount`=login_sale_return_tds_with_total_net_amount,`sale_return_image`=login_sale_return_image,`sale_return_update_date`=login_update_date WHERE id=update_id;

ELSE
 
 	INSERT INTO `erp_sale_return`(`user_id`, `branch_id`, `company_id`, `year_id`, `godown_id`, `buyer_id`, `haste_id`, `broker_id`, `delivery_party_godown_id`, `invoice_no_id`, `transporter_id`, `tds_on_id`, `nature_of_payment_id`, `status_id`, `sale_return_type_id`,`sale_tax_invoice_ids`, `sale_return_account_type`, `sale_return_prefix`, `sale_return_note_no`, `sale_return_date`, `sale_return_other_transporter`, `sale_return_lr_no`, `sale_return_remark`, `is_without_inventory`, `sale_return_document_no`, `sale_return_document_date`, `sale_return_lf_no`, `sale_return_days`, `is_tds_applicable`, `sale_return_tds_applicable_rate`, `sale_return_total_tds`, `sale_return_total_unit_sent`, `sale_return_total_qty_sent`, `sale_return_amount`, `sale_return_total_disc_amt`, `sale_return_total_freight`, `sale_return_total_taxable`, `sale_return_total_sgst`, `sale_return_total_cgst`, `sale_return_total_igst`, `sale_return_total_amount`, `sale_return_round_off`, `sale_return_total_net_amount`,`sale_return_tds_with_total_net_amount`,`sale_return_image`,`sale_return_entry_date`, `sale_return_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_godown_id,login_buyer_id,login_haste_id,login_broker_id,login_delivery_party_godown_id,login_invoice_no_id,login_transporter_id,login_tds_on_id,login_nature_of_payment_id,login_status_id,login_sale_return_type_id,login_sale_tax_invoice_ids,login_sale_return_account_type,login_sale_return_prefix,login_sale_return_note_no,login_sale_return_date,login_sale_return_other_transporter,login_sale_return_lr_no,login_sale_return_remark,login_is_without_inventory,login_sale_return_document_no,login_sale_return_document_date,login_sale_return_lf_no,login_sale_return_days,login_is_tds_applicable,login_sale_return_tds_applicable_rate,login_sale_return_total_tds,login_sale_return_total_unit_sent,login_sale_return_total_qty_sent,login_sale_return_amount,login_sale_return_total_disc_amt,login_sale_return_total_freight,login_sale_return_total_taxable,login_sale_return_total_sgst,login_sale_return_total_cgst,login_sale_return_total_igst,login_sale_return_total_amount,login_sale_return_round_off,login_sale_return_total_net_amount,login_sale_return_tds_with_total_net_amount,login_sale_return_image,login_entry_date,login_update_date);
    
    SELECT id as sale_return_id,erp_sale_return.* FROM erp_sale_return WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_sale_return_child`(IN `update_id` INT, IN `login_user_id` INT, IN `login_sale_return_id` INT, IN `login_quality_id` INT, IN `login_party_id` INT, IN `login_gst_id` INT, IN `login_sale_tax_child_id` INT, IN `login_sale_return_child_remark` TEXT, IN `login_sale_return_child_quality_colour` VARCHAR(100), IN `login_sale_return_child_work` VARCHAR(100), IN `login_sale_return_child_work_colour` VARCHAR(100), IN `login_sale_return_child_hsn` VARCHAR(100), IN `login_sale_return_child_cut` VARCHAR(100), IN `login_sale_return_child_qty_per` VARCHAR(100), IN `login_sale_return_child_qty` VARCHAR(100), IN `login_sale_return_child_unit_sent` VARCHAR(100), IN `login_sale_return_child_qty_sent` VARCHAR(100), IN `login_sale_return_child_meter` VARCHAR(100), IN `login_sale_return_child_fold` VARCHAR(100), IN `login_sale_return_child_net_meter` VARCHAR(100), IN `login_sale_return_child_rate_per` VARCHAR(100), IN `login_sale_return_child_rate` VARCHAR(100), IN `login_sale_return_child_amount` VARCHAR(100), IN `login_sale_return_child_disc_per` VARCHAR(100), IN `login_sale_return_child_disc_amt` VARCHAR(100), IN `login_sale_return_child_freight` VARCHAR(100), IN `login_sale_return_child_taxable` VARCHAR(100), IN `login_sale_return_child_sgst` VARCHAR(100), IN `login_sale_return_child_cgst` VARCHAR(100), IN `login_sale_return_child_igst` VARCHAR(100), IN `login_sale_return_child_total_amount` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_sale_return_child');

 END;
 
IF update_id > 0 THEN

	UPDATE `erp_sale_return_child` SET `user_id`=login_user_id,`sale_return_id`=login_sale_return_id,`quality_id`=login_quality_id,`party_id`=login_party_id,`gst_id`=login_gst_id,`sale_tax_child_id`=login_sale_tax_child_id,`sale_return_child_remark`=login_sale_return_child_remark,`sale_return_child_quality_colour`=login_sale_return_child_quality_colour,`sale_return_child_work`=login_sale_return_child_work,`sale_return_child_work_colour`=login_sale_return_child_work_colour,`sale_return_child_hsn`=login_sale_return_child_hsn,`sale_return_child_cut`=login_sale_return_child_cut,`sale_return_child_qty_per`=login_sale_return_child_qty_per,`sale_return_child_qty`=login_sale_return_child_qty,`sale_return_child_unit_sent`=login_sale_return_child_unit_sent,`sale_return_child_qty_sent`=login_sale_return_child_qty_sent,`sale_return_child_meter`=login_sale_return_child_meter,`sale_return_child_fold`=login_sale_return_child_fold,`sale_return_child_net_meter`=login_sale_return_child_net_meter,`sale_return_child_rate_per`=login_sale_return_child_rate_per,`sale_return_child_rate`=login_sale_return_child_rate,`sale_return_child_amount`=login_sale_return_child_amount,`sale_return_child_disc_per`=login_sale_return_child_disc_per,`sale_return_child_disc_amt`=login_sale_return_child_disc_amt,`sale_return_child_freight`=login_sale_return_child_freight,`sale_return_child_taxable`=login_sale_return_child_taxable,`sale_return_child_sgst`=login_sale_return_child_sgst,`sale_return_child_cgst`=login_sale_return_child_cgst,`sale_return_child_igst`=login_sale_return_child_igst,`sale_return_child_total_amount`=login_sale_return_child_total_amount,`sale_return_child_update_date`=login_update_date WHERE id=update_id;

ELSE

	INSERT INTO `erp_sale_return_child`(`user_id`, `sale_return_id`, `quality_id`, `party_id`, `gst_id`,`sale_tax_child_id`,`sale_return_child_remark`,`sale_return_child_quality_colour`,`sale_return_child_work`,`sale_return_child_work_colour`,`sale_return_child_hsn`, `sale_return_child_cut`, `sale_return_child_qty_per`, `sale_return_child_qty`, `sale_return_child_unit_sent`, `sale_return_child_qty_sent`,`sale_return_child_meter`,`sale_return_child_fold`, `sale_return_child_net_meter`, `sale_return_child_rate_per`, `sale_return_child_rate`, `sale_return_child_amount`, `sale_return_child_disc_per`, `sale_return_child_disc_amt`, `sale_return_child_freight`, `sale_return_child_taxable`, `sale_return_child_sgst`, `sale_return_child_cgst`, `sale_return_child_igst`, `sale_return_child_total_amount`, `sale_return_child_entry_date`, `sale_return_child_update_date`) VALUES (login_user_id,login_sale_return_id,login_quality_id,login_party_id,login_gst_id,login_sale_tax_child_id,login_sale_return_child_remark,login_sale_return_child_quality_colour,login_sale_return_child_work,login_sale_return_child_work_colour,login_sale_return_child_hsn,login_sale_return_child_cut,login_sale_return_child_qty_per,login_sale_return_child_qty,login_sale_return_child_unit_sent,login_sale_return_child_qty_sent,login_sale_return_child_meter,login_sale_return_child_fold,login_sale_return_child_net_meter,login_sale_return_child_rate_per,login_sale_return_child_rate,login_sale_return_child_amount,login_sale_return_child_disc_per,login_sale_return_child_disc_amt,login_sale_return_child_freight,login_sale_return_child_taxable,login_sale_return_child_sgst,login_sale_return_child_cgst,login_sale_return_child_igst,login_sale_return_child_total_amount,login_entry_date,login_update_date);
	
    SELECT id as sale_return_child_id,erp_sale_return_child.* FROM erp_sale_return_child WHERE id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_sale_tax_invoice`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT, IN `login_godown_id` INT, IN `login_buyer_id` INT, IN `login_tds_on_id` INT, IN `login_nature_of_payment_id` INT, IN `login_status_id` INT, IN `login_sale_tax_invoice_status_id` INT, IN `login_account_head_id` INT, IN `login_account_type_party_id` INT, IN `login_transporter_id` INT, IN `login_sale_id` INT, IN `login_sale_tax_invoice_no` VARCHAR(100), IN `login_sale_tax_invoice_lf_no` VARCHAR(255), IN `login_sale_tax_invoice_bale_marka` VARCHAR(255), IN `login_sale_tax_invoice_date` VARCHAR(100), IN `login_sale_tax_invoice_total_meter` VARCHAR(100), IN `login_sale_tax_invoice_total_total` VARCHAR(100), IN `login_sale_tax_invoice_total_disc_amount` VARCHAR(100), IN `login_sale_tax_invoice_total_freight` VARCHAR(100), IN `login_sale_tax_invoice_total_fless` VARCHAR(100), IN `login_sale_tax_invoice_total_taxable` VARCHAR(100), IN `login_sale_tax_invoice_total_sgst` VARCHAR(100), IN `login_sale_tax_invoice_total_cgst` VARCHAR(100), IN `login_sale_tax_invoice_total_igst` VARCHAR(100), IN `login_sale_tax_invoice_total_amount` VARCHAR(100), IN `login_is_tds_applicable` VARCHAR(100), IN `login_sale_tax_invoice_tds_applicable_rate` VARCHAR(100), IN `login_sale_tax_invoice_tds_with_total_net_amount` VARCHAR(100), IN `login_sale_tax_invoice_tcs_per` VARCHAR(100), IN `login_sale_tax_invoice_tcs_amt` VARCHAR(100), IN `login_sale_tax_invoice_round_off` VARCHAR(100), IN `login_sale_tax_invoice_total_net_amount` VARCHAR(100), IN `login_sale_tax_invoice_image` LONGTEXT, IN `login_is_direct_created` VARCHAR(100), IN `login_sale_tax_invoice_credit_days` VARCHAR(100), IN `login_sale_tax_invoice_payment_date` VARCHAR(100), IN `login_order_status` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_sale_tax_invoice');

 END;
 
 IF update_id > 0 THEN
 
 	UPDATE `erp_sale_tax_invoice` SET `user_id`=login_user_id,`company_id`=login_company_id,`year_id`=login_year_id,`branch_id`=login_branch_id,`godown_id`=login_godown_id,`buyer_id`=login_buyer_id,`tds_on_id`=login_tds_on_id,`nature_of_payment_id`=login_nature_of_payment_id,`status_id`=login_status_id,`sale_tax_invoice_status_id`=login_sale_tax_invoice_status_id,`account_head_id`=login_account_head_id,`account_type_party_id`=login_account_type_party_id,`transporter_id`=login_transporter_id,`sale_id`=login_sale_id,`sale_tax_invoice_no`=login_sale_tax_invoice_no,`sale_tax_invoice_lf_no`=login_sale_tax_invoice_lf_no,`sale_tax_invoice_bale_marka`=login_sale_tax_invoice_bale_marka,`sale_tax_invoice_date`=login_sale_tax_invoice_date,`sale_tax_invoice_total_meter`=login_sale_tax_invoice_total_meter,`sale_tax_invoice_total_total`=login_sale_tax_invoice_total_total,`sale_tax_invoice_total_disc_amount`=login_sale_tax_invoice_total_disc_amount,`sale_tax_invoice_total_freight`=login_sale_tax_invoice_total_freight,`sale_tax_invoice_total_fless`=login_sale_tax_invoice_total_fless,`sale_tax_invoice_total_taxable`=login_sale_tax_invoice_total_taxable,`sale_tax_invoice_total_sgst`=login_sale_tax_invoice_total_sgst,`sale_tax_invoice_total_cgst`=login_sale_tax_invoice_total_cgst,`sale_tax_invoice_total_igst`=login_sale_tax_invoice_total_igst,`sale_tax_invoice_total_amount`=login_sale_tax_invoice_total_amount,`is_tds_applicable`=login_is_tds_applicable,`sale_tax_invoice_tds_applicable_rate`=login_sale_tax_invoice_tds_applicable_rate,`sale_tax_invoice_tds_with_total_net_amount`=login_sale_tax_invoice_tds_with_total_net_amount,`sale_tax_invoice_tcs_per`=login_sale_tax_invoice_tcs_per,`sale_tax_invoice_tcs_amt`=login_sale_tax_invoice_tcs_amt,`sale_tax_invoice_round_off`=login_sale_tax_invoice_round_off,`sale_tax_invoice_total_net_amount`=login_sale_tax_invoice_total_net_amount,`sale_tax_invoice_image`=login_sale_tax_invoice_image,`is_direct_created`=login_is_direct_created,`sale_tax_invoice_credit_days`=login_sale_tax_invoice_credit_days,`sale_tax_invoice_payment_date`=login_sale_tax_invoice_payment_date,`order_status`=login_order_status,`sale_tax_invoice_update_date`=login_update_date WHERE id=update_id;

ELSE
    INSERT INTO `erp_sale_tax_invoice`(`user_id`, `company_id`, `year_id`, `branch_id`, `godown_id`, `buyer_id`, `tds_on_id`, `nature_of_payment_id`, `status_id`, `sale_tax_invoice_status_id`, `account_head_id`,`account_type_party_id`, `transporter_id`, `sale_id`, `sale_tax_invoice_no`,`sale_tax_invoice_lf_no`,`sale_tax_invoice_bale_marka`,`sale_tax_invoice_date`, `sale_tax_invoice_total_meter`, `sale_tax_invoice_total_total`, `sale_tax_invoice_total_disc_amount`, `sale_tax_invoice_total_freight`, `sale_tax_invoice_total_fless`, `sale_tax_invoice_total_taxable`, `sale_tax_invoice_total_sgst`, `sale_tax_invoice_total_cgst`, `sale_tax_invoice_total_igst`, `sale_tax_invoice_total_amount`, `is_tds_applicable`, `sale_tax_invoice_tds_applicable_rate`, `sale_tax_invoice_tds_with_total_net_amount`, `sale_tax_invoice_tcs_per`, `sale_tax_invoice_tcs_amt`, `sale_tax_invoice_round_off`, `sale_tax_invoice_total_net_amount`,`sale_tax_invoice_image`,`is_direct_created`,`sale_tax_invoice_credit_days`,`sale_tax_invoice_payment_date`,`order_status`,`sale_tax_invoice_entry_date`, `sale_tax_invoice_update_date`) VALUES (login_user_id,login_company_id,login_year_id,login_branch_id,login_godown_id,login_buyer_id,login_tds_on_id,login_nature_of_payment_id,login_status_id,login_sale_tax_invoice_status_id,login_account_head_id,login_account_type_party_id,login_transporter_id,login_sale_id,login_sale_tax_invoice_no,login_sale_tax_invoice_lf_no,login_sale_tax_invoice_bale_marka,login_sale_tax_invoice_date,login_sale_tax_invoice_total_meter,login_sale_tax_invoice_total_total,login_sale_tax_invoice_total_disc_amount,login_sale_tax_invoice_total_freight,login_sale_tax_invoice_total_fless,login_sale_tax_invoice_total_taxable,login_sale_tax_invoice_total_sgst,login_sale_tax_invoice_total_cgst,login_sale_tax_invoice_total_igst,login_sale_tax_invoice_total_amount,login_is_tds_applicable,login_sale_tax_invoice_tds_applicable_rate,login_sale_tax_invoice_tds_with_total_net_amount,login_sale_tax_invoice_tcs_per,login_sale_tax_invoice_tcs_amt,login_sale_tax_invoice_round_off,login_sale_tax_invoice_total_net_amount,login_sale_tax_invoice_image,login_is_direct_created,login_sale_tax_invoice_credit_days,login_sale_tax_invoice_payment_date,login_order_status,login_entry_date,login_update_date);

    SELECT id as sale_tax_invoice_id,erp_sale_tax_invoice.* FROM erp_sale_tax_invoice WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_sale_tax_invoice_child`(IN `update_id` INT, IN `login_user_id` INT, IN `login_sale_tax_invoice_id` INT, IN `login_quality_id` INT, IN `login_jober_id` INT, IN `login_order_status_id` INT, IN `login_gst_id` INT, IN `login_sale_child_id` INT, IN `login_sale_tax_invoice_child_remark` TEXT, IN `login_sale_tax_invoice_child_quality_colour` VARCHAR(100), IN `login_sale_tax_invoice_child_work` VARCHAR(100), IN `login_sale_tax_invoice_child_work_colour` VARCHAR(100), IN `login_sale_tax_invoice_child_unit` VARCHAR(100), IN `login_sale_tax_invoice_child_meter` VARCHAR(100), IN `login_sale_tax_invoice_child_meter_data` LONGTEXT, IN `login_sale_tax_invoice_child_weight` VARCHAR(100), IN `login_sale_tax_invoice_child_fold` VARCHAR(100), IN `login_sale_tax_invoice_child_count_meter` VARCHAR(100), IN `login_sale_tax_invoice_child_rate` VARCHAR(100), IN `login_sale_tax_invoice_child_rate_per` INT, IN `login_sale_tax_invoice_child_help` VARCHAR(100), IN `login_sale_tax_invoice_child_total` VARCHAR(100), IN `login_sale_tax_invoice_child_disc_per` VARCHAR(100), IN `login_sale_tax_invoice_child_disc_amt` VARCHAR(100), IN `login_sale_tax_invoice_child_freight` VARCHAR(100), IN `login_sale_tax_invoice_child_fless` VARCHAR(100), IN `login_sale_tax_invoice_child_taxable` VARCHAR(100), IN `login_sale_tax_invoice_child_sgst` VARCHAR(100), IN `login_sale_tax_invoice_child_cgst` VARCHAR(100), IN `login_sale_tax_invoice_child_igst` VARCHAR(100), IN `login_sale_tax_invoice_child_amount` VARCHAR(100), IN `login_is_completed` VARCHAR(50), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_sale_tax_invoice_child');

 END;
 
 IF update_id > 0 THEN
 
 UPDATE `erp_sale_tax_invoice_child` SET `user_id`=login_user_id,`sale_tax_invoice_id`=login_sale_tax_invoice_id,`quality_id`=login_quality_id,`jober_id`=login_jober_id,`order_status_id`=login_order_status_id,`gst_id`=login_gst_id,`sale_child_id`=login_sale_child_id,`sale_tax_invoice_child_remark`=login_sale_tax_invoice_child_remark,`sale_tax_invoice_child_quality_colour`=login_sale_tax_invoice_child_quality_colour,`sale_tax_invoice_child_work`=login_sale_tax_invoice_child_work,`sale_tax_invoice_child_work_colour`=login_sale_tax_invoice_child_work_colour,`sale_tax_invoice_child_unit`=login_sale_tax_invoice_child_unit,`sale_tax_invoice_child_meter`=login_sale_tax_invoice_child_meter,`sale_tax_invoice_child_meter_data`=login_sale_tax_invoice_child_meter_data,`sale_tax_invoice_child_weight`=login_sale_tax_invoice_child_weight,`sale_tax_invoice_child_fold`=login_sale_tax_invoice_child_fold,`sale_tax_invoice_child_count_meter`=login_sale_tax_invoice_child_count_meter,`sale_tax_invoice_child_rate`=login_sale_tax_invoice_child_rate,`sale_tax_invoice_child_rate_per`=login_sale_tax_invoice_child_rate_per,`sale_tax_invoice_child_help`=login_sale_tax_invoice_child_help,`sale_tax_invoice_child_total`=login_sale_tax_invoice_child_total,`sale_tax_invoice_child_disc_per`=login_sale_tax_invoice_child_disc_per,`sale_tax_invoice_child_disc_amt`=login_sale_tax_invoice_child_disc_amt,`sale_tax_invoice_child_freight`=login_sale_tax_invoice_child_freight,`sale_tax_invoice_child_fless`=login_sale_tax_invoice_child_fless,`sale_tax_invoice_child_taxable`=login_sale_tax_invoice_child_taxable,`sale_tax_invoice_child_sgst`=login_sale_tax_invoice_child_sgst,`sale_tax_invoice_child_cgst`=login_sale_tax_invoice_child_cgst,`sale_tax_invoice_child_igst`=login_sale_tax_invoice_child_igst,`sale_tax_invoice_child_amount`=login_sale_tax_invoice_child_amount,`is_completed`=login_is_completed,`sale_tax_invoice_child_update_date`=login_update_date WHERE id=update_id;

ELSE

 	INSERT INTO `erp_sale_tax_invoice_child`(`user_id`, `sale_tax_invoice_id`, `quality_id`, `jober_id`, `order_status_id`,`gst_id`,`sale_child_id`,`sale_tax_invoice_child_remark`, `sale_tax_invoice_child_quality_colour`, `sale_tax_invoice_child_work`, `sale_tax_invoice_child_work_colour`,`sale_tax_invoice_child_unit`, `sale_tax_invoice_child_meter`,`sale_tax_invoice_child_meter_data`,`sale_tax_invoice_child_weight`, `sale_tax_invoice_child_fold`,`sale_tax_invoice_child_count_meter`, `sale_tax_invoice_child_rate`,`sale_tax_invoice_child_rate_per`, `sale_tax_invoice_child_help`, `sale_tax_invoice_child_total`, `sale_tax_invoice_child_disc_per`, `sale_tax_invoice_child_disc_amt`, `sale_tax_invoice_child_freight`, `sale_tax_invoice_child_fless`, `sale_tax_invoice_child_taxable`, `sale_tax_invoice_child_sgst`, `sale_tax_invoice_child_cgst`, `sale_tax_invoice_child_igst`, `sale_tax_invoice_child_amount`,`is_completed`,`sale_tax_invoice_child_entry_date`, `sale_tax_invoice_child_update_date`) VALUES (login_user_id,login_sale_tax_invoice_id,login_quality_id,login_jober_id,login_order_status_id,login_gst_id,login_sale_child_id,login_sale_tax_invoice_child_remark,login_sale_tax_invoice_child_quality_colour,login_sale_tax_invoice_child_work,login_sale_tax_invoice_child_work_colour,login_sale_tax_invoice_child_unit,login_sale_tax_invoice_child_meter,login_sale_tax_invoice_child_meter_data,login_sale_tax_invoice_child_weight,login_sale_tax_invoice_child_fold,login_sale_tax_invoice_child_count_meter,login_sale_tax_invoice_child_rate,login_sale_tax_invoice_child_rate_per,login_sale_tax_invoice_child_help,login_sale_tax_invoice_child_total,login_sale_tax_invoice_child_disc_per,login_sale_tax_invoice_child_disc_amt,login_sale_tax_invoice_child_freight,login_sale_tax_invoice_child_fless,login_sale_tax_invoice_child_taxable,login_sale_tax_invoice_child_sgst,login_sale_tax_invoice_child_cgst,login_sale_tax_invoice_child_igst,login_sale_tax_invoice_child_amount,login_is_completed,login_entry_date,login_update_date);
    
    SELECT id as sale_tax_invoice_child_id,erp_sale_tax_invoice_child.* FROM erp_sale_tax_invoice_child WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_settelement`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT, IN `login_party_id` INT, IN `login_voucher_id` INT, IN `login_tax_invoice_id` INT, IN `login_voucher_child_from_invoice_type` VARCHAR(100), IN `login_voucher_child_invoice_type` VARCHAR(100), IN `login_voucher_child_from_invoice_no` VARCHAR(100), IN `login_voucher_child_invoice_no` VARCHAR(100), IN `login_voucher_child_from_invoice_date` VARCHAR(100), IN `login_voucher_child_invoice_date` VARCHAR(100), IN `login_voucher_child_from_balance` VARCHAR(100), IN `login_voucher_child_balance` VARCHAR(100), IN `login_is_settlement` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  @sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_settelement');

 END;
 
 IF update_id > 0 THEN
    
    UPDATE `erp_voucher_child` SET `user_id`=login_user_id,`company_id`=login_company_id,`year_id`=login_year_id,`branch_id`=login_branch_id,`party_id`=login_party_id,`voucher_id`=login_voucher_id,`tax_invoice_id`=login_tax_invoice_id,`voucher_child_from_invoice_type`=login_voucher_child_from_invoice_type,`voucher_child_invoice_type`=login_voucher_child_invoice_type,`voucher_child_from_invoice_no`=login_voucher_child_from_invoice_no,`voucher_child_invoice_no`=login_voucher_child_invoice_no,`voucher_child_from_invoice_date`=login_voucher_child_from_invoice_date,`voucher_child_invoice_date`=login_voucher_child_invoice_date,`voucher_child_from_balance`=login_voucher_child_from_balance,`voucher_child_balance`=login_voucher_child_balance,`is_settlement`=login_is_settlement,`voucher_child_update_date`=login_update_date WHERE id=update_id;

ELSE
 
     INSERT INTO `erp_voucher_child`(`user_id`,`company_id`,`year_id`,`branch_id`,`party_id`,`voucher_id`, `tax_invoice_id`, `voucher_child_from_invoice_type`, `voucher_child_invoice_type`, `voucher_child_from_invoice_no`, `voucher_child_invoice_no`, `voucher_child_from_invoice_date`, `voucher_child_invoice_date`, `voucher_child_from_balance`, `voucher_child_balance`,`is_settlement`,`voucher_child_entry_date`, `voucher_child_update_date`) VALUES (login_user_id,login_company_id,login_year_id,login_branch_id,login_party_id,login_voucher_id,login_tax_invoice_id,login_voucher_child_from_invoice_type,login_voucher_child_invoice_type,login_voucher_child_from_invoice_no,login_voucher_child_invoice_no,login_voucher_child_from_invoice_date,login_voucher_child_invoice_date,login_voucher_child_from_balance,login_voucher_child_balance,login_is_settlement,login_entry_date,login_update_date);
    
    SELECT id as voucher_child_id,erp_voucher_child.* FROM erp_voucher_child WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_unit_of_measurement`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_unit_measurement_name` VARCHAR(255), IN `login_unit_measurement_symbol` VARCHAR(255), IN `login_unit_measurement_no_of_decimal` VARCHAR(255), IN `login_unit_measurement_invoice_base` VARCHAR(255), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_unit_of_measurement');

 END;

IF update_id > 0 THEN

	    UPDATE `erp_unit_measurement` SET `user_id`=login_user_id,`company_id`=login_company_id,`unit_measurement_name`=login_unit_measurement_name,`unit_measurement_symbol`=login_unit_measurement_symbol,`unit_measurement_no_of_decimal`=login_unit_measurement_no_of_decimal,`unit_measurement_invoice_base`=login_unit_measurement_invoice_base,`unit_measurement_update_date`=login_update_date WHERE id=update_id;

ELSE

	INSERT INTO `erp_unit_measurement`(`user_id`, `company_id`, `unit_measurement_name`, `unit_measurement_symbol`, `unit_measurement_no_of_decimal`, `unit_measurement_invoice_base`,`unit_measurement_entry_date`, `unit_measurement_update_date`) VALUES (login_user_id,login_company_id,login_unit_measurement_name,login_unit_measurement_symbol,login_unit_measurement_no_of_decimal,login_unit_measurement_invoice_base,login_entry_date,login_update_date);
	
    SELECT id as unit_id,erp_unit_measurement.* FROM erp_unit_measurement WHERE id = LAST_INSERT_ID();
    
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_voucher`(IN `update_id` INT, IN `login_user_id` INT, IN `login_branch_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_party_id` INT, IN `login_bank_from_id` INT, IN `login_bank_to_id` INT, IN `login_tds_on_id` INT, IN `login_nature_of_payment_id` INT, IN `login_status_id` INT, IN `login_from_party_id` INT, IN `login_to_party_id` INT, IN `login_voucher_type` VARCHAR(100), IN `login_voucher_no` VARCHAR(100), IN `login_voucher_lf_no` VARCHAR(100), IN `login_voucher_date` VARCHAR(100), IN `login_voucher_transaction_type` VARCHAR(100), IN `login_voucher_bank_name` VARCHAR(100), IN `login_voucher_cheque_ref_no` VARCHAR(100), IN `login_voucher_cheque_ref_date` VARCHAR(100), IN `login_voucher_amount` VARCHAR(100), IN `login_voucher_remark` TEXT, IN `login_is_print` VARCHAR(100), IN `login_voucher_cheque_print_name` VARCHAR(100), IN `login_is_tds_applicable` VARCHAR(100), IN `login_voucher_amount_per_tds` VARCHAR(100), IN `login_voucher_tds_applicable_rate` VARCHAR(100), IN `login_voucher_tds` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_voucher');

 END;
 
 IF update_id > 0 THEN
 
 	UPDATE `erp_voucher` SET `user_id`=login_user_id,`branch_id`=login_branch_id,`company_id`=login_company_id,`year_id`=login_year_id,`party_id`=login_party_id,`bank_from_id`=login_bank_from_id,`bank_to_id`=login_bank_to_id,`tds_on_id`=login_tds_on_id,`nature_of_payment_id`=login_nature_of_payment_id,`status_id`=login_status_id,`from_party_id`=login_from_party_id,`to_party_id`=login_to_party_id,`voucher_type`=login_voucher_type,`voucher_no`=login_voucher_no,`voucher_lf_no`=login_voucher_lf_no,`voucher_date`=login_voucher_date,`voucher_transaction_type`=login_voucher_transaction_type,`voucher_bank_name`=login_voucher_bank_name,`voucher_cheque_ref_no`=login_voucher_cheque_ref_no,`voucher_cheque_ref_date`=login_voucher_cheque_ref_date,`voucher_amount`=login_voucher_amount,`voucher_remark`=login_voucher_remark,`is_print`=login_is_print,`voucher_cheque_print_name`=login_voucher_cheque_print_name,`is_tds_applicable`=login_is_tds_applicable,`voucher_amount_per_tds`=login_voucher_amount_per_tds,`voucher_tds_applicable_rate`=login_voucher_tds_applicable_rate,`voucher_tds`=login_voucher_tds,`voucher_update_date`=login_update_date WHERE id=update_id;

ELSE
 	INSERT INTO `erp_voucher`(`user_id`, `branch_id`, `company_id`, `year_id`, `party_id`, `bank_from_id`, `bank_to_id`, `tds_on_id`, `nature_of_payment_id`, `status_id`, `from_party_id`, `to_party_id`, `voucher_type`, `voucher_no`, `voucher_lf_no`, `voucher_date`, `voucher_transaction_type`, `voucher_bank_name`, `voucher_cheque_ref_no`, `voucher_cheque_ref_date`, `voucher_amount`, `voucher_remark`, `is_print`, `voucher_cheque_print_name`, `is_tds_applicable`, `voucher_amount_per_tds`, `voucher_tds_applicable_rate`, `voucher_tds`, `voucher_entry_date`, `voucher_update_date`) VALUES (login_user_id,login_branch_id,login_company_id,login_year_id,login_party_id,login_bank_from_id,login_bank_to_id,login_tds_on_id,login_nature_of_payment_id,login_status_id,login_from_party_id,login_to_party_id,login_voucher_type,login_voucher_no,login_voucher_lf_no,login_voucher_date,login_voucher_transaction_type,login_voucher_bank_name,login_voucher_cheque_ref_no,login_voucher_cheque_ref_date,login_voucher_amount,login_voucher_remark,login_is_print,login_voucher_cheque_print_name,login_is_tds_applicable,login_voucher_amount_per_tds,login_voucher_tds_applicable_rate,login_voucher_tds,login_entry_date,login_update_date);
    
    SELECT id as voucher_id,erp_voucher.* FROM erp_voucher WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_voucher_bank_cheque`(IN `update_id` INT, IN `login_user_id` INT, IN `login_voucher_id` INT, IN `login_bank_cheque_no` VARCHAR(255), IN `login_bank_cheque_bank_name` VARCHAR(100), IN `login_bank_cheque_date` VARCHAR(100), IN `login_bank_cheque_amount` VARCHAR(100), IN `login_entery_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_voucher_bank_cheque');

 END;

IF update_id > 0 THEN

	UPDATE `erp_bank_cheque_detail` SET `user_id`=login_user_id,`voucher_id`=login_voucher_id,`bank_cheque_no`=login_bank_cheque_no,`bank_cheque_bank_name`=login_bank_cheque_bank_name,`bank_cheque_date`=login_bank_cheque_date,`bank_cheque_amount`=login_bank_cheque_amount,`bank_cheque_update_date`=login_update_date WHERE id = update_id;

ELSE
	INSERT INTO `erp_bank_cheque_detail`(`user_id`, `voucher_id`, `bank_cheque_no`, `bank_cheque_bank_name`, `bank_cheque_date`, `bank_cheque_amount`, `bank_cheque_entry_date`, `bank_cheque_update_date`) VALUES (login_user_id,login_voucher_id,login_bank_cheque_no,login_bank_cheque_bank_name,login_bank_cheque_date,login_bank_cheque_amount,login_entery_date,login_update_date);
    
    SELECT id as bank_cheque_id,erp_bank_cheque_detail.* FROM erp_bank_cheque_detail WHERE id = LAST_INSERT_ID();
END IF;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_voucher_child`(IN `update_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_party_id` INT, IN `login_voucher_id` INT, IN `login_tax_invoice_id` INT, IN `login_voucher_child_from_invoice_type` VARCHAR(100), IN `login_voucher_child_invoice_type` VARCHAR(100), IN `login_voucher_child_invoice_no` VARCHAR(100), IN `login_voucher_child_invoice_date` VARCHAR(100), IN `login_voucher_child_invoice_amount` VARCHAR(100), IN `login_voucher_child_invoice_tds` VARCHAR(100), IN `login_voucher_child_received_amount` VARCHAR(100), IN `login_voucher_child_disc_per` VARCHAR(100), IN `login_voucher_child_disc_amt` VARCHAR(100), IN `login_voucher_child_balance` VARCHAR(100), IN `login_voucher_child_tds_per` VARCHAR(100), IN `login_voucher_child_tds_amt` VARCHAR(100), IN `login_entry_date` DATETIME, IN `login_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  @sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_voucher_child');

 END;
 
 IF update_id > 0 THEN
 
 UPDATE `erp_voucher_child` SET `user_id`=login_user_id,`company_id`=login_company_id,`branch_id`=login_branch_id,`year_id`=login_year_id,`party_id`=login_party_id,`voucher_id`=login_voucher_id,`tax_invoice_id`=login_tax_invoice_id,`voucher_child_from_invoice_type`=login_voucher_child_from_invoice_type,`voucher_child_invoice_type`=login_voucher_child_invoice_type,`voucher_child_invoice_no`=login_voucher_child_invoice_no,`voucher_child_invoice_date`=login_voucher_child_invoice_date,`voucher_child_invoice_amount`=login_voucher_child_invoice_amount,`voucher_child_invoice_tds`=login_voucher_child_invoice_tds,`voucher_child_received_amount`=login_voucher_child_received_amount,`voucher_child_disc_per`=login_voucher_child_disc_per,`voucher_child_disc_amt`=login_voucher_child_disc_amt,`voucher_child_balance`=login_voucher_child_balance,`voucher_child_tds_per`=login_voucher_child_tds_per,`voucher_child_tds_amt`=login_voucher_child_tds_amt,`voucher_child_update_date`=login_update_date WHERE id=update_id;

ELSE
 
     INSERT INTO `erp_voucher_child`(`user_id`,`company_id`,`branch_id`,`year_id`,`party_id`,`voucher_id`,`tax_invoice_id`,`voucher_child_from_invoice_type`, `voucher_child_invoice_type`, `voucher_child_invoice_no`, `voucher_child_invoice_date`, `voucher_child_invoice_amount`, `voucher_child_invoice_tds`, `voucher_child_received_amount`, `voucher_child_disc_per`, `voucher_child_disc_amt`, `voucher_child_balance`, `voucher_child_tds_per`, `voucher_child_tds_amt`,`voucher_child_entry_date`, `voucher_child_update_date`) VALUES (login_user_id,login_company_id,login_branch_id,login_year_id,login_party_id,login_voucher_id,login_tax_invoice_id,login_voucher_child_from_invoice_type,login_voucher_child_invoice_type,login_voucher_child_invoice_no,login_voucher_child_invoice_date,login_voucher_child_invoice_amount,login_voucher_child_invoice_tds,login_voucher_child_received_amount,login_voucher_child_disc_per,login_voucher_child_disc_amt,login_voucher_child_balance,login_voucher_child_tds_per,login_voucher_child_tds_amt,login_entry_date,login_update_date);
    
    SELECT id as voucher_child_id,erp_voucher_child.* FROM erp_voucher_child WHERE id=LAST_INSERT_ID();
    
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_year`(IN `login_label` VARCHAR(100), IN `entery_date` VARCHAR(100), IN `update_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'create_year');

 END;


	INSERT INTO `erp_year`( `year_name`, `year_entery_date`, `year_update_date`) VALUES (login_label,entery_date,update_date);

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_account_head`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
	DECLARE exit handler for SQLEXCEPTION

     BEGIN
        GET DIAGNOSTICS CONDITION 1 
        @sqlstate = RETURNED_SQLSTATE,@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
        
        INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_account_head');
     END;
     
  	UPDATE `erp_account_head` SET `is_delete_status`='1',`account_head_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_bank_cheque_details`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_bank_cheque_details');

 END;
       UPDATE `erp_bank_cheque_detail` SET `is_delete_status`='1',`bank_cheque_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_brand`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_brand');

 END;
       UPDATE `erp_brand` SET `is_delete_status`='1',`brand_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_category`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_category');

 END;
 	UPDATE `erp_category` SET `is_delete_status`='1',`category_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_default_voucher`(IN `delete_id` INT, IN `type` VARCHAR(100), IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_default_voucher');

 END;
       UPDATE `erp_voucher` SET `is_delete_status`='1',`voucher_update_date`=delete_date WHERE invoice_id=delete_id AND `invoice_type`=type;
       UPDATE `erp_voucher_child` SET `is_delete_status`='1',`voucher_child_update_date`=delete_date WHERE voucher_id =delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_godown`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
	DECLARE exit handler for SQLEXCEPTION
         BEGIN
            GET DIAGNOSTICS CONDITION 1 
            @sqlstate = RETURNED_SQLSTATE,@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
            SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
            INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_godown');
         END;
    UPDATE `erp_godown` SET `is_delete_status`='1',`godown_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_grey_issue`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_grey_issue');

 END;
     
     UPDATE `erp_grey_issue` SET `is_delete_status`='1',`grey_issue_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_inventory`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_inventory');

 END;
     
     UPDATE `erp_inventory` SET `is_delete_status`='1',`inventory_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_inventory_child`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_inventory_child');

 END;
     
     UPDATE `erp_inventory_child` SET `is_delete_status`='1',`inventory_child_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_inventory_invoice`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_inventory_invoice');

 END;

       	UPDATE `erp_inventory_invoice` SET `is_delete_status`='1',`inventory_invoice_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_inventory_invoice_child`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_inventory_invoice_child');

 END;
       UPDATE `erp_inventory_invoice_child` SET `is_delete_status`='1',`inventory_invoice_child_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_inventory_receive`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_inventory_receive');

 END;
     
     UPDATE `erp_inventory_receive` SET `is_delete_status`='1',`inventory_receive_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_jober_invoice`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_jober_invoice');

 END;
     
     UPDATE `erp_jober_invoice` SET `is_delete_status`='1',`jober_invoice_update_date`=delete_date WHERE id=delete_id;
     UPDATE `erp_jober_invoice_child` SET `is_delete_status`='1',`jober_invoice_child_update_date`=delete_date WHERE jober_invoice_id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_jober_invoice_child`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_jober_invoice_child');

 END;
     
     UPDATE `erp_jober_invoice_child` SET `is_delete_status`='1',`jober_invoice_child_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_journal_purchase`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_journal_purchase');

 END;
     
     UPDATE `erp_journal_purchase` SET `is_delete_status`='1',`journal_purchase_update_date`=delete_date WHERE id=delete_id;
     UPDATE `erp_journal_purchase_child` SET `is_delete_status`='1',`journal_purchase_child_update_date`=delete_date WHERE journal_purchase_id =delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_journal_purchase_child`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_journal_purchase_child');

 END;
     
     UPDATE `erp_journal_purchase_child` SET `is_delete_status`='1',`journal_purchase_child_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_material`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_material');

 END;

       UPDATE `erp_material` SET `is_delete_status`='1',`material_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_mill_receive`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_mill_receive');

 END;
     
     UPDATE `erp_mill_receive` SET `is_delete_status`='1',`mill_receive_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_mill_tax_invoice`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_mill_tax_invoice');

 END;
     
     UPDATE `erp_mill_tax_invoice` SET `is_delete_status`='1',`mill_tax_invoice_update_date`=delete_date WHERE id=delete_id;
     UPDATE `erp_mill_tax_invoice_child` SET `is_delete_status`='1',`mill_tax_invoice_child_update_date`=delete_date WHERE mill_tax_invoice_id=delete_id;


END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_mill_tax_invoice_child`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_mill_tax_invoice_child');

 END;
     
     UPDATE `erp_mill_tax_invoice_child` SET `is_delete_status`='1',`mill_tax_invoice_child_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_party`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_party');

 END;

       	UPDATE `erp_party` SET `is_delete_status`='1',`party_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_party_broker_group`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
	DECLARE exit handler for SQLEXCEPTION

     BEGIN
        GET DIAGNOSTICS CONDITION 1 
        @sqlstate = RETURNED_SQLSTATE,@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);

        INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_party_broker_group');
     END;
     
    UPDATE `erp_party_group` SET `is_delete_status`='1',`party_group_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_purchase_return`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_purchase_return');

 END;
     
     UPDATE `erp_purchase_return` SET `is_delete_status`='1',`purchase_return_update_date`=delete_date WHERE id=delete_id;
     UPDATE `erp_purchase_return_child` SET `is_delete_status`='1',`purchase_return_child_update_date`=delete_date WHERE purchase_return_id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_purchase_return_child`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_purchase_return_child');

 END;
     
     UPDATE `erp_purchase_return_child` SET `is_delete_status`='1',`purchase_return_child_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_purchase_tax_invoice`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_purchase_tax_invoice');

 END;
     
     UPDATE `erp_purchase_tax_invoice` SET `is_delete_status`='1',`purchase_tax_invoice_update_date`=delete_date WHERE id=delete_id;
     UPDATE `erp_purchase_tax_invoice_child` SET `is_delete_status`='1',`purchase_tax_invoice_child_update_date`=delete_date WHERE purchase_tax_invoice_id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_purchase_tax_invoice_child`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_purchase_tax_invoice_child');

 END;
     
     UPDATE `erp_purchase_tax_invoice_child` SET `is_delete_status`='1',`purchase_tax_invoice_child_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_quality`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_quality');

 END;

   UPDATE `erp_quality` SET `is_delete_status`='1',`quality_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_reprocess`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
	DECLARE exit handler for SQLEXCEPTION

     BEGIN
        GET DIAGNOSTICS CONDITION 1 
        @sqlstate = RETURNED_SQLSTATE,@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
        
        INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_reprocess');
     END;
     
  	UPDATE `erp_mill_reprocess` SET `is_delete_status`='1',`mill_reprocess_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_sale`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
	DECLARE exit handler for SQLEXCEPTION

     BEGIN
        GET DIAGNOSTICS CONDITION 1 
        @sqlstate = RETURNED_SQLSTATE,@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
        
        INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_sale');
     END;
     
  	UPDATE `erp_sale` SET `is_delete_status`='1',`sale_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_sale_child`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
	DECLARE exit handler for SQLEXCEPTION

     BEGIN
        GET DIAGNOSTICS CONDITION 1 
        @sqlstate = RETURNED_SQLSTATE,@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
        
        INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_sale_child');
     END;
     
  	UPDATE `erp_sale_child` SET `is_delete_status`='1',`sale_child_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_sale_jober_issue`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
	DECLARE exit handler for SQLEXCEPTION

     BEGIN
        GET DIAGNOSTICS CONDITION 1 
        @sqlstate = RETURNED_SQLSTATE,@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
        
        INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_sale_jober_issue');
     END;
     
  	UPDATE `erp_sale_jober_issue` SET `is_delete_status`='1',`sale_jober_issue_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_sale_jober_receive`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
	DECLARE exit handler for SQLEXCEPTION

     BEGIN
        GET DIAGNOSTICS CONDITION 1 
        @sqlstate = RETURNED_SQLSTATE,@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
        
        INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_sale_jober_receive');
     END;
     
  	UPDATE `erp_sale_jober_receive` SET `is_delete_status`='1',`sale_jober_receive_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_sale_return`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
	DECLARE exit handler for SQLEXCEPTION

     BEGIN
        GET DIAGNOSTICS CONDITION 1 
        @sqlstate = RETURNED_SQLSTATE,@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
        
        INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_sale_return');
     END;
     
  	UPDATE `erp_sale_return` SET `is_delete_status`='1',`sale_return_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_sale_return_child`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
	DECLARE exit handler for SQLEXCEPTION

     BEGIN
        GET DIAGNOSTICS CONDITION 1 
        @sqlstate = RETURNED_SQLSTATE,@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
        
        INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_sale_return_child');
     END;
     
  	UPDATE `erp_sale_return_child` SET `is_delete_status`='1',`sale_return_child_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_sale_tax_invoice`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
	DECLARE exit handler for SQLEXCEPTION

     BEGIN
        GET DIAGNOSTICS CONDITION 1 
        @sqlstate = RETURNED_SQLSTATE,@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
        
        INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_sale_tax_invoice');
     END;
     
  	UPDATE `erp_sale_tax_invoice` SET `is_delete_status`='1',`sale_tax_invoice_update_date`=delete_date WHERE id=delete_id;
    UPDATE `erp_sale_tax_invoice_child` SET `is_delete_status`='1',`sale_tax_invoice_child_update_date`=delete_date WHERE sale_tax_invoice_id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_sale_tax_invoice_child`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
	DECLARE exit handler for SQLEXCEPTION

     BEGIN
        GET DIAGNOSTICS CONDITION 1 
        @sqlstate = RETURNED_SQLSTATE,@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
        
        INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_sale_tax_invoice_child');
     END;
     
  	UPDATE `erp_sale_tax_invoice_child` SET `is_delete_status`='1',`sale_tax_invoice_child_update_date`=delete_date WHERE id=delete_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_unit_measurment`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_quality');

 END;

   UPDATE `erp_unit_measurement` SET `is_delete_status`='1',`unit_measurement_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_voucher`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_voucher');

 END;
       UPDATE `erp_voucher` SET `is_delete_status`='1',`voucher_update_date`=delete_date WHERE id=delete_id;
       UPDATE `erp_voucher_child` SET `is_delete_status`='1',`voucher_child_update_date`=delete_date WHERE voucher_id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_voucher_child`(IN `delete_id` INT, IN `delete_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'delete_voucher_child');

 END;
       UPDATE `erp_voucher_child` SET `is_delete_status`='1',`voucher_child_update_date`=delete_date WHERE id=delete_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_account_head_dropdown_data`()
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_account_head_dropdown_data');
 END;


	SELECT id as account_head_id,id as value,account_head_name,account_head_name as label,account_head_short_name FROM erp_account_head WHERE is_delete_status='0' AND account_head_status='active' ORDER BY account_head_name ASC;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_account_head_data`(IN `login_user_id` INT, IN `total_limit` INT, IN `total_offset` INT, IN `Order_By` VARCHAR(255), IN `Order_Formate` VARCHAR(255))
BEGIN

DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_account_head_data');

 END;
	
    SELECT COUNT(erp_account_head.id) as count FROM erp_account_head WHERE 1=1;
    
    SELECT erp_account_head.user_id,erp_account_head.id as account_head_id,erp_account_head.account_head_name,erp_account_head.account_head_short_name,parent.account_head_name as parent_name,parent.id as parent_id FROM erp_account_head LEFT JOIN erp_account_head as parent ON parent.id=erp_account_head.account_head_id WHERE erp_account_head.user_id IN (0,login_user_id) ORDER BY Order_By,Order_Formate LIMIT total_offset,total_limit;
    
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_bank_dropdown`(IN `login_user_id` INT, IN `login_company_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_bank_dropdown');

 END;


	SELECT `id` as value, bank_name as label FROM erp_bank WHERE user_id=login_user_id AND company_id=login_company_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_branch_data`(IN `login_user_id` INT, IN `login_company_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_branch_data');

 END;


	SELECT branch.branch_name,branch.branch_code,branch.branch_gst_no,branch.branch_address,state.global_name as state_name,state.global_code as state_code FROM erp_branch as branch LEFT JOIN erp_global as state ON state.id=branch.state_id WHERE user_id=login_user_id AND company_id=login_company_id; 

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_brand_dropdown`(IN `login_user_id` INT, IN `login_company_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_brand_dropdown');

 END;
	SELECT id,id as value,brand_name,brand_name as label FROM erp_brand WHERE company_id=login_company_id AND is_delete_status='0'; 
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_category_dropdown_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_category_type` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_category_dropdown_data');

 END;


	SELECT id,id as value,category_name,category_name as label FROM erp_category WHERE user_id=login_user_id AND company_id=login_company_id AND category_type=login_category_type; 

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_godown_dropdown`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_godown_dropdown');

 END;
	SELECT id,id as value,godown_name,godown_name as label FROM erp_godown WHERE company_id=login_company_id AND year_id=login_year_id AND branch_id=login_branch_id; 
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_gst_dropdown`()
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_gst_dropdown');

 END;

	SELECT id as gst_id,id as value,gst_name,gst_name as label,gst_percentage FROM erp_gst WHERE 1=1;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_inventory_receive_challan_dropdown`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT, IN `login_jober_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_inventory_receive_challan_dropdown');

 END;
	
   		SELECT `id` as value, inventory_receive_challan_no as label FROM erp_inventory_receive WHERE user_id=login_user_id AND company_id=login_company_id AND year_id=login_year_id AND branch_id=login_branch_id AND jober_id=login_jober_id AND is_delete_status='0';
		


END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_material_dropdown`(IN `login_user_id` INT, IN `login_company_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_material_dropdown');

 END;
	SELECT id,id as value,material_name,material_name as label FROM erp_material WHERE company_id=login_company_id AND is_delete_status='0'; 
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_measurment_dropdown`(IN `login_user_id` INT, IN `login_company_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_measurment_dropdown');

 END;


	SELECT `id` as value, `unit_measurement_symbol` as label FROM `erp_unit_measurement` WHERE user_id IN ('0',login_user_id) AND company_id IN ('0',login_company_id) AND id IN ('20','24','28') AND is_delete_status='0' AND unit_measurement_status='active';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_mill_receive_challan_dropdown`(IN `login_mill_id` INT, IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT, IN `login_mill_receive_id` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_mill_receive_challan_dropdown');

 END;

 IF login_mill_receive_id > 0 THEN
 
  	SELECT mill_receive.id as value,mill_receive.mill_receive_mill_challan_no,mill_receive.mill_receive_mill_challan_no as label,mill_receive.mill_receive_taka,mill_receive.mill_receive_qty as mill_receive_meter,mill_receive.mill_receive_width,mill_receive.mill_receive_weight,mill_receive.quality_id,quality.quality_name,gst.id as gst_id,gst.gst_percentage,pur_qty.unit_measurement_symbol FROM erp_mill_receive as mill_receive LEFT JOIN erp_quality as quality ON quality.id=mill_receive.quality_id LEFT JOIN erp_material as material ON material.id=quality.material_id LEFT JOIN erp_gst as gst ON gst.id=material.gst_id LEFT JOIN erp_unit_measurement as pur_qty ON pur_qty.id=material.material_purchase_qty WHERE mill_receive.mill_id=login_mill_id AND mill_receive.user_id=login_user_id AND mill_receive.company_id=login_company_id AND mill_receive.year_id=login_year_id AND mill_receive.branch_id=login_branch_id AND mill_receive.id NOT IN (SELECT mill_tax_child.mill_receive_id FROM erp_mill_tax_invoice_child as mill_tax_child LEFT JOIN erp_mill_tax_invoice as mill_tax_par ON mill_tax_par.id=mill_tax_child.mill_tax_invoice_id WHERE mill_tax_par.user_id=login_user_id AND mill_tax_par.company_id=login_company_id AND mill_tax_par.year_id=login_year_id AND mill_tax_par.branch_id=login_branch_id AND mill_tax_child.mill_receive_id NOT IN (login_mill_receive_id)) AND mill_receive.is_delete_status='0';
 	
 ELSE
 	SELECT mill_receive.id as value,mill_receive.mill_receive_mill_challan_no,mill_receive.mill_receive_mill_challan_no as label,mill_receive.mill_receive_taka,mill_receive.mill_receive_qty as mill_receive_meter,mill_receive.mill_receive_width,mill_receive.mill_receive_weight,mill_receive.quality_id,quality.quality_name,gst.id as gst_id,gst.gst_percentage,pur_qty.unit_measurement_symbol FROM erp_mill_receive as mill_receive LEFT JOIN erp_quality as quality ON quality.id=mill_receive.quality_id LEFT JOIN erp_material as material ON material.id=quality.material_id LEFT JOIN erp_gst as gst ON gst.id=material.gst_id LEFT JOIN erp_unit_measurement as pur_qty ON pur_qty.id=material.material_purchase_qty WHERE mill_receive.mill_id=login_mill_id AND mill_receive.user_id=login_user_id AND mill_receive.company_id=login_company_id AND mill_receive.year_id=login_year_id AND mill_receive.branch_id=login_branch_id AND mill_receive.id NOT IN (SELECT mill_tax_child.mill_receive_id FROM erp_mill_tax_invoice_child as mill_tax_child LEFT JOIN erp_mill_tax_invoice as mill_tax_par ON mill_tax_par.id=mill_tax_child.mill_tax_invoice_id WHERE mill_tax_par.user_id=login_user_id AND mill_tax_par.company_id=login_company_id AND mill_tax_par.year_id=login_year_id AND mill_tax_par.branch_id=login_branch_id) AND mill_receive.is_delete_status='0';
 
END IF;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_not_issue_sale_jober_list_dropdown`(IN `login_sale_id` INT, IN `login_sale_child_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_not_issue_sale_jober_list_dropdown');

 END;
IF login_sale_child_id > 0 THEN

	SELECT child.id as sale_child_id,child.quality_id,child.sale_child_meter,child.sale_child_count_meter,child.sale_child_meter - (SELECT COALESCE(SUM(sale_jober_issue_meter),0) FROM erp_sale_jober_issue WHERE sale_child_id=child.id AND is_delete_status='0') as sale_child_due_meter,child.sale_child_fold,child.sale_child_rate,child.sale_child_amount,quality.quality_name,child.gst_id,gst.gst_percentage FROM erp_sale_child as child LEFT JOIN erp_quality as quality ON quality.id=child.quality_id LEFT JOIN erp_gst as gst ON gst.id=child.gst_id WHERE child.id=login_sale_child_id AND child.is_delete_status='0' AND child.is_not_to_jober='0' AND child.order_status!='cancel' AND (SELECT COUNT(id) FROM erp_sale_jober_issue WHERE sale_child_id=child.id AND is_jober_issue_completed='1') = 0;

ELSE

	SELECT child.id as sale_child_id,child.quality_id,child.sale_child_meter,child.sale_child_count_meter,child.sale_child_meter - (SELECT COALESCE(SUM(sale_jober_issue_meter),0) FROM erp_sale_jober_issue WHERE sale_child_id=child.id AND is_delete_status='0') as sale_child_due_meter,child.sale_child_fold,child.sale_child_rate,child.sale_child_amount,quality.quality_name,child.gst_id,gst.gst_percentage FROM erp_sale_child as child LEFT JOIN erp_quality as quality ON quality.id=child.quality_id LEFT JOIN erp_gst as gst ON gst.id=child.gst_id WHERE child.sale_id=login_sale_id AND child.is_delete_status='0' AND child.is_not_to_jober='0' AND child.order_status!='cancel' AND (SELECT COUNT(id) FROM erp_sale_jober_issue WHERE sale_child_id=child.id AND is_jober_issue_completed='1') = 0;  

END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_party_broker_group_data`(IN `login_user_id` INT, IN `login_company_id` INT)
BEGIN

DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_party_broker_group_data');

 END;
	SELECT party.user_id,party.company_id,party.id as party_group_id, party.party_group_name as group_name,head.account_head_short_name as group_type,head.id as group_parent_id FROM erp_party_group as party LEFT JOIN erp_account_head as head ON head.id=party.account_head_id WHERE party.user_id=login_user_id AND party.company_id=login_company_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_party_broker_group_dropdown`(IN `login_user_id` INT, IN `login_company_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_party_broker_group_dropdown');

 END;

	SELECT id,id as value,party_group_name,party_group_name as label FROM erp_party_group WHERE user_id=login_user_id AND company_id=login_company_id AND is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_quality_wise_jober_rate_dropdown`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_quality_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_quality_wise_jober_rate_dropdown');

 END;


	SELECT jober_issue.jober_id,jober.party_name as jober_name,jober_issue.sale_jober_issue_rate as rate FROM erp_sale_jober_issue as jober_issue LEFT JOIN erp_party as jober ON jober.id=jober_issue.jober_id WHERE jober_issue.user_id=login_user_id AND jober_issue.company_id=login_company_id AND jober_issue.branch_id=login_branch_id AND jober_issue.year_id=login_year_id AND jober_issue.quality_id=login_quality_id AND jober_issue.is_delete_status='0' GROUP BY jober_issue.sale_jober_issue_rate,jober_issue.jober_id ORDER BY jober_issue.sale_jober_issue_rate ASC; 

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_sale_invoice_dropdown`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT, IN `login_buyer_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_sale_invoice_dropdown');

 END;
	       
    SELECT sale.id as value, sale.sale_tax_invoice_no as label FROM erp_sale_tax_invoice as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.buyer_id=login_buyer_id  AND sale.is_delete_status='0';
     

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_state_data`()
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_state_data');

 END;


	SELECT id as state_id,id as value,global_name as state_name,global_name as label FROM erp_global WHERE global_type='state' AND global_parent_id = '79';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_status_dropdown`()
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_status_dropdown');

 END;

	SELECT id as status_id,id as value,status_name,status_name as label FROM erp_status WHERE 1=1;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_tds_on_dropdown`()
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_tds_on_dropdown');

 END;

	SELECT id as tds_on_id,id as value,tds_on_name,tds_on_name as label FROM erp_tds_on WHERE 1=1;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_audit_document_phase1_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_party_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION	

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_audit_document_phase1_data');

 END;    
    
	SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='16' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
    SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type IN ('receipt','contra') AND voucher.voucher_transaction_type IN ('bank','netbanking','b2b','cd') AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='contra' AND voucher.voucher_transaction_type IN ('b2b','cw') AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.voucher_transaction_type IN ('bank','netbanking') AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date;
    
    SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='31' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
    SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_net_amount,0) as amount,IF(pur_return.purchase_return_type_id='96','purchase debit note','purchase return') as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id!='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_net_amount,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,IF(sale_return.sale_return_type_id='98','sale credit note','sale return') as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return as sale_return ON sale_return.buyer_id=party.id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id!='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return as sale_return ON sale_return.buyer_id=party.id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
    
    SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='1' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
  
  
 SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='18' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
    SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_transaction_type IN ('cash','cw') AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_transaction_type IN ('cash','cd') AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date;
  
  SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='60' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_cgst,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_cgst,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale.sale_tax_invoice_total_cgst,0) as amount,'sale' as book,sale.sale_tax_invoice_no as ref_no,sale.sale_tax_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_tax_invoice as sale ON sale.buyer_id=party.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='63' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_total_cgst,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(mill.mill_tax_invoice_total_cgst,0) as amount,'mill' as book,mill.mill_tax_invoice_no as ref_no,mill.mill_tax_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_mill_tax_invoice as mill ON mill.mill_id=party.id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(tax_par.purchase_tax_invoice_total_cgst,0) as amount,'purchase' as book,tax_par.purchase_tax_invoice_no as ref_no,tax_par.purchase_tax_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.supplier_id=party.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_cgst,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_cgst,0) as amount,IF(pur_return.purchase_return_type_id='96','purchase debit note','purchase return') as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id!='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_cgst,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id!='97' AND sale_return_child.party_id!=login_party_id AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_cgst,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return_child.party_id!=login_party_id AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date ;

   
      
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_audit_document_phase2_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_party_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION	

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_audit_document_phase2_data');

 END;    
    
	SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='77' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_net_amount,0) as amount,IF(pur_return.purchase_return_type_id='96','purchase debit note','purchase return') as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id!='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_net_amount,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,IF(sale_return.sale_return_type_id='98','sale credit note','sale return') as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return as sale_return ON sale_return.buyer_id=party.id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id!='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return as sale_return ON sale_return.buyer_id=party.id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;

SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='82' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='32' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='33' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='6' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='76' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_net_amount,0) as amount,IF(pur_return.purchase_return_type_id='96','purchase debit note','purchase return') as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id!='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_net_amount,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,IF(sale_return.sale_return_type_id='98','sale credit note','sale return') as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return as sale_return ON sale_return.buyer_id=party.id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id!='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return as sale_return ON sale_return.buyer_id=party.id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='34' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_net_amount,0) as amount,IF(pur_return.purchase_return_type_id='96','purchase debit note','purchase return') as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id!='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_net_amount,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,IF(sale_return.sale_return_type_id='98','sale credit note','sale return') as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return as sale_return ON sale_return.buyer_id=party.id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id!='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return as sale_return ON sale_return.buyer_id=party.id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='91' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_audit_document_phase3_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_party_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION	

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_audit_document_phase3_data');

 END;    
    
	SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='61' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_igst,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_igst,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale.sale_tax_invoice_total_igst,0) as amount,'sale' as book,sale.sale_tax_invoice_no as ref_no,sale.sale_tax_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_tax_invoice as sale ON sale.buyer_id=party.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date;

SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='64' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_total_igst,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(mill.mill_tax_invoice_total_igst,0) as amount,'mill' as book,mill.mill_tax_invoice_no as ref_no,mill.mill_tax_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_mill_tax_invoice as mill ON mill.mill_id=party.id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(tax_par.purchase_tax_invoice_total_igst,0) as amount,'purchase' as book,tax_par.purchase_tax_invoice_no as ref_no,tax_par.purchase_tax_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.supplier_id=party.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_igst,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_igst,0) as amount,IF(pur_return.purchase_return_type_id='96','purchase debit note','purchase return') as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id!='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_igst,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id!='97' AND sale_return_child.party_id!=login_party_id AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_igst,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return_child.party_id!=login_party_id AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
  
  
  SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='7' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
  
  SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='8' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
  
  SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='66' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
  
  SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='69' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
  
  SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='67' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
  
  SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='70' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
  
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='65' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
  
  SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='68' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_audit_document_phase4_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_party_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION	

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_audit_document_phase4_data');

 END;    
    
	SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='78' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(jober.jober_invoice_total_net_amount,0) as amount,'jober invoice' as book,jober.jober_invoice_no as ref_no,jober.jober_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_jober_invoice as jober ON jober.jober_id=party.id WHERE party.id=login_party_id AND jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.branch_id=login_branch_id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date;

   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='21' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='73' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(mill.mill_tax_invoice_total_net_amount,0) as amount,'mill invoice' as book,mill.mill_tax_invoice_no as ref_no,mill.mill_tax_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_mill_tax_invoice as mill ON mill.mill_id=party.id WHERE party.id=login_party_id AND mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='89' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
   
   SELECT party.id,party.party_name,COALESCE(mill.mill_tax_invoice_total_net_amount,0) as amount,'mill invoice' as book,mill.mill_tax_invoice_no as ref_no,mill.mill_tax_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_mill_tax_invoice as mill ON mill.party_account_head_id=party.id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='47' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='39' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
   
   SELECT party.id,party.party_name,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'purchase return' as book,return_par.purchase_return_note_no as ref_no,return_par.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as return_par ON return_par.supplier_id=party.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='39' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='40' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
   
   SELECT 'Rounding Off' as particluar,0 as opening,(SELECT COALESCE(SUM(journal.journal_purchase_round_off),0) FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.year_id=login_year_id AND journal.branch_id=login_branch_id AND journal.is_delete_status='0' AND journal.journal_purchase_round_off > 0 AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_round_off),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id!='96' AND purchase.purchase_return_round_off < 0 AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_round_off),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id='96' AND purchase.purchase_return_round_off > 0 AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_round_off),0) FROM erp_sale_return as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.sale_return_type_id!='97' AND sale.sale_return_round_off > 0 AND sale.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_round_off),0) FROM erp_sale_return as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.sale_return_type_id='97' AND sale.sale_return_round_off < 0 AND sale.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_round_off),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.purchase_tax_invoice_round_off > 0 AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(tax_par.sale_tax_invoice_round_off),0) FROM erp_sale_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.sale_tax_invoice_round_off < 0 AND DATE(tax_par.sale_tax_invoice_entry_date)>=from_date AND DATE(tax_par.sale_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(tax_par.mill_tax_invoice_total_round_off),0) FROM erp_mill_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.mill_tax_invoice_total_round_off > 0 AND DATE(tax_par.mill_tax_invoice_entry_date)>=from_date AND DATE(tax_par.mill_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_round_off),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.branch_id=login_branch_id AND jober.is_delete_status='0' AND jober.jober_invoice_total_round_off > 0 AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date) as debit,(SELECT COALESCE(SUM(journal.journal_purchase_round_off),0) FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.year_id=login_year_id AND journal.branch_id=login_branch_id AND journal.is_delete_status='0' AND journal.journal_purchase_round_off < 0 AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_round_off),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id!='96' AND purchase.purchase_return_round_off > 0 AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_round_off),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id='96' AND purchase.purchase_return_round_off < 0 AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_round_off),0) FROM erp_sale_return as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.sale_return_type_id!='97' AND sale.sale_return_round_off < 0 AND sale.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_round_off),0) FROM erp_sale_return as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.sale_return_type_id='97' AND sale.sale_return_round_off > 0 AND sale.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_round_off),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.purchase_tax_invoice_round_off < 0 AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(tax_par.sale_tax_invoice_round_off),0) FROM erp_sale_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.sale_tax_invoice_round_off > 0 AND DATE(tax_par.sale_tax_invoice_entry_date)>=from_date AND DATE(tax_par.sale_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(tax_par.mill_tax_invoice_total_round_off),0) FROM erp_mill_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.mill_tax_invoice_total_round_off < 0 AND DATE(tax_par.mill_tax_invoice_entry_date)>=from_date AND DATE(tax_par.mill_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_round_off),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.branch_id=login_branch_id AND jober.is_delete_status='0' AND jober.jober_invoice_total_round_off < 0 AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date) as credit;
   
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_audit_document_phase5_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_party_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION	

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_audit_document_phase5_data');

 END;    
    
	SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='38' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
   
   SELECT party.id,party.party_name,COALESCE(return_par.sale_return_total_net_amount,0) as amount,'sale return' as book,return_par.sale_return_note_no as ref_no,return_par.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return as return_par ON return_par.buyer_id=party.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='38' AND return_par.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date;

SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='59' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_sgst,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_sgst,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale.sale_tax_invoice_total_sgst,0) as amount,'sale' as book,sale.sale_tax_invoice_no as ref_no,sale.sale_tax_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_tax_invoice as sale ON sale.buyer_id=party.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date;
  
  SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='62' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_total_sgst,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(mill.mill_tax_invoice_total_sgst,0) as amount,'mill' as book,mill.mill_tax_invoice_no as ref_no,mill.mill_tax_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_mill_tax_invoice as mill ON mill.mill_id=party.id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(tax_par.purchase_tax_invoice_total_sgst,0) as amount,'purchase' as book,tax_par.purchase_tax_invoice_no as ref_no,tax_par.purchase_tax_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.supplier_id=party.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_sgst,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_sgst,0) as amount,IF(pur_return.purchase_return_type_id='96','purchase debit note','purchase return') as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id!='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_sgst,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id!='97' AND sale_return_child.party_id!=login_party_id AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_sgst,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return_child.party_id!=login_party_id AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
  
  
  SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='25' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
 
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='26' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
 
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_net_amount,0) as amount,IF(pur_return.purchase_return_type_id='96','purchase debit note','purchase return') as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id!='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_net_amount,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(tax_par.purchase_tax_invoice_net_amount,0) as amount,'purchase' as book,tax_par.purchase_tax_invoice_no as ref_no,tax_par.purchase_tax_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.supplier_id=party.id WHERE party.id=login_party_id AND tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(mill.mill_tax_invoice_total_net_amount,0) as amount,'mill' as book,mill.mill_tax_invoice_no as ref_no,mill.mill_tax_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_mill_tax_invoice as mill ON mill.mill_id=party.id WHERE party.id=login_party_id AND mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(jober.jober_invoice_total_net_amount,0) as amount,'jober' as book,jober.jober_invoice_no as ref_no,jober.jober_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_jober_invoice as jober ON jober.jober_id=party.id WHERE party.id=login_party_id AND jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.branch_id=login_branch_id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date;
     
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_audit_document_phase6_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_party_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION	

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_audit_document_phase6_data');

 END;    
    
	SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='27' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
   
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,IF(sale_return.sale_return_type_id='98','sale credit note','sale return') as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return as sale_return ON sale_return.buyer_id=party.id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id!='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return as sale_return ON sale_return.buyer_id=party.id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(tax_par.sale_tax_invoice_total_net_amount,0) as amount,'sale' as book,tax_par.sale_tax_invoice_no as ref_no,tax_par.sale_tax_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_tax_invoice as tax_par ON tax_par.buyer_id=party.id WHERE party.id=login_party_id AND tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.sale_tax_invoice_entry_date)>=from_date AND DATE(tax_par.sale_tax_invoice_entry_date)<=to_date;
   
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='54' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
   
   SELECT party.id,party.party_name,COALESCE(tax_par.sale_tax_invoice_total_net_amount,0) as amount,'sale' as book,tax_par.sale_tax_invoice_no as ref_no,tax_par.sale_tax_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_tax_invoice as tax_par ON tax_par.buyer_id=party.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.sale_tax_invoice_entry_date)>=from_date AND DATE(tax_par.sale_tax_invoice_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='56' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
   
   SELECT party.id,party.party_name,COALESCE(tax_par.purchase_tax_invoice_net_amount,0) as amount,'purchase' as book,tax_par.purchase_tax_invoice_no as ref_no,tax_par.purchase_tax_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.supplier_id=party.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date;
   
   SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='92' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
      
   SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(tax_par.puchase_tax_invoice_tcs_amt,0) as amount,'purchase' as book,tax_par.purchase_tax_invoice_no as ref_no,tax_par.purchase_tax_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.supplier_id=party.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_tcs_amt,0) as amount,'purchase return' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return as pur_return ON pur_return.supplier_id=party.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='39' AND pur_return.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date;
   
  
  SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='42' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date;
  
  
  SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='45' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
  
  
  SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='75' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
  
  	 SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date;
  
    SELECT party.id as party_id,party.party_name,COALESCE(party.party_opening_balance,0) as opening,NULL as child_data FROM erp_party as party WHERE party.account_head_id='28' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
    SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,voucher.voucher_amount as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(voucher.voucher_amount,0) as amount,voucher.voucher_type as book,voucher.voucher_no as ref_no,voucher.voucher_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.to_party_id=party.id WHERE party.id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase_child.journal_purchase_child_taxable,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.supplier_id=party.id LEFT JOIN erp_journal_purchase as purchase ON purchase.id=purchase_child.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(purchase.journal_purchase_child_net_total,0) as amount,'journal purchase' as book,purchase.journal_purchase_invoice_no as ref_no,purchase.journal_purchase_invoice_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_journal_purchase as purchase ON purchase.supplier_id=party.id WHERE party.id=login_party_id AND purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase credit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(pur_return.purchase_return_total_taxable,0) as amount,'purchase debit note' as book,pur_return.purchase_return_note_no as ref_no,pur_return.purchase_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_purchase_return_child as pur_return_child ON pur_return_child.party_id=party.id LEFT JOIN erp_purchase_return as pur_return ON pur_return.id=pur_return_child.purchase_return_id WHERE party.id=login_party_id AND pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' AND pur_return_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale credit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'debit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.id,party.party_name,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'sale debit note' as book,sale_return.sale_return_note_no as ref_no,sale_return.sale_return_date as default_date,'credit' as type FROM erp_party as party LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.party_id=party.id LEFT JOIN erp_sale_return as sale_return ON sale_return.id=sale_return_child.sale_return_id WHERE party.id=login_party_id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
     
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_balance_sheet_phase1_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `from_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_balance_sheet_phase1_data');

 END;    
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.voucher_type='payment' AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date)) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.voucher_type='receipt' AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.account_head_id='1' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
    
    SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date)) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='46' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date)) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='17' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='24' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date)) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='28' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date)) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='31' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(sale.sale_return_total_cgst),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.sale_return_type_id='98' AND sale.buyer_id!=party.id AND sale_child.party_id!=party.id AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)) + (SELECT COALESCE(SUM(sale_tax.sale_tax_invoice_total_cgst),0) FROM erp_sale_tax_invoice as sale_tax WHERE sale_tax.user_id=login_user_id AND sale_tax.company_id=login_company_id AND sale_tax.branch_id=login_branch_id AND sale_tax.year_id=login_year_id AND sale_tax.is_delete_status='0' AND DATE(sale_tax.sale_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_cgst),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.sale_return_type_id='97' AND sale.buyer_id!=party.id AND sale_child.party_id!=party.id AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='60' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date)) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='82' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date)) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='75' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
      
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date)) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='49' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date)) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='50' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date)) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='51' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(purchase.puchase_tax_invoice_tcs_amt),0) FROM erp_purchase_tax_invoice as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND purchase.is_delete_status='0' AND DATE(purchase.purchase_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_tcs_amt),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='39' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='92' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.is_delete_status='0' AND sale.sale_return_type_id='98' AND sale_child.party_id=party.id AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.is_delete_status='0' AND sale.sale_return_type_id='97' AND sale_child.party_id=party.id AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='91' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(sale.sale_return_total_igst),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.sale_return_type_id='98' AND sale.buyer_id!=party.id AND sale_child.party_id!=party.id AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)) + (SELECT COALESCE(SUM(sale_tax.sale_tax_invoice_total_cgst),0) FROM erp_sale_tax_invoice as sale_tax WHERE sale_tax.user_id=login_user_id AND sale_tax.company_id=login_company_id AND sale_tax.branch_id=login_branch_id AND sale_tax.year_id=login_year_id AND sale_tax.is_delete_status='0' AND DATE(sale_tax.sale_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_igst),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.sale_return_type_id='97' AND sale.buyer_id!=party.id AND sale_child.party_id!=party.id AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='61' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(sale.sale_return_total_sgst),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.sale_return_type_id='98' AND sale.buyer_id!=party.id AND sale_child.party_id!=party.id AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)) + (SELECT COALESCE(SUM(sale_tax.sale_tax_invoice_total_cgst),0) FROM erp_sale_tax_invoice as sale_tax WHERE sale_tax.user_id=login_user_id AND sale_tax.company_id=login_company_id AND sale_tax.branch_id=login_branch_id AND sale_tax.year_id=login_year_id AND sale_tax.is_delete_status='0' AND DATE(sale_tax.sale_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_sgst),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.sale_return_type_id='97' AND sale.buyer_id!=party.id AND sale_child.party_id!=party.id AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='59' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_balance_sheet_phase2_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `from_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_balance_sheet_phase2_data');

 END;    
 SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND return_par.purchase_return_entry_date=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND return_par.purchase_return_entry_date=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.account_head_id='66' AND party.user_id=login_user_id AND party.company_id=login_company_id GROUP BY party.id HAVING amount <> 0;
   
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND return_par.purchase_return_entry_date=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND return_par.purchase_return_entry_date=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.account_head_id='67' AND party.user_id=login_user_id AND party.company_id=login_company_id GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND return_par.purchase_return_entry_date=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND return_par.purchase_return_entry_date=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.account_head_id='65' AND party.user_id=login_user_id AND party.company_id=login_company_id GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id!='95' AND return_par.supplier_id=party.id AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date)) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_par.supplier_id=party.id AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=party.id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND purchase.supplier_id=party.id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.account_head_id='26' AND party.user_id=login_user_id AND party.company_id=login_company_id GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND voucher.to_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date)) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_net_amount),0) FROM erp_mill_tax_invoice as mill WHERE mill.mill_id=party.id AND mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='73' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date)) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.supplier_id=party.id AND tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='77' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date)) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.supplier_id=party.id AND tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='76' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date)) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.supplier_id=party.id AND tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_total),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.branch_id=login_branch_id AND jober.jober_id=party.id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='78' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date)) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date)), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='42' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_balance_sheet_phase3_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `from_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_balance_sheet_phase3_data');

 END;   
 SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='6' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
    SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='9' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.voucher_type='receipt' AND voucher.voucher_transaction_type IN ('bank','netbanking') AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.voucher_type='contra' AND voucher.voucher_transaction_type IN ('cd','b2b') AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.voucher_type='payment' AND voucher.voucher_transaction_type IN ('bank','netbanking') AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=1 AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.voucher_type='contra' AND voucher.voucher_transaction_type IN ('cw','b2b') AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.account_head_id='16' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE  voucher.to_party_id=party.id AND voucher.voucher_transaction_type IN ('cash','cw') AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.voucher_transaction_type IN ('cash','cd') AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=1 AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.account_head_id='18' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_total_cgst),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_date)<=from_date) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_cgst),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_date)<=from_date) + (SELECT COALESCE(SUM(purchase.journal_purchase_child_total_cgst),0) FROM erp_journal_purchase as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_invoice_date)<=from_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_cgst),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_cgst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_cgst),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id!='98' AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_cgst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id!='95' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_cgst),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id!='98' AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.account_head_id='63' AND party.user_id=login_user_id AND party.company_id=login_company_id GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='43' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='19' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_total_igst),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_date)<=from_date) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_igst),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_date)<=from_date) + (SELECT COALESCE(SUM(purchase.journal_purchase_child_total_igst),0) FROM erp_journal_purchase as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_invoice_date)<=from_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_igst),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_igst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_igst),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id!='98' AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_igst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id!='95' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_igst),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id!='98' AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.account_head_id='64' AND party.user_id=login_user_id AND party.company_id=login_company_id GROUP BY party.id HAVING amount <> 0;
   
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.account_head_id='69' AND party.user_id=login_user_id AND party.company_id=login_company_id GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.account_head_id='70' AND party.user_id=login_user_id AND party.company_id=login_company_id GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.account_head_id='68' AND party.user_id=login_user_id AND party.company_id=login_company_id GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND voucher.to_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date))), 0) as amount FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.account_head_id='21' AND party.user_id=login_user_id AND party.company_id=login_company_id GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_total_sgst),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_date)<=from_date) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_sgst),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_date)<=from_date) + (SELECT COALESCE(SUM(purchase.journal_purchase_child_total_sgst),0) FROM erp_journal_purchase as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_invoice_date)<=from_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_sgst),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_sgst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_sgst),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id!='98' AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_sgst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id!='95' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_sgst),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id!='98' AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.account_head_id='62' AND party.user_id=login_user_id AND party.company_id=login_company_id GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='98' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(pur_return.purchase_return_total_taxable),0) FROM erp_purchase_return as pur_return LEFT JOIN erp_purchase_return_child as pur_child ON pur_child.purchase_return_id=pur_return.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_child.party_id=party.id AND pur_return.is_delete_status='0' AND pur_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='97' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(pur_return.purchase_return_total_taxable),0) FROM erp_purchase_return as pur_return LEFT JOIN erp_purchase_return_child as pur_child ON pur_child.purchase_return_id=pur_return.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_child.party_id=party.id AND pur_return.is_delete_status='0' AND pur_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='25' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(sale.sale_tax_invoice_total_net_amount),0) FROM erp_sale_tax_invoice as sale WHERE sale.buyer_id=party.id AND sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return.sale_return_total_net_amount),0) FROM erp_sale_return as sale_return WHERE sale_return.buyer_id=party.id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id!='98' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return.sale_return_total_net_amount),0) FROM erp_sale_return as sale_return WHERE sale_return.buyer_id=party.id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND voucher.to_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='27' AND party.is_delete_status='0' GROUP BY party.id HAVING amount <> 0;
   
   
   SELECT party.id as party_id, party.party_name as particular,COALESCE(SUM((CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + -ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date))), 0) as amount FROM erp_party as party WHERE party.account_head_id='11' AND party.user_id=login_user_id AND party.company_id=login_company_id GROUP BY party.id HAVING amount <> 0;
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_branch_details`(IN `login_branch_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_branch_details');

 END;

	SELECT * FROM erp_branch WHERE id=login_branch_id AND is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_company_data`()
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_company_data');

 END;

	SELECT id as company_id,id as value,company_name,company_name as label FROM erp_company WHERE is_delete_status='0';
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_company_details`(IN `login_company_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_company_details');

 END;


	SELECT erp_company.* FROM erp_company WHERE id=login_company_id AND is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_dashboard_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_dashboard_data');

 END;
	
   
   SELECT (SELECT COUNT(party.id) FROM erp_party as party LEFT JOIN erp_account_head as head ON head.id=party.account_head_id WHERE party.account_head_id='27' OR head.account_head_id='27' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0') as buyer_count,(SELECT COUNT(tax_par.id) FROM erp_sale_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0') as orders,(SELECT COALESCE(SUM(journal.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.year_id=login_year_id AND journal.branch_id=login_branch_id AND journal.is_delete_status='0') as purchase_journal,(SELECT COALESCE(SUM(journal.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.year_id=login_year_id AND journal.branch_id=login_branch_id AND journal.is_delete_status='0' AND MONTH(journal.journal_purchase_entry_date)=MONTH(CURRENT_DATE()) AND YEAR(journal.journal_purchase_entry_date)=YEAR(CURRENT_DATE())) as purchase_journal_current_month,(SELECT COALESCE(SUM(journal_child.journal_purchase_child_qty),0) FROM erp_journal_purchase as journal LEFT JOIN erp_journal_purchase_child as journal_child ON journal_child.journal_purchase_id=journal.id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.year_id=login_year_id AND journal.branch_id=login_branch_id AND journal.is_delete_status='0' AND journal_child.is_delete_status='0') as journal_qty,(SELECT COALESCE(SUM(journal_child.journal_purchase_child_unit),0) FROM erp_journal_purchase as journal LEFT JOIN erp_journal_purchase_child as journal_child ON journal_child.journal_purchase_id=journal.id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.year_id=login_year_id AND journal.branch_id=login_branch_id AND journal.is_delete_status='0' AND journal_child.is_delete_status='0') as journal_unit,(SELECT COALESCE(SUM(tax_per.purchase_tax_invoice_total_taxable),0) FROM erp_purchase_tax_invoice as tax_per WHERE tax_per.user_id=login_user_id AND tax_per.company_id=login_company_id AND tax_per.year_id=login_year_id AND tax_per.branch_id=login_branch_id AND tax_per.is_delete_status='0') as purchase,(SELECT COALESCE(SUM(tax_per.purchase_tax_invoice_total_taxable),0) FROM erp_purchase_tax_invoice as tax_per WHERE tax_per.user_id=login_user_id AND tax_per.company_id=login_company_id AND tax_per.year_id=login_year_id AND tax_per.branch_id=login_branch_id AND tax_per.is_delete_status='0' AND MONTH(tax_per.purchase_tax_invoice_entry_date)=MONTH(CURRENT_DATE()) AND YEAR(tax_per.purchase_tax_invoice_entry_date)=YEAR(CURRENT_DATE())) as purchase_current_month,(SELECT COALESCE(SUM(tax_per.purchase_tax_invoice_total_qty_sent),0) FROM erp_purchase_tax_invoice as tax_per WHERE tax_per.user_id=login_user_id AND tax_per.company_id=login_company_id AND tax_per.year_id=login_year_id AND tax_per.branch_id=login_branch_id AND tax_per.is_delete_status='0') as purchase_qty,(SELECT COALESCE(SUM(tax_per.purchase_tax_invoice_total_unit_sent),0) FROM erp_purchase_tax_invoice as tax_per WHERE tax_per.user_id=login_user_id AND tax_per.company_id=login_company_id AND tax_per.year_id=login_year_id AND tax_per.branch_id=login_branch_id AND tax_per.is_delete_status='0') as purchase_unit,(SELECT COALESCE(SUM(mill.mill_tax_invoice_total_taxable_amount),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0') as mill,(SELECT COALESCE(SUM(mill.mill_tax_invoice_total_taxable_amount),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND MONTH(mill.mill_tax_invoice_entry_date)=MONTH(CURRENT_DATE()) AND YEAR(mill.mill_tax_invoice_entry_date)=YEAR(CURRENT_DATE())) as mill_current_month,(SELECT COALESCE(SUM(mill.mill_tax_invoice_total_taka),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0') as mill_qty,(SELECT COALESCE(SUM(mill.mill_tax_invoice_total_meter),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0') as mill_unit,(SELECT COALESCE(SUM(sale.sale_tax_invoice_total_amount),0) FROM erp_sale_tax_invoice as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.is_delete_status='0') as sale,(SELECT COALESCE(SUM(sale.sale_tax_invoice_total_amount),0) FROM erp_sale_tax_invoice as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.is_delete_status='0' AND MONTH(sale.sale_tax_invoice_entry_date)=MONTH(CURRENT_DATE()) AND YEAR(sale.sale_tax_invoice_entry_date)=YEAR(CURRENT_DATE())) as sale_current_month,(SELECT COALESCE(SUM(sale.sale_tax_invoice_total_meter),0) FROM erp_sale_tax_invoice as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.is_delete_status='0') as sale_qty;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_depreciation_rate_report_data`(IN `login_user_id` INT, IN `login_company_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_depreciation_rate_report_data');

 END;
 
   SELECT dep_rate.id as depreciation_rate_id,party.id as party_id,party.party_name,dep_rate.depreciation_rate_amount,dep_rate.depreciation_rate_rate,dep_rate.depreciation_rate_depreciation,(dep_rate.depreciation_rate_amount-dep_rate.depreciation_rate_depreciation) as closing_amount FROM erp_depreciation_rate as dep_rate LEFT JOIN erp_party as party On party.id=dep_rate.party_id WHERE dep_rate.user_id=login_user_id AND dep_rate.company_id=login_company_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_finish_receive_details`(IN `login_finish_receive_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_finish_receive_details');

 END;
	SELECT * FROM erp_mill_receive WHERE id=login_finish_receive_id AND is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_godown_details`(IN `login_godown_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_godown_details');

 END;

	SELECT * FROM erp_godown WHERE id=login_godown_id AND is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_godown_level_details`(IN `login_godown_level_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_godown_level_details');

 END;

	SELECT * FROM erp_godown_level WHERE id=login_godown_level_id AND is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_grey_issue_details`(IN `login_grey_issue_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_grey_issue_details');

END;

	SELECT grey_issue.*,tax_child.purchase_tax_invoice_child_unit_sent,IF(tax_child.purchase_tax_invoice_quality_meter_average > 0,tax_child.purchase_tax_invoice_quality_meter_average,tax_child.purchase_tax_invoice_child_net_meter) as purchase_tax_invoice_child_net_meter,tax_child.purchase_tax_invoice_child_qty_sent FROM erp_grey_issue as grey_issue LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.id=grey_issue.purchase_tax_invoice_child_id WHERE grey_issue.id=login_grey_issue_id AND grey_issue.is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_gst_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_gst_data');

 END;
 
	SELECT 'B2B' as type, COALESCE(SUM(sale_tax_invoice_total_taxable),0) as taxable,COALESCE(SUM(sale_tax_invoice_total_sgst),0) as sgst,COALESCE(SUM(sale_tax_invoice_total_cgst),0) as cgst,COALESCE(SUM(sale_tax_invoice_total_igst),0) as igst,COALESCE(SUM(sale_tax_invoice_total_net_amount),0) as net_amount,NULL as party_data FROM erp_sale_tax_invoice as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date AND sale.account_head_id='54' AND sale.is_delete_status='0';
    
    SELECT party.party_name,party.party_gst_no, COALESCE(SUM(sale_tax_invoice_total_taxable),0) as sale_tax_invoice_total_taxable,COALESCE(SUM(sale_tax_invoice_total_sgst),0) as sale_tax_invoice_total_sgst,COALESCE(SUM(sale_tax_invoice_total_cgst),0) as sale_tax_invoice_total_cgst,COALESCE(SUM(sale_tax_invoice_total_igst),0) as sale_tax_invoice_total_igst,COALESCE(SUM(sale_tax_invoice_total_net_amount),0) as sale_tax_invoice_total_net_amount FROM erp_sale_tax_invoice as sale LEFT JOIN erp_party as party ON party.id=sale.buyer_id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date AND sale.account_head_id='54' AND sale.is_delete_status='0' GROUP BY sale.buyer_id;
        
    SELECT 'B2CL' as type, COALESCE(SUM(sale_tax_invoice_total_taxable),0) as taxable,COALESCE(SUM(sale_tax_invoice_total_sgst),0) as sgst,COALESCE(SUM(sale_tax_invoice_total_cgst),0) as cgst,COALESCE(SUM(sale_tax_invoice_total_igst),0) as igst,COALESCE(SUM(sale_tax_invoice_total_net_amount),0) as net_amount,NULL as party_data FROM erp_sale_tax_invoice as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date AND sale.account_head_id='54' AND sale.sale_tax_invoice_total_net_amount > '250000' AND sale.is_delete_status='0';
    
    SELECT party.party_name,party.party_gst_no, COALESCE(SUM(sale_tax_invoice_total_taxable),0) as sale_tax_invoice_total_taxable,COALESCE(SUM(sale_tax_invoice_total_sgst),0) as sale_tax_invoice_total_sgst,COALESCE(SUM(sale_tax_invoice_total_cgst),0) as sale_tax_invoice_total_cgst,COALESCE(SUM(sale_tax_invoice_total_igst),0) as sale_tax_invoice_total_igst,COALESCE(SUM(sale_tax_invoice_total_net_amount),0) as sale_tax_invoice_total_net_amount FROM erp_sale_tax_invoice as sale LEFT JOIN erp_party as party ON party.id=sale.buyer_id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date AND sale.account_head_id='54' AND sale.sale_tax_invoice_total_net_amount > '250000' AND sale.is_delete_status='0' GROUP BY sale.buyer_id;
    
    SELECT 'B2CS' as type, COALESCE(SUM(sale_tax_invoice_total_taxable),0) as taxable,COALESCE(SUM(sale_tax_invoice_total_sgst),0) as sgst,COALESCE(SUM(sale_tax_invoice_total_cgst),0) as cgst,COALESCE(SUM(sale_tax_invoice_total_igst),0) as igst,COALESCE(SUM(sale_tax_invoice_total_net_amount),0) as net_amount,NULL as party_data FROM erp_sale_tax_invoice as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date AND sale.account_head_id='54' AND sale.sale_tax_invoice_total_net_amount <= '250000' AND sale.is_delete_status='0';
    
    SELECT party.party_name,party.party_gst_no, COALESCE(SUM(sale_tax_invoice_total_taxable),0) as sale_tax_invoice_total_taxable,COALESCE(SUM(sale_tax_invoice_total_sgst),0) as sale_tax_invoice_total_sgst,COALESCE(SUM(sale_tax_invoice_total_cgst),0) as sale_tax_invoice_total_cgst,COALESCE(SUM(sale_tax_invoice_total_igst),0) as sale_tax_invoice_total_igst,COALESCE(SUM(sale_tax_invoice_total_net_amount),0) as sale_tax_invoice_total_net_amount FROM erp_sale_tax_invoice as sale LEFT JOIN erp_party as party ON party.id=sale.buyer_id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date AND sale.account_head_id='54' AND sale.sale_tax_invoice_total_net_amount <= '250000' AND sale.is_delete_status='0' GROUP BY sale.buyer_id;
    
    SELECT 'sales return' as type, COALESCE(SUM(sale_return_total_taxable),0) as taxable,COALESCE(SUM(sale_return_total_sgst),0) as sgst,COALESCE(SUM(sale_return_total_cgst),0) as cgst,COALESCE(SUM(sale_return_total_igst),0) as igst,COALESCE(SUM(sale_return_total_net_amount),0) as net_amount,NULL as party_data FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.buyer_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date AND party.party_gst_no !='' AND sale_return.sale_return_type_id='38' AND sale_return.is_delete_status='0';
    
    SELECT party.party_name,party.party_gst_no, COALESCE(SUM(sale_return_total_taxable),0) as sale_return_total_taxable,COALESCE(SUM(sale_return_total_sgst),0) as sale_return_total_sgst,COALESCE(SUM(sale_return_total_cgst),0) as sale_return_total_cgst,COALESCE(SUM(sale_return_total_igst),0) as sale_return_total_igst,COALESCE(SUM(sale_return_total_net_amount),0) as sale_return_total_net_amount,NULL as party_data FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.buyer_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date AND party.party_gst_no !='' AND sale_return.sale_return_type_id='38' AND sale_return.is_delete_status='0' GROUP BY sale_return.buyer_id;
    
     SELECT 'sales credit note' as type, COALESCE(SUM(sale_return_total_taxable),0) as taxable,COALESCE(SUM(sale_return_total_sgst),0) as sgst,COALESCE(SUM(sale_return_total_cgst),0) as cgst,COALESCE(SUM(sale_return_total_igst),0) as igst,COALESCE(SUM(sale_return_total_net_amount),0) as net_amount,NULL as party_data FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.buyer_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date AND party.party_gst_no !='' AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0';
     
     SELECT party.party_name,party.party_gst_no, COALESCE(SUM(sale_return_total_taxable),0) as sale_return_total_taxable,COALESCE(SUM(sale_return_total_sgst),0) as sale_return_total_sgst,COALESCE(SUM(sale_return_total_cgst),0) as sale_return_total_cgst,COALESCE(SUM(sale_return_total_igst),0) as sale_return_total_igst,COALESCE(SUM(sale_return_total_net_amount),0) as sale_return_total_net_amount,NULL as party_data FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.buyer_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date AND party.party_gst_no !='' AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' GROUP BY sale_return.buyer_id;
     
     SELECT 'sales debit note' as type, COALESCE(SUM(sale_return_total_taxable),0) as taxable,COALESCE(SUM(sale_return_total_sgst),0) as sgst,COALESCE(SUM(sale_return_total_cgst),0) as cgst,COALESCE(SUM(sale_return_total_igst),0) as igst,COALESCE(SUM(sale_return_total_net_amount),0) as net_amount,NULL as party_data FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.buyer_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date AND party.party_gst_no !='' AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0';
     
     SELECT party.party_name,party.party_gst_no, COALESCE(SUM(sale_return_total_taxable),0) as sale_return_total_taxable,COALESCE(SUM(sale_return_total_sgst),0) as sale_return_total_sgst,COALESCE(SUM(sale_return_total_cgst),0) as sale_return_total_cgst,COALESCE(SUM(sale_return_total_igst),0) as sale_return_total_igst,COALESCE(SUM(sale_return_total_net_amount),0) as sale_return_total_net_amount,NULL as party_data FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.buyer_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date AND party.party_gst_no !='' AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' GROUP BY sale_return.buyer_id;
     
     SELECT 'sales return' as type, COALESCE(SUM(sale_return_total_taxable),0) as taxable,COALESCE(SUM(sale_return_total_sgst),0) as sgst,COALESCE(SUM(sale_return_total_cgst),0) as cgst,COALESCE(SUM(sale_return_total_igst),0) as igst,COALESCE(SUM(sale_return_total_net_amount),0) as net_amount,NULL as party_data FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.buyer_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date AND party.party_gst_no ='' AND sale_return.sale_return_type_id='38' AND sale_return.is_delete_status='0';
    
    SELECT party.party_name,party.party_gst_no, COALESCE(SUM(sale_return_total_taxable),0) as sale_return_total_taxable,COALESCE(SUM(sale_return_total_sgst),0) as sale_return_total_sgst,COALESCE(SUM(sale_return_total_cgst),0) as sale_return_total_cgst,COALESCE(SUM(sale_return_total_igst),0) as sale_return_total_igst,COALESCE(SUM(sale_return_total_net_amount),0) as sale_return_total_net_amount,NULL as party_data FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.buyer_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date AND party.party_gst_no ='' AND sale_return.sale_return_type_id='38' AND sale_return.is_delete_status='0' GROUP BY sale_return.buyer_id;
    
     SELECT 'sales credit note' as type, COALESCE(SUM(sale_return_total_taxable),0) as taxable,COALESCE(SUM(sale_return_total_sgst),0) as sgst,COALESCE(SUM(sale_return_total_cgst),0) as cgst,COALESCE(SUM(sale_return_total_igst),0) as igst,COALESCE(SUM(sale_return_total_net_amount),0) as net_amount,NULL as party_data FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.buyer_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date AND party.party_gst_no ='' AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0';
     
     SELECT party.party_name,party.party_gst_no, COALESCE(SUM(sale_return_total_taxable),0) as sale_return_total_taxable,COALESCE(SUM(sale_return_total_sgst),0) as sale_return_total_sgst,COALESCE(SUM(sale_return_total_cgst),0) as sale_return_total_cgst,COALESCE(SUM(sale_return_total_igst),0) as sale_return_total_igst,COALESCE(SUM(sale_return_total_net_amount),0) as sale_return_total_net_amount,NULL as party_data FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.buyer_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date AND party.party_gst_no ='' AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' GROUP BY sale_return.buyer_id;
     
     SELECT 'sales debit note' as type, COALESCE(SUM(sale_return_total_taxable),0) as taxable,COALESCE(SUM(sale_return_total_sgst),0) as sgst,COALESCE(SUM(sale_return_total_cgst),0) as cgst,COALESCE(SUM(sale_return_total_igst),0) as igst,COALESCE(SUM(sale_return_total_net_amount),0) as net_amount,NULL as party_data FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.buyer_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date AND party.party_gst_no ='' AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0';
     
     SELECT party.party_name,party.party_gst_no, COALESCE(SUM(sale_return_total_taxable),0) as sale_return_total_taxable,COALESCE(SUM(sale_return_total_sgst),0) as sale_return_total_sgst,COALESCE(SUM(sale_return_total_cgst),0) as sale_return_total_cgst,COALESCE(SUM(sale_return_total_igst),0) as sale_return_total_igst,COALESCE(SUM(sale_return_total_net_amount),0) as sale_return_total_net_amount,NULL as party_data FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.buyer_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date AND party.party_gst_no ='' AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' GROUP BY sale_return.buyer_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_gstphase2_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_gstphase2_data');

 END;
 
	SELECT 'purchase return' as type, COALESCE(SUM(purchase_return_total_taxable),0) as taxable,COALESCE(SUM(purchase_return_total_sgst),0) as sgst,COALESCE(SUM(purchase_return_total_cgst),0) as cgst,COALESCE(SUM(purchase_return_total_igst),0) as igst,COALESCE(SUM(purchase_return_total_net_amount),0) as net_amount,NULL as party_data FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no !='' AND pur_return.purchase_return_type_id='39' AND pur_return.is_delete_status='0';
    
    SELECT party.party_name,party.party_gst_no, COALESCE(SUM(purchase_return_total_taxable),0) as purchase_return_total_taxable,COALESCE(SUM(purchase_return_total_sgst),0) as purchase_return_total_sgst,COALESCE(SUM(purchase_return_total_cgst),0) as purchase_return_total_cgst,COALESCE(SUM(purchase_return_total_igst),0) as purchase_return_total_igst,COALESCE(SUM(purchase_return_total_net_amount),0) as purchase_return_total_net_amount,NULL as party_data FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no !='' AND pur_return.purchase_return_type_id='39' AND pur_return.is_delete_status='0' GROUP BY pur_return.supplier_id;
   
	SELECT 'purchase credit note' as type, COALESCE(SUM(purchase_return_total_taxable),0) as taxable,COALESCE(SUM(purchase_return_total_sgst),0) as sgst,COALESCE(SUM(purchase_return_total_cgst),0) as cgst,COALESCE(SUM(purchase_return_total_igst),0) as igst,COALESCE(SUM(purchase_return_total_net_amount),0) as net_amount,NULL as party_data FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no !='' AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0';
    
    SELECT party.party_name,party.party_gst_no, COALESCE(SUM(purchase_return_total_taxable),0) as purchase_return_total_taxable,COALESCE(SUM(purchase_return_total_sgst),0) as purchase_return_total_sgst,COALESCE(SUM(purchase_return_total_cgst),0) as purchase_return_total_cgst,COALESCE(SUM(purchase_return_total_igst),0) as purchase_return_total_igst,COALESCE(SUM(purchase_return_total_net_amount),0) as purchase_return_total_net_amount,NULL as party_data FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no !='' AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' GROUP BY pur_return.supplier_id;   

   SELECT 'purchase debit note' as type, COALESCE(SUM(purchase_return_total_taxable),0) as taxable,COALESCE(SUM(purchase_return_total_sgst),0) as sgst,COALESCE(SUM(purchase_return_total_cgst),0) as cgst,COALESCE(SUM(purchase_return_total_igst),0) as igst,COALESCE(SUM(purchase_return_total_net_amount),0) as net_amount,NULL as party_data FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no !='' AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0';
    
    SELECT party.party_name,party.party_gst_no, COALESCE(SUM(purchase_return_total_taxable),0) as purchase_return_total_taxable,COALESCE(SUM(purchase_return_total_sgst),0) as purchase_return_total_sgst,COALESCE(SUM(purchase_return_total_cgst),0) as purchase_return_total_cgst,COALESCE(SUM(purchase_return_total_igst),0) as purchase_return_total_igst,COALESCE(SUM(purchase_return_total_net_amount),0) as purchase_return_total_net_amount,NULL as party_data FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no !='' AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' GROUP BY pur_return.supplier_id;
    
   SELECT 'purchase return' as type, COALESCE(SUM(purchase_return_total_taxable),0) as taxable,COALESCE(SUM(purchase_return_total_sgst),0) as sgst,COALESCE(SUM(purchase_return_total_cgst),0) as cgst,COALESCE(SUM(purchase_return_total_igst),0) as igst,COALESCE(SUM(purchase_return_total_net_amount),0) as net_amount,NULL as party_data FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no ='' AND pur_return.purchase_return_type_id='39' AND pur_return.is_delete_status='0';
    
    SELECT party.party_name,party.party_gst_no, COALESCE(SUM(purchase_return_total_taxable),0) as purchase_return_total_taxable,COALESCE(SUM(purchase_return_total_sgst),0) as purchase_return_total_sgst,COALESCE(SUM(purchase_return_total_cgst),0) as purchase_return_total_cgst,COALESCE(SUM(purchase_return_total_igst),0) as purchase_return_total_igst,COALESCE(SUM(purchase_return_total_net_amount),0) as purchase_return_total_net_amount,NULL as party_data FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no ='' AND pur_return.purchase_return_type_id='39' AND pur_return.is_delete_status='0' GROUP BY pur_return.supplier_id;
   
	SELECT 'purchase credit note' as type, COALESCE(SUM(purchase_return_total_taxable),0) as taxable,COALESCE(SUM(purchase_return_total_sgst),0) as sgst,COALESCE(SUM(purchase_return_total_cgst),0) as cgst,COALESCE(SUM(purchase_return_total_igst),0) as igst,COALESCE(SUM(purchase_return_total_net_amount),0) as net_amount,NULL as party_data FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no ='' AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0';
    
    SELECT party.party_name,party.party_gst_no, COALESCE(SUM(purchase_return_total_taxable),0) as purchase_return_total_taxable,COALESCE(SUM(purchase_return_total_sgst),0) as purchase_return_total_sgst,COALESCE(SUM(purchase_return_total_cgst),0) as purchase_return_total_cgst,COALESCE(SUM(purchase_return_total_igst),0) as purchase_return_total_igst,COALESCE(SUM(purchase_return_total_net_amount),0) as purchase_return_total_net_amount,NULL as party_data FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no ='' AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' GROUP BY pur_return.supplier_id;   

   SELECT 'purchase debit note' as type, COALESCE(SUM(purchase_return_total_taxable),0) as taxable,COALESCE(SUM(purchase_return_total_sgst),0) as sgst,COALESCE(SUM(purchase_return_total_cgst),0) as cgst,COALESCE(SUM(purchase_return_total_igst),0) as igst,COALESCE(SUM(purchase_return_total_net_amount),0) as net_amount,NULL as party_data FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no ='' AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0';
    
    SELECT party.party_name,party.party_gst_no, COALESCE(SUM(purchase_return_total_taxable),0) as purchase_return_total_taxable,COALESCE(SUM(purchase_return_total_sgst),0) as purchase_return_total_sgst,COALESCE(SUM(purchase_return_total_cgst),0) as purchase_return_total_cgst,COALESCE(SUM(purchase_return_total_igst),0) as purchase_return_total_igst,COALESCE(SUM(purchase_return_total_net_amount),0) as purchase_return_total_net_amount,NULL as party_data FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no ='' AND pur_return.purchase_return_type_id='96' AND pur_return.is_delete_status='0' GROUP BY pur_return.supplier_id;
   
   
   SELECT 'B2B' as type, COALESCE(SUM(pur_tax.purchase_tax_invoice_total_taxable),0) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_taxable_amount),0) FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND mill.is_delete_status='0') + (SELECT COALESCE(SUM(jou_purchase.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as jou_purchase LEFT JOIN erp_party as party ON party.id=jou_purchase.supplier_id WHERE jou_purchase.user_id=login_user_id AND jou_purchase.company_id=login_company_id AND jou_purchase.branch_id=login_branch_id AND jou_purchase.year_id=login_year_id AND DATE(jou_purchase.journal_purchase_entry_date)>=from_date AND DATE(jou_purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no !='' AND jou_purchase.is_delete_status='0') + (SELECT COALESCE(SUM(jober.jober_invoice_total_taxable),0) FROM erp_jober_invoice as jober LEFT JOIN erp_party as party ON party.id=jober.jober_id WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND jober.is_delete_status='0') as taxable,COALESCE(SUM(pur_tax.purchase_tax_invoice_total_sgst),0) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_sgst),0) FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND mill.is_delete_status='0') + (SELECT COALESCE(SUM(jou_purchase.journal_purchase_child_total_sgst),0) FROM erp_journal_purchase as jou_purchase LEFT JOIN erp_party as party ON party.id=jou_purchase.supplier_id WHERE jou_purchase.user_id=login_user_id AND jou_purchase.company_id=login_company_id AND jou_purchase.branch_id=login_branch_id AND jou_purchase.year_id=login_year_id AND DATE(jou_purchase.journal_purchase_entry_date)>=from_date AND DATE(jou_purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no !='' AND jou_purchase.is_delete_status='0') + (SELECT COALESCE(SUM(jober.jober_invoice_total_sgst),0) FROM erp_jober_invoice as jober LEFT JOIN erp_party as party ON party.id=jober.jober_id WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND jober.is_delete_status='0') as sgst,COALESCE(SUM(pur_tax.purchase_tax_invoice_total_cgst),0) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_cgst),0) FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND mill.is_delete_status='0') + (SELECT COALESCE(SUM(jou_purchase.journal_purchase_child_total_cgst),0) FROM erp_journal_purchase as jou_purchase LEFT JOIN erp_party as party ON party.id=jou_purchase.supplier_id WHERE jou_purchase.user_id=login_user_id AND jou_purchase.company_id=login_company_id AND jou_purchase.branch_id=login_branch_id AND jou_purchase.year_id=login_year_id AND DATE(jou_purchase.journal_purchase_entry_date)>=from_date AND DATE(jou_purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no !='' AND jou_purchase.is_delete_status='0') + (SELECT COALESCE(SUM(jober.jober_invoice_total_cgst),0) FROM erp_jober_invoice as jober LEFT JOIN erp_party as party ON party.id=jober.jober_id WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND jober.is_delete_status='0') as cgst,COALESCE(SUM(pur_tax.purchase_tax_invoice_total_igst),0) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_igst),0) FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND mill.is_delete_status='0') + (SELECT COALESCE(SUM(jou_purchase.journal_purchase_child_total_igst),0) FROM erp_journal_purchase as jou_purchase LEFT JOIN erp_party as party ON party.id=jou_purchase.supplier_id WHERE jou_purchase.user_id=login_user_id AND jou_purchase.company_id=login_company_id AND jou_purchase.branch_id=login_branch_id AND jou_purchase.year_id=login_year_id AND DATE(jou_purchase.journal_purchase_entry_date)>=from_date AND DATE(jou_purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no !='' AND jou_purchase.is_delete_status='0') + (SELECT COALESCE(SUM(jober.jober_invoice_total_igst),0) FROM erp_jober_invoice as jober LEFT JOIN erp_party as party ON party.id=jober.jober_id WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND jober.is_delete_status='0') as igst,COALESCE(SUM(pur_tax.purchase_tax_invoice_net_amount),0) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_net_amount),0) FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND mill.is_delete_status='0') + (SELECT COALESCE(SUM(jou_purchase.journal_purchase_child_net_total),0) FROM erp_journal_purchase as jou_purchase LEFT JOIN erp_party as party ON party.id=jou_purchase.supplier_id WHERE jou_purchase.user_id=login_user_id AND jou_purchase.company_id=login_company_id AND jou_purchase.branch_id=login_branch_id AND jou_purchase.year_id=login_year_id AND DATE(jou_purchase.journal_purchase_entry_date)>=from_date AND DATE(jou_purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no !='' AND jou_purchase.is_delete_status='0') + (SELECT COALESCE(SUM(jober.jober_invoice_total_net_amount),0) FROM erp_jober_invoice as jober LEFT JOIN erp_party as party ON party.id=jober.jober_id WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND jober.is_delete_status='0') as net_amount,NULL as party_data FROM erp_purchase_tax_invoice as pur_tax LEFT JOIN erp_party as party ON party.id=pur_tax.supplier_id WHERE pur_tax.user_id=login_user_id AND pur_tax.company_id=login_company_id AND pur_tax.branch_id=login_branch_id AND pur_tax.year_id=login_year_id AND DATE(pur_tax.purchase_tax_invoice_entry_date)>=from_date AND DATE(pur_tax.purchase_tax_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND pur_tax.is_delete_status='0';
   
   SELECT party.party_name,party.party_gst_no, COALESCE(SUM(pur_tax.purchase_tax_invoice_total_taxable),0) as purchase_tax_invoice_total_taxable,COALESCE(SUM(pur_tax.purchase_tax_invoice_total_sgst),0) as purchase_tax_invoice_total_sgst,COALESCE(SUM(pur_tax.purchase_tax_invoice_total_cgst),0) as purchase_tax_invoice_total_cgst,COALESCE(SUM(pur_tax.purchase_tax_invoice_total_igst),0) as purchase_tax_invoice_total_igst,COALESCE(SUM(pur_tax.purchase_tax_invoice_net_amount),0) as purchase_tax_invoice_net_amount,'purchase' as type FROM erp_purchase_tax_invoice as pur_tax LEFT JOIN erp_party as party ON party.id=pur_tax.supplier_id WHERE pur_tax.user_id=login_user_id AND pur_tax.company_id=login_company_id AND pur_tax.branch_id=login_branch_id AND pur_tax.year_id=login_year_id AND DATE(pur_tax.purchase_tax_invoice_entry_date)>=from_date AND DATE(pur_tax.purchase_tax_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND pur_tax.is_delete_status='0' GROUP BY pur_tax.supplier_id UNION ALL SELECT party.party_name,party.party_gst_no, COALESCE(SUM(mill.mill_tax_invoice_total_taxable_amount),0) as mill_tax_invoice_total_taxable_amount,COALESCE(SUM(mill.mill_tax_invoice_total_sgst),0) as mill_tax_invoice_total_sgst,COALESCE(SUM(mill.mill_tax_invoice_total_cgst),0) as mill_tax_invoice_total_cgst,COALESCE(SUM(mill.mill_tax_invoice_total_igst),0) as mill_tax_invoice_total_igst,COALESCE(SUM(mill.mill_tax_invoice_total_net_amount),0) as mill_tax_invoice_total_net_amount,'mill' as type FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND mill.is_delete_status='0' GROUP BY mill.mill_id UNION ALL SELECT party.party_name,party.party_gst_no, COALESCE(SUM(purchase.journal_purchase_child_total_taxable),0) as purchase_tax_invoice_total_taxable,COALESCE(SUM(purchase.journal_purchase_child_total_sgst),0) as purchase_tax_invoice_total_sgst,COALESCE(SUM(purchase.journal_purchase_child_total_cgst),0) as purchase_tax_invoice_total_cgst,COALESCE(SUM(purchase.journal_purchase_child_total_igst),0) as purchase_tax_invoice_total_igst,COALESCE(SUM(purchase.journal_purchase_child_net_total),0) as net_amount,'journal purchase' as type FROM erp_journal_purchase as purchase LEFT JOIN erp_party as party ON party.id=purchase.supplier_id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no !='' AND purchase.is_delete_status='0' GROUP BY purchase.supplier_id  UNION ALL SELECT party.party_name,party.party_gst_no, COALESCE(SUM(jober.jober_invoice_total_taxable),0) as jober_invoice_total_taxable,COALESCE(SUM(jober.jober_invoice_total_sgst),0) as jober_invoice_total_sgst,COALESCE(SUM(jober.jober_invoice_total_cgst),0) as jober_invoice_total_cgst,COALESCE(SUM(jober.jober_invoice_total_igst),0) as jober_invoice_total_igst,COALESCE(SUM(jober.jober_invoice_total_net_amount),0) as jober_invoice_total_net_amount,'jober' as type FROM erp_jober_invoice as jober LEFT JOIN erp_party as party ON party.id=jober.jober_id WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND jober.is_delete_status='0' GROUP BY jober.jober_id;
   
   
	 SELECT 'B2BUR' as type, COALESCE(SUM(pur_tax.purchase_tax_invoice_total_taxable),0) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_taxable_amount),0) FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND mill.is_delete_status='0') + (SELECT COALESCE(SUM(jou_purchase.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as jou_purchase LEFT JOIN erp_party as party ON party.id=jou_purchase.supplier_id WHERE jou_purchase.user_id=login_user_id AND jou_purchase.company_id=login_company_id AND jou_purchase.branch_id=login_branch_id AND jou_purchase.year_id=login_year_id AND DATE(jou_purchase.journal_purchase_entry_date)>=from_date AND DATE(jou_purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no ='' AND jou_purchase.is_delete_status='0') + (SELECT COALESCE(SUM(jober.jober_invoice_total_taxable),0) FROM erp_jober_invoice as jober LEFT JOIN erp_party as party ON party.id=jober.jober_id WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND jober.is_delete_status='0') as taxable,COALESCE(SUM(pur_tax.purchase_tax_invoice_total_sgst),0) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_sgst),0) FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND mill.is_delete_status='0') + (SELECT COALESCE(SUM(jou_purchase.journal_purchase_child_total_sgst),0) FROM erp_journal_purchase as jou_purchase LEFT JOIN erp_party as party ON party.id=jou_purchase.supplier_id WHERE jou_purchase.user_id=login_user_id AND jou_purchase.company_id=login_company_id AND jou_purchase.branch_id=login_branch_id AND jou_purchase.year_id=login_year_id AND DATE(jou_purchase.journal_purchase_entry_date)>=from_date AND DATE(jou_purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no ='' AND jou_purchase.is_delete_status='0') + (SELECT COALESCE(SUM(jober.jober_invoice_total_sgst),0) FROM erp_jober_invoice as jober LEFT JOIN erp_party as party ON party.id=jober.jober_id WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND jober.is_delete_status='0') as sgst,COALESCE(SUM(pur_tax.purchase_tax_invoice_total_cgst),0) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_cgst),0) FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND mill.is_delete_status='0') + (SELECT COALESCE(SUM(jou_purchase.journal_purchase_child_total_cgst),0) FROM erp_journal_purchase as jou_purchase LEFT JOIN erp_party as party ON party.id=jou_purchase.supplier_id WHERE jou_purchase.user_id=login_user_id AND jou_purchase.company_id=login_company_id AND jou_purchase.branch_id=login_branch_id AND jou_purchase.year_id=login_year_id AND DATE(jou_purchase.journal_purchase_entry_date)>=from_date AND DATE(jou_purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no ='' AND jou_purchase.is_delete_status='0') + (SELECT COALESCE(SUM(jober.jober_invoice_total_cgst),0) FROM erp_jober_invoice as jober LEFT JOIN erp_party as party ON party.id=jober.jober_id WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND jober.is_delete_status='0') as cgst,COALESCE(SUM(pur_tax.purchase_tax_invoice_total_igst),0) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_igst),0) FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND mill.is_delete_status='0') + (SELECT COALESCE(SUM(jou_purchase.journal_purchase_child_total_igst),0) FROM erp_journal_purchase as jou_purchase LEFT JOIN erp_party as party ON party.id=jou_purchase.supplier_id WHERE jou_purchase.user_id=login_user_id AND jou_purchase.company_id=login_company_id AND jou_purchase.branch_id=login_branch_id AND jou_purchase.year_id=login_year_id AND DATE(jou_purchase.journal_purchase_entry_date)>=from_date AND DATE(jou_purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no ='' AND jou_purchase.is_delete_status='0') + (SELECT COALESCE(SUM(jober.jober_invoice_total_igst),0) FROM erp_jober_invoice as jober LEFT JOIN erp_party as party ON party.id=jober.jober_id WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND jober.is_delete_status='0') as igst,COALESCE(SUM(pur_tax.purchase_tax_invoice_net_amount),0) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_net_amount),0) FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND mill.is_delete_status='0') + (SELECT COALESCE(SUM(jou_purchase.journal_purchase_child_net_total),0) FROM erp_journal_purchase as jou_purchase LEFT JOIN erp_party as party ON party.id=jou_purchase.supplier_id WHERE jou_purchase.user_id=login_user_id AND jou_purchase.company_id=login_company_id AND jou_purchase.branch_id=login_branch_id AND jou_purchase.year_id=login_year_id AND DATE(jou_purchase.journal_purchase_entry_date)>=from_date AND DATE(jou_purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no ='' AND jou_purchase.is_delete_status='0') + (SELECT COALESCE(SUM(jober.jober_invoice_total_net_amount),0) FROM erp_jober_invoice as jober LEFT JOIN erp_party as party ON party.id=jober.jober_id WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND jober.is_delete_status='0') as net_amount,NULL as party_data FROM erp_purchase_tax_invoice as pur_tax LEFT JOIN erp_party as party ON party.id=pur_tax.supplier_id WHERE pur_tax.user_id=login_user_id AND pur_tax.company_id=login_company_id AND pur_tax.branch_id=login_branch_id AND pur_tax.year_id=login_year_id AND DATE(pur_tax.purchase_tax_invoice_entry_date)>=from_date AND DATE(pur_tax.purchase_tax_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND pur_tax.is_delete_status='0';
    
    
    SELECT party.party_name,party.party_gst_no, COALESCE(SUM(pur_tax.purchase_tax_invoice_total_taxable),0) as purchase_tax_invoice_total_taxable,COALESCE(SUM(pur_tax.purchase_tax_invoice_total_sgst),0) as purchase_tax_invoice_total_sgst,COALESCE(SUM(pur_tax.purchase_tax_invoice_total_cgst),0) as purchase_tax_invoice_total_cgst,COALESCE(SUM(pur_tax.purchase_tax_invoice_total_igst),0) as purchase_tax_invoice_total_igst,COALESCE(SUM(pur_tax.purchase_tax_invoice_net_amount),0) as purchase_tax_invoice_net_amount,'purchase' as type FROM erp_purchase_tax_invoice as pur_tax LEFT JOIN erp_party as party ON party.id=pur_tax.supplier_id WHERE pur_tax.user_id=login_user_id AND pur_tax.company_id=login_company_id AND pur_tax.branch_id=login_branch_id AND pur_tax.year_id=login_year_id AND DATE(pur_tax.purchase_tax_invoice_entry_date)>=from_date AND DATE(pur_tax.purchase_tax_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND pur_tax.is_delete_status='0' GROUP BY pur_tax.supplier_id UNION ALL SELECT party.party_name,party.party_gst_no, COALESCE(SUM(mill.mill_tax_invoice_total_taxable_amount),0) as mill_tax_invoice_total_taxable_amount,COALESCE(SUM(mill.mill_tax_invoice_total_sgst),0) as mill_tax_invoice_total_sgst,COALESCE(SUM(mill.mill_tax_invoice_total_cgst),0) as mill_tax_invoice_total_cgst,COALESCE(SUM(mill.mill_tax_invoice_total_igst),0) as mill_tax_invoice_total_igst,COALESCE(SUM(mill.mill_tax_invoice_total_net_amount),0) as mill_tax_invoice_total_net_amount,'mill' as type FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND mill.is_delete_status='0' GROUP BY mill.mill_id UNION ALL SELECT party.party_name,party.party_gst_no, COALESCE(SUM(purchase.journal_purchase_child_total_taxable),0) as purchase_tax_invoice_total_taxable,COALESCE(SUM(purchase.journal_purchase_child_total_sgst),0) as purchase_tax_invoice_total_sgst,COALESCE(SUM(purchase.journal_purchase_child_total_cgst),0) as purchase_tax_invoice_total_cgst,COALESCE(SUM(purchase.journal_purchase_child_total_igst),0) as purchase_tax_invoice_total_igst,COALESCE(SUM(purchase.journal_purchase_child_net_total),0) as net_amount,'journal purchase' as type FROM erp_journal_purchase as purchase LEFT JOIN erp_party as party ON party.id=purchase.supplier_id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no ='' AND purchase.is_delete_status='0' GROUP BY purchase.supplier_id  UNION ALL SELECT party.party_name,party.party_gst_no, COALESCE(SUM(jober.jober_invoice_total_taxable),0) as jober_invoice_total_taxable,COALESCE(SUM(jober.jober_invoice_total_sgst),0) as jober_invoice_total_sgst,COALESCE(SUM(jober.jober_invoice_total_cgst),0) as jober_invoice_total_cgst,COALESCE(SUM(jober.jober_invoice_total_igst),0) as jober_invoice_total_igst,COALESCE(SUM(jober.jober_invoice_total_net_amount),0) as jober_invoice_total_net_amount,'jober' as type FROM erp_jober_invoice as jober LEFT JOIN erp_party as party ON party.id=jober.jober_id WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND jober.is_delete_status='0' GROUP BY jober.jober_id;
   
   
   
	SELECT 'IMP_G' as type, '0' as taxable,'0' as sgst,'0' as cgst,'0' as igst,'0' as net_amount,NULL as party_data;
    
   	SELECT 'IMP_S' as type, '0' as taxable,'0' as sgst,'0' as cgst,'0' as igst,'0' as net_amount,NULL as party_data;
   
   	SELECT 'EXEMP' as type, '0' as taxable,'0' as sgst,'0' as cgst,'0' as igst,'0' as net_amount,NULL as party_data;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_gstr2_help_report_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_gstr2_help_report_data');

 END;
 	
    SELECT party.party_name,party.party_gst_no,SUM(purchase.purchase_tax_invoice_total_taxable) as total_taxable,SUM(purchase.purchase_tax_invoice_total_sgst + purchase.purchase_tax_invoice_total_cgst + purchase.purchase_tax_invoice_total_igst) as total_tax,'0' as accounts_value,'0' as gst FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as purchase ON purchase.supplier_id=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' AND purchase.user_id=login_user_id AND purchase.branch_id=login_branch_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.is_delete_status='0' AND DATE(purchase.purchase_tax_invoice_entry_date) >=from_date AND DATE(purchase.purchase_tax_invoice_entry_date) <=to_date UNION ALL SELECT party.party_name,party.party_gst_no,SUM(jober_par.jober_invoice_total_taxable) as total_taxable,SUM(jober_par.jober_invoice_total_sgst + jober_par.jober_invoice_total_cgst + jober_par.jober_invoice_total_igst) as total_tax,'0' as accounts_value,'0' as gst FROM erp_party as party LEFT JOIN erp_jober_invoice as jober_par ON jober_par.jober_id=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND jober_par.user_id=login_user_id AND jober_par.branch_id=login_branch_id AND jober_par.company_id=login_company_id AND jober_par.year_id=login_year_id AND jober_par.is_delete_status='0' AND DATE(jober_par.jober_invoice_entry_date) >=from_date AND DATE(jober_par.jober_invoice_entry_date) <=to_date UNION ALL SELECT party.party_name,party.party_gst_no,SUM(mill.mill_tax_invoice_total_taxable_amount) as total_taxable,SUM(mill.mill_tax_invoice_total_sgst + mill.mill_tax_invoice_total_cgst + mill.mill_tax_invoice_total_igst) as total_tax,'0' as accounts_value,'0' as gst FROM erp_party as party LEFT JOIN erp_mill_tax_invoice as mill ON mill.mill_id=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND mill.user_id=login_user_id AND mill.branch_id=login_branch_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date) >=from_date AND DATE(mill.mill_tax_invoice_entry_date) <=to_date UNION ALL SELECT party.party_name,party.party_gst_no,SUM(sale.sale_tax_invoice_total_taxable) as total_taxable,SUM(sale.sale_tax_invoice_total_sgst + sale.sale_tax_invoice_total_cgst + sale.sale_tax_invoice_total_igst) as total_tax,'0' as accounts_value,'0' as gst FROM erp_party as party LEFT JOIN erp_sale_tax_invoice as sale ON sale.buyer_id=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND sale.user_id=login_user_id AND sale.branch_id=login_branch_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date) >=from_date AND DATE(sale.sale_tax_invoice_entry_date) <=to_date; 
 
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_gstr2_report_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `gst_type` VARCHAR(100), IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_gstr2_report_data');

 END;
 
 IF gst_type = 'b2b' THEN
   SELECT party.party_name,party.party_gst_no,pur_tax.purchase_tax_invoice_no,pur_tax.purchase_tax_invoice_date,pur_tax.purchase_tax_invoice_net_amount,CONCAT(state.global_name,'-',state.global_code) as state_name,'N' as reverse_charge,'regular' as invoice_type,'5' as rate,pur_tax.purchase_tax_invoice_total_taxable,pur_tax.purchase_tax_invoice_total_sgst,pur_tax.purchase_tax_invoice_total_cgst,pur_tax.purchase_tax_invoice_total_igst,'purchase' as type FROM erp_purchase_tax_invoice as pur_tax LEFT JOIN erp_party as party ON party.id=pur_tax.supplier_id LEFT JOIN erp_global as state ON state.id=party.state_id WHERE pur_tax.user_id=login_user_id AND pur_tax.company_id=login_company_id AND pur_tax.branch_id=login_branch_id AND pur_tax.year_id=login_year_id AND DATE(pur_tax.purchase_tax_invoice_entry_date)>=from_date AND DATE(pur_tax.purchase_tax_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND pur_tax.is_delete_status='0' GROUP BY pur_tax.supplier_id UNION ALL SELECT party.party_name,party.party_gst_no,mill.mill_tax_invoice_no,mill.mill_tax_invoice_date,mill.mill_tax_invoice_total_net_amount,CONCAT(state.global_name,'-',state.global_code) as state_name,'N' as reverse_charge,'regular' as invoice_type,'5' as rate,mill.mill_tax_invoice_total_taxable_amount,mill.mill_tax_invoice_total_sgst,mill.mill_tax_invoice_total_cgst,mill.mill_tax_invoice_total_igst,'mill' as type FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id LEFT JOIN erp_global as state ON state.id=party.state_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND mill.is_delete_status='0' GROUP BY mill.mill_id UNION ALL SELECT party.party_name,party.party_gst_no,tax_par.jober_invoice_no,tax_par.jober_invoice_date,tax_par.jober_invoice_total_net_amount,CONCAT(state.global_name,'-',state.global_code) as state_name,'N' as reverse_charge,'regular' as invoice_type,'5' as rate,tax_par.jober_invoice_total_taxable,tax_par.jober_invoice_total_sgst,tax_par.jober_invoice_total_cgst,tax_par.jober_invoice_total_igst,'jober invoice' as type FROM erp_jober_invoice as tax_par LEFT JOIN erp_jober_invoice_child as child ON child.jober_invoice_id=tax_par.id LEFT JOIN erp_party as party ON party.id=tax_par.jober_id LEFT JOIN erp_global as state ON state.id=party.state_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND DATE(tax_par.jober_invoice_entry_date)>=from_date AND DATE(tax_par.jober_invoice_entry_date)<=to_date AND party.party_gst_no !='' AND tax_par.is_delete_status='0' GROUP BY tax_par.jober_id UNION ALL SELECT party.party_name,party.party_gst_no,purchase.journal_purchase_invoice_no,purchase.journal_purchase_invoice_date,purchase.journal_purchase_child_net_total,CONCAT(state.global_name,'-',state.global_code) as state_name,'N' as reverse_charge,'regular' as invoice_type,'5' as rate,purchase.journal_purchase_child_total_taxable,purchase.journal_purchase_child_total_sgst,purchase.journal_purchase_child_total_cgst,purchase.journal_purchase_child_total_igst,'journal purchase' as type FROM erp_journal_purchase as purchase LEFT JOIN erp_party as party ON party.id=purchase.supplier_id LEFT JOIN erp_global as state ON state.id=party.state_id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no !='' AND purchase.is_delete_status='0' GROUP BY purchase.supplier_id;
   ELSEIF gst_type = 'b2bur' THEN
    SELECT party.party_name,party.party_gst_no,pur_tax.purchase_tax_invoice_no,pur_tax.purchase_tax_invoice_date,pur_tax.purchase_tax_invoice_net_amount,CONCAT(state.global_name,'-',state.global_code) as state_name,'N' as reverse_charge,'regular' as invoice_type,'5' as rate,pur_tax.purchase_tax_invoice_total_taxable,pur_tax.purchase_tax_invoice_total_sgst,pur_tax.purchase_tax_invoice_total_cgst,pur_tax.purchase_tax_invoice_total_igst,'purchase' as type FROM erp_purchase_tax_invoice as pur_tax LEFT JOIN erp_party as party ON party.id=pur_tax.supplier_id LEFT JOIN erp_global as state ON state.id=party.state_id WHERE pur_tax.user_id=login_user_id AND pur_tax.company_id=login_company_id AND pur_tax.branch_id=login_branch_id AND pur_tax.year_id=login_year_id AND DATE(pur_tax.purchase_tax_invoice_entry_date)>=from_date AND DATE(pur_tax.purchase_tax_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND pur_tax.is_delete_status='0' GROUP BY pur_tax.supplier_id UNION ALL SELECT party.party_name,party.party_gst_no,mill.mill_tax_invoice_no,mill.mill_tax_invoice_date,mill.mill_tax_invoice_total_net_amount,CONCAT(state.global_name,'-',state.global_code) as state_name,'N' as reverse_charge,'regular' as invoice_type,'5' as rate,mill.mill_tax_invoice_total_taxable_amount,mill.mill_tax_invoice_total_sgst,mill.mill_tax_invoice_total_cgst,mill.mill_tax_invoice_total_igst,'mill' as type FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id LEFT JOIN erp_global as state ON state.id=party.state_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND mill.is_delete_status='0' GROUP BY mill.mill_id UNION ALL SELECT party.party_name,party.party_gst_no,tax_par.jober_invoice_no,tax_par.jober_invoice_date,tax_par.jober_invoice_total_net_amount,CONCAT(state.global_name,'-',state.global_code) as state_name,'N' as reverse_charge,'regular' as invoice_type,'5' as rate,tax_par.jober_invoice_total_taxable,tax_par.jober_invoice_total_sgst,tax_par.jober_invoice_total_cgst,tax_par.jober_invoice_total_igst,'jober invoice' as type FROM erp_jober_invoice as tax_par LEFT JOIN erp_jober_invoice_child as child ON child.jober_invoice_id=tax_par.id LEFT JOIN erp_party as party ON party.id=tax_par.jober_id LEFT JOIN erp_global as state ON state.id=party.state_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND DATE(tax_par.jober_invoice_entry_date)>=from_date AND DATE(tax_par.jober_invoice_entry_date)<=to_date AND party.party_gst_no ='' AND tax_par.is_delete_status='0' GROUP BY tax_par.jober_id UNION ALL SELECT party.party_name,party.party_gst_no,purchase.journal_purchase_invoice_no,purchase.journal_purchase_invoice_date,purchase.journal_purchase_child_net_total,CONCAT(state.global_name,'-',state.global_code) as state_name,'N' as reverse_charge,'regular' as invoice_type,'5' as rate,purchase.journal_purchase_child_total_taxable,purchase.journal_purchase_child_total_sgst,purchase.journal_purchase_child_total_cgst,purchase.journal_purchase_child_total_igst,'journal purchase' as type FROM erp_journal_purchase as purchase LEFT JOIN erp_party as party ON party.id=purchase.supplier_id LEFT JOIN erp_global as state ON state.id=party.state_id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date AND party.party_gst_no ='' AND purchase.is_delete_status='0' GROUP BY purchase.supplier_id;
   ELSEIF gst_type = 'cdnr' THEN
   SELECT party.party_name,party.party_gst_no,pur_return.purchase_return_note_no,pur_return.purchase_return_date,pur_return.purchase_return_document_no,pur_return.purchase_return_document_date,'N' as pre_gst,IF(purchase_return_type_id='95','C','D') as document_type,head.account_head_short_name as type,CONCAT(state.global_name,'-',state.global_code) as state_name,pur_return.purchase_return_total_net_amount,'5' as rate,pur_return.purchase_return_total_taxable,pur_return.purchase_return_total_sgst,pur_return.purchase_return_total_cgst,pur_return.purchase_return_total_igst FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id LEFT JOIN erp_account_head as head ON head.id=pur_return.purchase_return_type_id LEFT JOIN erp_global as state on state.id=party.state_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no !='' AND pur_return.is_delete_status='0';
   ELSEIF gst_type = 'cdnur' THEN
    SELECT party.party_name,party.party_gst_no,pur_return.purchase_return_note_no,pur_return.purchase_return_date,pur_return.purchase_return_document_no,pur_return.purchase_return_document_date,'N' as pre_gst,IF(purchase_return_type_id='95','C','D') as document_type,head.account_head_short_name as type,CONCAT(state.global_name,'-',state.global_code) as state_name,pur_return.purchase_return_total_net_amount,'5' as rate,pur_return.purchase_return_total_taxable,pur_return.purchase_return_total_sgst,pur_return.purchase_return_total_cgst,pur_return.purchase_return_total_igst FROM erp_purchase_return as pur_return LEFT JOIN erp_party as party ON party.id=pur_return.supplier_id LEFT JOIN erp_account_head as head ON head.id=pur_return.purchase_return_type_id LEFT JOIN erp_global as state on state.id=party.state_id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.branch_id=login_branch_id AND pur_return.year_id=login_year_id AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date AND party.party_gst_no ='' AND pur_return.is_delete_status='0';
   ELSEIF gst_type = 'hsn' THEN
   SELECT purchase_child.journal_purchase_child_hsn as hsn,party.party_name as description,null as rate_per,SUM(purchase_child.journal_purchase_child_qty) as total_qty,SUM(purchase_child.journal_purchase_child_amount) as total_value,SUM(purchase_child.journal_purchase_child_taxable) as total_taxable,gst.gst_percentage,SUM(purchase_child.journal_purchase_child_sgst) as total_sgst,SUM(purchase_child.journal_purchase_child_cgst) as total_cgst,SUM(purchase_child.journal_purchase_child_igst) as total_igst,'0' as purchase_return_type_id,'journal purchase' as type FROM erp_journal_purchase as purchase LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase.id LEFT JOIN erp_gst as gst ON gst.id=purchase_child.gst_id LEFT JOIN erp_party as party ON party.id=purchase.supplier_id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date) >=from_date AND DATE(purchase.journal_purchase_entry_date) <=to_date GROUP BY purchase_child.supplier_id UNION ALL SELECT material.material_hsn,material.material_name,measurement.unit_measurement_name,SUM(tax_child.purchase_tax_invoice_child_qty_sent) as total_qty,SUM(tax_child.purchase_tax_invoice_child_total) as total_value,SUM(tax_child.purchase_tax_invoice_child_taxable) as total_taxable,gst.gst_percentage,SUM(tax_child.purchase_tax_invoice_child_sgst) as total_sgst,SUM(tax_child.purchase_tax_invoice_child_cgst) as total_cgst,SUM(tax_child.purchase_tax_invoice_child_igst) as total_igst,'0' as purchase_return_type_id, 'purchase' as type FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.purchase_tax_invoice_id=tax_par.id LEFT JOIN erp_quality as quality ON quality.id=tax_child.quality_id LEFT JOIN erp_party as party ON party.id=tax_par.supplier_id LEFT JOIN erp_material as material ON material.id=quality.material_id LEFT JOIN erp_unit_measurement as measurement ON measurement.id=tax_child.purchase_tax_invoice_child_rate_per LEFT JOIN erp_gst as gst ON gst.id=material.gst_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date) >=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date) <=to_date GROUP BY material.id UNION ALL SELECT material.material_hsn,IF(return_par.purchase_return_type_id = '39',party.party_name,material.material_name) as description,SUM(return_child.purchase_return_child_qty_sent) as total_qty,measurement.unit_measurement_name,SUM(return_child.purchase_return_child_amount) as total_value,SUM(return_child.purchase_return_child_taxable) as total_taxable,gst.gst_percentage,SUM(return_child.purchase_return_child_sgst) as total_sgst,SUM(return_child.purchase_return_child_cgst) as total_cgst,SUM(return_child.purchase_return_child_igst) as total_igst,return_par.purchase_return_type_id, null as type FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id LEFT JOIN erp_quality as quality ON quality.id=return_child.quality_id LEFT JOIN erp_party as party ON party.id=return_child.party_id LEFT JOIN erp_material as material ON material.id=quality.material_id LEFT JOIN erp_unit_measurement as measurement ON measurement.id=return_child.purchase_return_child_rate_per LEFT JOIN erp_gst as gst ON gst.id=material.gst_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date) >=from_date AND DATE(return_par.purchase_return_entry_date) <=to_date GROUP BY IF(return_par.purchase_return_type_id = '39',return_child.party_id,material.id) UNION ALL SELECT material.material_hsn,material.material_name,measurement.unit_measurement_name,SUM(tax_child.mill_tax_invoice_child_meter) as total_qty,SUM(tax_child.mill_tax_invoice_child_amount) as total_value,SUM(tax_child.mill_tax_invoice_child_taxable) as total_taxable,gst.gst_percentage,SUM(tax_child.mill_tax_invoice_child_sgst) as total_sgst,SUM(tax_child.mill_tax_invoice_child_cgst) as total_cgst,SUM(tax_child.mill_tax_invoice_child_igst) as total_igst,'0' as purchase_return_type_id, 'mill' as type FROM erp_mill_tax_invoice as tax_par LEFT JOIN erp_mill_tax_invoice_child as tax_child ON tax_child.mill_tax_invoice_id=tax_par.id LEFT JOIN erp_quality as quality ON quality.id=tax_child.quality_id LEFT JOIN erp_material as material ON material.id=quality.material_id LEFT JOIN erp_unit_measurement as measurement ON measurement.id=tax_child.mill_tax_invoice_child_rate_per LEFT JOIN erp_gst as gst ON gst.id=material.gst_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.mill_tax_invoice_entry_date) >=from_date AND DATE(tax_par.mill_tax_invoice_entry_date) <=to_date GROUP BY material.id UNION ALL SELECT material.material_hsn,material.material_name,measurement.unit_measurement_name,SUM(jober_child.jober_invoice_child_meter) as total_qty,SUM(jober_child.jober_invoice_child_amount) as total_value,SUM(jober_child.jober_invoice_child_taxable) as total_taxable,gst.gst_percentage,SUM(jober_child.jober_invoice_child_sgst) as total_sgst,SUM(jober_child.jober_invoice_child_cgst) as total_cgst,SUM(jober_child.jober_invoice_child_igst) as total_igst,'0' as purchase_return_type_id, 'jober' as type FROM erp_jober_invoice as jober_par LEFT JOIN erp_jober_invoice_child as jober_child ON jober_child.jober_invoice_id=jober_par.id LEFT JOIN erp_quality as quality ON quality.id=jober_child.quality_id LEFT JOIN erp_material as material ON material.id=quality.material_id LEFT JOIN erp_unit_measurement as measurement ON measurement.id=jober_child.rate_per_id LEFT JOIN erp_gst as gst ON gst.id=material.gst_id WHERE jober_par.user_id=login_user_id AND jober_par.company_id=login_company_id AND jober_par.year_id=login_year_id AND jober_par.branch_id=login_branch_id AND jober_par.is_delete_status='0' AND DATE(jober_par.jober_invoice_entry_date) >=from_date AND DATE(jober_par.jober_invoice_entry_date) <=to_date GROUP BY material.id;
   END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_gstr3b_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_gstr3b_data');

 END;
   SELECT '(a) Outward taxable supplies (other than zero rated, nil rated and exempted)' as type,(COALESCE(SUM(sale.sale_tax_invoice_total_taxable),0) - (SELECT COALESCE(SUM(return_par.sale_return_total_amount),0) FROM erp_sale_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id !='97' AND return_par.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_amount),0) FROM erp_sale_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id ='97' AND return_par.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date)) as sale_tax_invoice_total_taxable,(COALESCE(SUM(sale.sale_tax_invoice_total_igst),0) - (SELECT COALESCE(SUM(return_par.sale_return_total_igst),0) FROM erp_sale_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id !='97' AND return_par.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_igst),0) FROM erp_sale_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id ='97' AND return_par.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date)) as sale_tax_invoice_total_igst,(COALESCE(SUM(sale.sale_tax_invoice_total_sgst),0) - (SELECT COALESCE(SUM(return_par.sale_return_total_sgst),0) FROM erp_sale_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id !='97' AND return_par.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_sgst),0) FROM erp_sale_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id ='97' AND return_par.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date)) as sale_tax_invoice_total_sgst,(COALESCE(SUM(sale.sale_tax_invoice_total_cgst),0) - (SELECT COALESCE(SUM(return_par.sale_return_total_cgst),0) FROM erp_sale_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id !='97' AND return_par.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_cgst),0) FROM erp_sale_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id ='97' AND return_par.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date)) as sale_tax_invoice_total_cgst,'0' as cess FROM erp_sale_tax_invoice as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.account_head_id='54' AND sale.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date;
   
   SELECT '(b) Outward taxable supplies (zero rated )' as type, '0' as sale_total_taxable,'0' as sale_total_igst,NULL as sale_total_sgst,NULL as sale_total_cgst,'0' as cess;
   SELECT '(c) Other outward supplies (Nil rated, exempted)' as type, '0' as sale_total_taxable,NULL as sale_total_igst,NULL as sale_total_sgst,NULL as sale_total_cgst,NULL as cess;
   SELECT '(d) Inward supplies (liable to reverse charge)' as type, '0' as sale_total_taxable,'0' as sale_total_igst,'0' as sale_total_sgst,'0' as sale_total_cgst,'0' as cess;
   SELECT '(e) Non-GST outward supplies' as type, '0' as sale_total_taxable,NULL as sale_total_igst,NULL as sale_total_sgst,NULL as sale_total_cgst,NULL as cess;
   
   SELECT 'Supplies made to Unregistered Persons' as type, NULL as place_of_supply,'0' as total_taxable_value,'0' as amount_of_integrated_tax;
   SELECT 'Supplies made to Composition Taxable Persons' as type, NULL as place_of_supply,'0' as total_taxable_value,'0' as amount_of_integrated_tax;
   SELECT 'Supplies made to UIN holders' as type, NULL as place_of_supply,'0' as total_taxable_value,'0' as amount_of_integrated_tax;
   
   SELECT '(1) Import of goods' as type,'0' as purchase_tax_invoice_total_igst,NULL as purchase_tax_invoice_total_sgst,NULL as purchase_tax_invoice_total_cgst,'0' as cess;
   SELECT '(2) Import of services' as type,'0' as purchase_tax_invoice_total_igst,NULL as purchase_tax_invoice_total_sgst,NULL as purchase_tax_invoice_total_cgst,'0' as cess;
   SELECT '(3) Inward supplies liable to reverse charge (other than 1 & 2 above)' as type,'0' as purchase_tax_invoice_total_igst,'0' as purchase_tax_invoice_total_sgst,'0' as purchase_tax_invoice_total_cgst,'0' as cess;
   SELECT '(4) Inward supplies from ISD' as type,'0' as purchase_tax_invoice_total_igst,'0' as purchase_tax_invoice_total_sgst,'0' as purchase_tax_invoice_total_cgst,'0' as cess;
   
SELECT '(5) All other ITC' as type,(COALESCE(SUM(tax_par.purchase_tax_invoice_total_igst),0) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_igst),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_igst),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.branch_id=login_branch_id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(journal.journal_purchase_child_total_igst),0) FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.year_id=login_year_id AND journal.branch_id=login_branch_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_igst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) - (SELECT COALESCE(SUM(return_par.purchase_return_total_igst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date)) as purchase_tax_invoice_total_igst,(COALESCE(SUM(tax_par.purchase_tax_invoice_total_sgst),0) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_sgst),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_sgst),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.branch_id=login_branch_id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(journal.journal_purchase_child_total_sgst),0) FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.year_id=login_year_id AND journal.branch_id=login_branch_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_sgst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) - (SELECT COALESCE(SUM(return_par.purchase_return_total_sgst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date)) as purchase_tax_invoice_total_sgst,(COALESCE(SUM(tax_par.purchase_tax_invoice_total_cgst),0) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_cgst),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_cgst),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.branch_id=login_branch_id AND jober.is_delete_status='0') + (SELECT COALESCE(SUM(journal.journal_purchase_child_total_cgst),0) FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.year_id=login_year_id AND journal.branch_id=login_branch_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_cgst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) - (SELECT COALESCE(SUM(return_par.purchase_return_total_cgst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date)) as purchase_tax_invoice_total_cgst,'0' as cess FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.challan_type_id='56' AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date;
   
   SELECT '(1) As per rules 42 & 43 of CGST Rules' as type,'0' as purchase_tax_invoice_total_igst,'0' as purchase_tax_invoice_total_sgst,'0' as purchase_tax_invoice_total_cgst,'0' as cess;
   SELECT '(2) Other' as type,'0' as purchase_tax_invoice_total_igst,'0' as purchase_tax_invoice_total_sgst,'0' as purchase_tax_invoice_total_cgst,'0' as cess;
   
   SELECT null as type,SUM(tax_par.purchase_tax_invoice_total_igst) as purchase_tax_invoice_total_igst,SUM(tax_par.purchase_tax_invoice_total_sgst) as purchase_tax_invoice_total_sgst,SUM(tax_par.purchase_tax_invoice_total_cgst) as purchase_tax_invoice_total_cgst,'0' as cess FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_party as party ON party.id=tax_par.supplier_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND party.party_gst_no!='' AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date;
   
   SELECT '(1) As per section 17(5)' as type,'0' as purchase_tax_invoice_total_igst,'0' as purchase_tax_invoice_total_sgst,'0' as purchase_tax_invoice_total_cgst,'0' as cess;
   SELECT '(2) Others' as type,'0' as purchase_tax_invoice_total_igst,'0' as purchase_tax_invoice_total_sgst,'0' as purchase_tax_invoice_total_cgst,'0' as cess;
   SELECT 'From a Supplier under composition Scheme,Exempt and NIL Rated Supply' as type,'0' as inter_state_supplies,'0' as intra_state_supplies,'0' as purchase_tax_invoice_total_cgst;
   SELECT 'Non GST Supply' as type,'0' as inter_state_supplies,'0' as intra_state_supplies,'0' as purchase_tax_invoice_total_cgst;
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_gstr9_report_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `type` VARCHAR(100), IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_gstr9_report_data');

 END;
 
   	IF type = 'sale_invoice' THEN
    
    	SELECT sale.sale_tax_invoice_no as invoice_no,sale.sale_tax_invoice_date as invoice_date,child.*,branch.branch_name,quality.quality_name,party.party_name,party.party_gst_no,state.global_name as state_name,type.type_name,gst.gst_percentage FROM erp_sale_tax_invoice as sale LEFT JOIN erp_sale_tax_invoice_child as child ON child.sale_tax_invoice_id=sale.id LEFT JOIN erp_branch as branch ON branch.id=sale.branch_id LEFT JOIN erp_quality as quality ON quality.id=child.quality_id LEFT JOIN erp_party as party ON party.id=sale.buyer_id LEFT JOIN erp_global as state on state.id=party.state_id LEFT JOIN erp_type as type ON type.id=quality.quality_type_id LEFT JOIN erp_gst as gst ON gst.id=child.gst_id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.is_delete_status='0' AND child.user_id=login_user_id AND child.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date;
        
     ELSEIF type = 'sale_return' THEN
        
        SELECT return_child.*,sale_return.sale_return_note_no as invoice_no,sale_return.sale_return_date as invoice_date,branch.branch_name,quality.quality_name,party.party_name,party.party_gst_no,state.global_name as state_name,type.type_name,gst.gst_percentage FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=sale_return.id LEFT JOIN erp_branch as branch ON branch.id=sale_return.branch_id LEFT JOIN erp_quality as quality ON quality.id=return_child.quality_id LEFT JOIN erp_party as party ON party.id=sale_return.buyer_id LEFT JOIN erp_global as state on state.id=party.state_id LEFT JOIN erp_type as type ON type.id=quality.quality_type_id LEFT JOIN erp_gst as gst ON gst.id=return_child.gst_id WHERE sale_return.user_id=login_user_id AND sale_return.branch_id=login_branch_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.sale_return_type_id='38' AND sale_return.is_delete_status='0' AND return_child.user_id=login_user_id AND return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
        
      ELSEIF type = 'sale_credit' THEN
        
        SELECT return_child.*,sale_return.sale_return_note_no as invoice_no,sale_return.sale_return_date as invoice_date,branch.branch_name,buyer.party_name as buyer_name,party.party_name,party.party_gst_no,state.global_name as state_name,gst.gst_percentage FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=sale_return.id LEFT JOIN erp_branch as branch ON branch.id=sale_return.branch_id LEFT JOIN erp_party as buyer ON buyer.id=sale_return.buyer_id LEFT JOIN erp_global as state on state.id=buyer.state_id LEFT JOIN erp_gst as gst ON gst.id=return_child.gst_id LEFT JOIN erp_party as party ON party.id=return_child.party_id WHERE sale_return.user_id=login_user_id AND sale_return.branch_id=login_branch_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND return_child.user_id=login_user_id AND return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
        
        ELSEIF type = 'sale_debit' THEN
        
        SELECT return_child.*,sale_return.sale_return_note_no as invoice_no,sale_return.sale_return_date as invoice_date,branch.branch_name,buyer.party_name as buyer_name,party.party_name,party.party_gst_no,state.global_name as state_name,gst.gst_percentage FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=sale_return.id LEFT JOIN erp_branch as branch ON branch.id=sale_return.branch_id LEFT JOIN erp_party as buyer ON buyer.id=sale_return.buyer_id LEFT JOIN erp_global as state on state.id=buyer.state_id LEFT JOIN erp_gst as gst ON gst.id=return_child.gst_id LEFT JOIN erp_party as party ON party.id=return_child.party_id WHERE sale_return.user_id=login_user_id AND sale_return.branch_id=login_branch_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND return_child.user_id=login_user_id AND return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
        
        ELSEIF type = 'purchase_invoice' THEN
        
        SELECT invoice.purchase_tax_invoice_no as invoice_no,invoice.purchase_tax_invoice_date as invoice_date,invoice_child.*,branch.branch_name,quality.quality_name,party.party_name,party.party_gst_no,state.global_name as state_name,type.type_name,gst.gst_percentage FROM erp_purchase_tax_invoice as invoice LEFT JOIN erp_purchase_tax_invoice_child as invoice_child ON invoice_child.purchase_tax_invoice_id=invoice.id LEFT JOIN erp_branch as branch ON branch.id=invoice.branch_id LEFT JOIN erp_quality as quality ON quality.id=invoice_child.quality_id LEFT JOIN erp_party as party ON party.id=invoice.supplier_id LEFT JOIN erp_global as state on state.id=party.state_id LEFT JOIN erp_type as type ON type.id=quality.quality_type_id LEFT JOIN erp_gst as gst ON gst.id=invoice_child.gst_id WHERE invoice.user_id=login_user_id AND invoice.company_id=login_company_id AND invoice.branch_id=login_branch_id AND invoice.year_id=login_year_id AND invoice.is_delete_status='0' AND invoice_child.user_id=login_user_id AND invoice_child.is_delete_status='0' AND DATE(invoice.purchase_tax_invoice_entry_date)>=from_date AND DATE(invoice.purchase_tax_invoice_entry_date)<=to_date;
        
        ELSEIF type = 'purchase_return' THEN
        
        SELECT return_child.*,purchase_return.purchase_return_note_no as invoice_no,purchase_return.purchase_return_date as invoice_date,branch.branch_name,quality.quality_name,party.party_name,party.party_gst_no,state.global_name as state_name,type.type_name,gst.gst_percentage FROM erp_purchase_return as purchase_return LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=purchase_return.id LEFT JOIN erp_branch as branch ON branch.id=purchase_return.branch_id LEFT JOIN erp_quality as quality ON quality.id=return_child.quality_id LEFT JOIN erp_party as party ON party.id=purchase_return.buyer_id LEFT JOIN erp_global as state on state.id=party.state_id LEFT JOIN erp_type as type ON type.id=quality.quality_type_id LEFT JOIN erp_gst as gst ON gst.id=return_child.gst_id WHERE purchase_return.user_id=login_user_id AND purchase_return.branch_id=login_branch_id AND purchase_return.company_id=login_company_id AND purchase_return.year_id=login_year_id AND purchase_return.purchase_return_type_id='39' AND purchase_return.is_delete_status='0' AND return_child.user_id=login_user_id AND return_child.is_delete_status='0' AND DATE(purchase_return.purchase_return_entry_date)>=from_date AND DATE(purchase_return.purchase_return_entry_date)<=to_date;
        
        ELSEIF type = 'purchase_credit' THEN
        
        SELECT return_child.*,purchase_return.purchase_return_note_no as invoice_no,purchase_return.purchase_return_date as invoice_date,branch.branch_name,supplier.party_name as supplier_name,party.party_name,party.party_gst_no,state.global_name as state_name,gst.gst_percentage FROM erp_purchase_return as purchase_return LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=purchase_return.id LEFT JOIN erp_branch as branch ON branch.id=purchase_return.branch_id LEFT JOIN erp_party as supplier ON supplier.id=purchase_return.supplier_id LEFT JOIN erp_global as state on state.id=supplier.state_id LEFT JOIN erp_gst as gst ON gst.id=return_child.gst_id LEFT JOIN erp_party as party ON party.id=return_child.party_id WHERE purchase_return.user_id=login_user_id AND purchase_return.branch_id=login_branch_id AND purchase_return.company_id=login_company_id AND purchase_return.year_id=login_year_id AND purchase_return.purchase_return_type_id='95' AND purchase_return.is_delete_status='0' AND return_child.user_id=login_user_id AND return_child.is_delete_status='0' AND DATE(purchase_return.purchase_return_entry_date)>=from_date AND DATE(purchase_return.purchase_return_entry_date)<=to_date;
        
        ELSEIF type = 'purchase_debit' THEN
        
        SELECT return_child.*,purchase_return.purchase_return_note_no as invoice_no,purchase_return.purchase_return_date as invoice_date,branch.branch_name,supplier.party_name as supplier_name,party.party_name,party.party_gst_no,state.global_name as state_name,gst.gst_percentage FROM erp_purchase_return as purchase_return LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=purchase_return.id LEFT JOIN erp_branch as branch ON branch.id=purchase_return.branch_id LEFT JOIN erp_party as supplier ON supplier.id=purchase_return.supplier_id LEFT JOIN erp_global as state on state.id=supplier.state_id LEFT JOIN erp_gst as gst ON gst.id=return_child.gst_id LEFT JOIN erp_party as party ON party.id=return_child.party_id WHERE purchase_return.user_id=login_user_id AND purchase_return.branch_id=login_branch_id AND purchase_return.company_id=login_company_id AND purchase_return.year_id=login_year_id AND purchase_return.purchase_return_type_id='96' AND purchase_return.is_delete_status='0' AND return_child.user_id=login_user_id AND return_child.is_delete_status='0' AND DATE(purchase_return.purchase_return_entry_date)>=from_date AND DATE(purchase_return.purchase_return_entry_date)<=to_date;
        
        ELSEIF type = 'purchase_journal' THEN
        
        SELECT purchase_child.*,purchase.journal_purchase_invoice_no as invoice_no,purchase.journal_purchase_invoice_date as invoice_date,branch.branch_name,supplier.party_name as supplier_name,party.party_name,party.party_gst_no,state.global_name as state_name,gst.gst_percentage FROM erp_journal_purchase as purchase LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase.id LEFT JOIN erp_branch as branch ON branch.id=purchase.branch_id LEFT JOIN erp_party as supplier ON supplier.id=purchase.supplier_id LEFT JOIN erp_global as state on state.id=supplier.state_id LEFT JOIN erp_gst as gst ON gst.id=purchase_child.gst_id LEFT JOIN erp_party as party ON party.id=purchase_child.supplier_id WHERE purchase.user_id=login_user_id AND purchase.branch_id=login_branch_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.is_delete_status='0' AND purchase_child.user_id=login_user_id AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)>=from_date AND DATE(purchase.journal_purchase_entry_date)<=to_date;
        
        ELSEIF type = 'mill_invoice' THEN
        
        SELECT invoice.mill_tax_invoice_no as invoice_no,invoice.mill_tax_invoice_date as invoice_date,invoice_child.*,branch.branch_name,quality.quality_name,party.party_name,party.party_gst_no,state.global_name as state_name,type.type_name,gst.gst_percentage FROM erp_mill_tax_invoice as invoice LEFT JOIN erp_mill_tax_invoice_child as invoice_child ON invoice_child.mill_tax_invoice_id=invoice.id LEFT JOIN erp_branch as branch ON branch.id=invoice.branch_id LEFT JOIN erp_quality as quality ON quality.id=invoice_child.quality_id LEFT JOIN erp_party as party ON party.id=invoice.mill_id LEFT JOIN erp_global as state on state.id=party.state_id LEFT JOIN erp_type as type ON type.id=quality.quality_type_id LEFT JOIN erp_gst as gst ON gst.id=invoice_child.gst_id WHERE invoice.user_id=login_user_id AND invoice.company_id=login_company_id AND invoice.branch_id=login_branch_id AND invoice.year_id=login_year_id AND invoice.is_delete_status='0' AND invoice_child.user_id=login_user_id AND invoice_child.is_delete_status='0' AND DATE(invoice.mill_tax_invoice_entry_date)>=from_date AND DATE(invoice.mill_tax_invoice_entry_date)<=to_date;
        
        ELSEIF type = 'jober_invoice' THEN
               
	SELECT invoice.jober_invoice_no as invoice_no,invoice.jober_invoice_date as invoice_date,invoice_child.*,branch.branch_name,quality.quality_name,party.party_name,party.party_gst_no,state.global_name as state_name,type.type_name,gst.gst_percentage FROM erp_jober_invoice as invoice LEFT JOIN erp_jober_invoice_child as invoice_child ON invoice_child.jober_invoice_id=invoice.id LEFT JOIN erp_branch as branch ON branch.id=invoice.branch_id LEFT JOIN erp_quality as quality ON quality.id=invoice_child.quality_id LEFT JOIN erp_party as party ON party.id=invoice.jober_id LEFT JOIN erp_global as state on state.id=party.state_id LEFT JOIN erp_type as type ON type.id=quality.quality_type_id LEFT JOIN erp_gst as gst ON gst.id=invoice_child.gst_id WHERE invoice.user_id=login_user_id AND invoice.company_id=login_company_id AND invoice.branch_id=login_branch_id AND invoice.year_id=login_year_id AND invoice.is_delete_status='0' AND invoice_child.user_id=login_user_id AND invoice_child.is_delete_status='0' AND DATE(invoice.jober_invoice_entry_date)>=from_date AND DATE(invoice.jober_invoice_entry_date)<=to_date;
        
        ELSEIF type = 'voucher' THEN
        
        SELECT voucher.voucher_no,voucher.voucher_date,bank.party_name as bank_name,party.party_name,voucher.voucher_type,voucher.voucher_cheque_ref_no,voucher.voucher_amount,voucher.voucher_remark FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_party as party ON party.id=voucher.to_party_id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND bank.is_delete_status='0' AND party.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date;
   	   
    END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_inventory_details`(IN `inventory_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_inventory_details');

 END;
 
	SELECT *,NULL AS inventory_child_data FROM erp_inventory WHERE id=inventory_id AND is_delete_status='0';
   
    SELECT child.*,quality.quality_name FROM erp_inventory_child as child LEFT JOIN erp_quality as quality ON quality.id=child.quality_id WHERE child.inventory_id=inventory_id AND child.is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_inventory_invoice_details`(IN `inventory_invoice_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_inventory_invoice_details');

 END;
 
	SELECT invoice.*,NULL AS inventory_invoice_child_data,jober.state_id FROM erp_inventory_invoice as invoice LEFT JOIN erp_party as jober ON jober.id=invoice.processor_id WHERE invoice.id=inventory_invoice_id AND invoice.is_delete_status='0';
   
    SELECT child.*,gst.gst_percentage,NULL AS inventory_invoice_child_sgst_amt,NULL AS inventory_invoice_child_cgst_amt,NULL AS inventory_invoice_child_igst_amt,quality.quality_name FROM erp_inventory_invoice_child as child LEFT JOIN erp_gst as gst ON gst.id=child.gst_id LEFT JOIN erp_quality as quality ON quality.id=child.quality_id WHERE child.inventory_invoice_id=inventory_invoice_id AND child.is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_inventory_issue_details`(IN `inventory_issue_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_inventory_issue_details');

END;

	SELECT * FROM erp_inventory_receive WHERE id=inventory_issue_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_inventory_receive_details`(IN `login_inventory_receive_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_inventory_receive_details');

 END;
	SELECT * FROM erp_inventory_receive WHERE id=login_inventory_receive_id AND is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_itc04_report_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `type` VARCHAR(100), IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION


 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_itc04_report_data');

 END;
 
   	IF type = 'mfg_to_jw' THEN
    
    	SELECT party.party_gst_no,issue.grey_issue_challan_no as challan_no,issue.grey_issue_date as challan_date,'inputs' as type,quality.quality_name,unit.unit_measurement_name as unit_name,issue.grey_issue_meter as total_meter,(issue.grey_issue_meter * invoice_child.purchase_tax_invoice_child_rate) as total_taxable,gst.gst_percentage,'mill' as type FROM erp_grey_issue as issue LEFT JOIN erp_party as party ON party.id=issue.mill_id LEFT JOIN erp_quality as quality ON quality.id=issue.quality_id LEFT JOIN erp_material as material ON material.id=quality.material_id LEFT JOIN erp_unit_measurement as unit ON unit.id=material.material_purchase_rate LEFT JOIN erp_purchase_tax_invoice_child as invoice_child ON invoice_child.id=issue.purchase_tax_invoice_child_id LEFT JOIN erp_gst as gst ON gst.id=material.gst_id WHERE issue.user_id=login_user_id AND issue.branch_id=login_branch_id AND issue.company_id=login_company_id AND issue.year_id=login_year_id AND issue.is_delete_status='0' AND quality.is_delete_status='0' AND material.is_delete_status='0' AND invoice_child.is_delete_status='0' AND DATE(issue.grey_issue_entry_date)>=from_date AND DATE(issue.grey_issue_entry_date)<=to_date UNION ALL SELECT party.party_gst_no,jober_issue.sale_jober_issue_invoice_no as challan_no,jober_issue.sale_jober_issue_date as challan_date,'inputs' as type,quality.quality_name,unit.unit_measurement_name as unit_name,jober_issue.sale_jober_issue_meter as total_meter,(jober_issue.sale_jober_issue_meter * jober_issue.sale_jober_issue_rate) as total_taxable,gst.gst_percentage,'jober_issue' as type FROM erp_sale_jober_issue as jober_issue LEFT JOIN erp_party as party ON party.id=jober_issue.jober_id LEFT JOIN erp_quality as quality ON quality.id=jober_issue.quality_id LEFT JOIN erp_material as material ON material.id=quality.material_id LEFT JOIN erp_unit_measurement as unit ON unit.id=material.material_sale_qty LEFT JOIN erp_gst as gst ON gst.id=material.gst_id WHERE jober_issue.user_id=login_user_id AND jober_issue.branch_id=login_branch_id AND jober_issue.company_id=login_company_id AND jober_issue.year_id=login_year_id AND jober_issue.is_delete_status='0' AND DATE(jober_issue.sale_jober_issue_entry_date)>=from_date AND DATE(jober_issue.sale_jober_issue_entry_date)<=to_date;
        
     ELSEIF type = 'jw_to_mfg' THEN
        
        SELECT party.party_gst_no,issue.grey_issue_challan_no as issue_challan_no,issue.grey_issue_date as issue_challan_date,mill_child.mill_tax_invoice_child_challan_no as challan_no,mill.mill_tax_invoice_date as challan_date,'inputs' as type,quality.quality_name,unit.unit_measurement_name as unit_name,mill_child.mill_tax_invoice_child_meter as total_meter,mill_child.mill_tax_invoice_child_taxable as total_taxable,gst.gst_percentage,'mill' as type FROM erp_mill_tax_invoice as mill LEFT JOIN erp_mill_tax_invoice_child as mill_child ON mill_child.mill_tax_invoice_id=mill.id LEFT JOIN erp_party as party ON party.id=mill.mill_id LEFT JOIN erp_quality as quality ON quality.id=mill_child.quality_id LEFT JOIN erp_material as material ON material.id=quality.material_id LEFT JOIN erp_unit_measurement as unit ON unit.id=mill_child.mill_tax_invoice_child_rate_per LEFT JOIN erp_gst as gst ON gst.id=material.gst_id LEFT JOIN erp_mill_receive as receive ON receive.id=mill_child.mill_receive_id LEFT JOIN erp_grey_issue as issue ON issue.id=receive.grey_issue_id WHERE mill.user_id=login_user_id AND mill.branch_id=login_branch_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.is_delete_status='0' AND quality.is_delete_status='0' AND material.is_delete_status='0' AND mill_child.is_delete_status='0' AND issue.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT party.party_gst_no,issue.sale_jober_issue_invoice_no as issue_challan_no,issue.sale_jober_issue_date as issue_challa_date,jober_child.jober_invoice_child_invoice_no as challan_no,jober.jober_invoice_date as challan_date,'inputs' as type,quality.quality_name,unit.unit_measurement_name as unit_name,jober_child.jober_invoice_child_meter as total_meter,jober_child.jober_invoice_child_taxable as total_taxable,gst.gst_percentage,'jober_receive' as type FROM erp_jober_invoice as jober LEFT JOIN erp_jober_invoice_child as jober_child ON jober_child.jober_invoice_id=jober.id LEFT JOIN erp_sale_jober_receive as receive ON receive.id=jober_child.jober_receive_id LEFT JOIN erp_party as party ON party.id=receive.jober_id LEFT JOIN erp_quality as quality ON quality.id=jober_child.quality_id LEFT JOIN erp_material as material ON material.id=quality.material_id LEFT JOIN erp_unit_measurement as unit ON unit.id=jober_child.rate_per_id LEFT JOIN erp_gst as gst ON gst.id=material.gst_id LEFT JOIN erp_sale_jober_issue as issue ON issue.id=receive.sale_jober_issue_id WHERE jober.user_id=login_user_id AND jober.branch_id=login_branch_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.is_delete_status='0' AND jober_child.is_delete_status='0' AND issue.is_delete_status='0' AND receive.is_delete_status='0' AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date;
   	   
    END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_jober_invoice_details`(IN `login_jober_invoice_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_jober_invoice_details');

 END;
    SELECT invoice.*,party.state_id,party.party_city,party.party_gst_no,NULL AS jober_invoice_child_data FROM `erp_jober_invoice` as invoice LEFT JOIN erp_party as party ON party.id=invoice.jober_id WHERE invoice.id=login_jober_invoice_id AND invoice.is_delete_status='0' AND party.is_delete_status='0';
    SELECT child.*,jober_receive.sale_jober_receive_invoice_no as sale_jober_receive_invoice_no,child.jober_invoice_child_invoice_no as jober_invoice_child_challan_no,quality.quality_name,gst.gst_percentage,NULL AS jober_invoice_child_sgst_amt,NULL AS jober_invoice_child_cgst_amt,NULL AS jober_invoice_child_igst_amt,child.jober_invoice_child_remark FROM erp_jober_invoice_child as child LEFT JOIN erp_quality as quality ON quality.id=child.quality_id LEFT JOIN erp_gst as gst ON gst.id=child.gst_id LEFT JOIN erp_sale_jober_receive as jober_receive ON jober_receive.id=child.jober_receive_id WHERE child.jober_invoice_id=login_jober_invoice_id AND child.is_delete_status='0' AND quality.is_delete_status='0' AND jober_receive.is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_journal_purchase_details`(IN `journal_purchase_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_journal_purchase_details');

 END;
 
	SELECT purchase.*,party.state_id,party.party_city,NULL AS journal_child_data FROM erp_journal_purchase as purchase LEFT JOIN erp_party as party ON party.id=purchase.supplier_id WHERE purchase.id=journal_purchase_id AND purchase.is_delete_status='0';
   
    SELECT jou_child.*,party.party_name as supplier_name,gst.gst_percentage,NULL AS journal_purchase_child_sgst_amt,NULL AS journal_purchase_child_cgst_amt,NULL AS journal_purchase_child_igst_amt FROM erp_journal_purchase_child as jou_child LEFT JOIN erp_party as party ON party.id=jou_child.supplier_id LEFT JOIN erp_gst as gst ON gst.id=jou_child.gst_id WHERE jou_child.journal_purchase_id=journal_purchase_id AND jou_child.is_delete_status='0' AND party.is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_journal_sale_details`(IN `journal_sale_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_journal_sale_details');

 END;
 
 SELECT sale.*,party.state_id,party.party_city,transporter.party_name as transporter_name,transporter.party_gst_no as transporter_gst_no,NULL AS sale_child_data FROM erp_sale as sale LEFT JOIN erp_party as party ON party.id=sale.buyer_id LEFT JOIN erp_party as transporter ON transporter.id=sale.transporter_id WHERE sale.id=journal_sale_id AND sale.is_delete_status='0';
   
    SELECT sale_child.*,quality.quality_name,jober.party_name as jober_name,order_status.type_name as order_status_name,NULL AS sale_child_sgst_amt,NULL AS sale_child_cgst_amt,NULL AS sale_child_igst_amt,gst.gst_percentage,((SELECT COUNT(id) FROM erp_sale_jober_issue WHERE sale_child_id=sale_child.id AND is_delete_status='0') + (SELECT COUNT(id) FROM erp_sale_tax_invoice_child WHERE sale_child_id=sale_child.id AND is_delete_status='0')) as is_count,quality.quality_image FROM erp_sale_child as sale_child LEFT JOIN erp_quality as quality ON quality.id=sale_child.quality_id LEFT JOIN erp_party as jober ON jober.id=sale_child.jober_id LEFT JOIN erp_type as order_status ON order_status.id=sale_child.order_status_id LEFT JOIN erp_gst as gst ON gst.id=sale_child.gst_id WHERE sale_child.sale_id=journal_sale_id AND sale_child.is_delete_status='0' AND quality.is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_ledger_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_party_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION 

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  @sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_ledger_data');

END;    
	SELECT 'opening balance' as particular,COALESCE(party.party_opening_balance,0) as amount,party.opening_balance_type as type,party.party_entry_date as ledger_date,NULL as lf_no,NULL as ref_no,NULL as ref_detail,0 as primary_id,0 as ref_page_id,NULL as ref_page FROM erp_party as party WHERE party.id=login_party_id AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_total_taxable,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail,journal.id as primary_id,0 as ref_page_id,'purchasejournal' as ref_page FROM erp_journal_purchase as journal LEFT JOIN erp_journal_purchase_child as journal_child ON journal_child.journal_purchase_id=journal.id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal_child.supplier_id=login_party_id AND journal.is_delete_status='0' AND journal_child.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_net_total,0) as amount,'credit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail,journal.id as primary_id,0 as ref_page_id,'purchasejournal' as ref_page FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(tax_par.purchase_tax_invoice_net_amount,0) as amount,'credit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail,tax_par.id as primary_id,tax_par.quality_type_id as ref_page_id,'purchaseinvoice' as ref_page FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_party as party ON party.id=tax_par.account_type WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(return_par.purchase_return_type_id='96','pur dr_note',party.party_name) as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail,return_par.id as primary_id,return_par.purchase_return_type_id as ref_page_id,'purchasereturn' as ref_page FROM erp_purchase_return as return_par LEFT JOIN erp_party as party ON party.id=return_par.purchase_return_account_type WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail,return_par.id as primary_id,return_par.purchase_return_type_id as ref_page_id,'purchasereturn' as ref_page FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail,return_par.id as primary_id,return_par.purchase_return_type_id as ref_page_id,'purchasereturn' as ref_page FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur dr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail,return_par.id as primary_id,return_par.purchase_return_type_id as ref_page_id,'purchasereturn' as ref_page FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(mill.mill_tax_invoice_total_net_amount,0) as amount,'credit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail,mill.id as primary_id,0 as ref_page_id,'millinvoice' as ref_page FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.party_account_head_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.tds_on_id = 0 AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(mill.mill_tax_invoice_total_tds,0) as amount,'debit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail,mill.id as primary_id,0 as ref_page_id,'millinvoice' as ref_page FROM erp_mill_tax_invoice as mill LEFT JOIN erp_tds_on as tds ON tds.id=mill.tds_on_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.tds_on_id > 0 AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(tax_par.puchase_tax_invoice_total_tds,0) as amount,'debit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail,tax_par.id as primary_id,tax_par.quality_type_id as ref_page_id,'purchaseinvoice' as ref_page FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_tds_on as tds ON tds.id=tax_par.tds_on_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.tds_on_id > 0 AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail,return_par.id as primary_id,return_par.purchase_return_type_id as ref_page_id,'purchasereturn' as ref_page FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail,return_par.id as primary_id,return_par.purchase_return_type_id as ref_page_id,'purchasereturn' as ref_page FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(journal.journal_purchase_tds,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail,journal.id as primary_id,0 as ref_page_id,'purchasejournal' as ref_page FROM erp_journal_purchase as journal LEFT JOIN erp_tds_on as tds ON tds.id=journal.tds_on_id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.tds_on_id > 0 AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'debit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail,sale_per.id as primary_id,0 as ref_page_id,'saletaxinvoice' as ref_page FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_party as party ON party.id=sale_per.account_type_party_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(sale_return.sale_return_type_id='98','sale cr_note',party.party_name) as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail,sale_return.id as primary_id,sale_return.sale_return_type_id as ref_page_id,'salereturn' as ref_page FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.sale_return_account_type WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id!='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail,sale_return.id as primary_id,sale_return.sale_return_type_id as ref_page_id,'salereturn' as ref_page FROM erp_sale_return as sale_return WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail,sale_return.id as primary_id,sale_return.sale_return_type_id as ref_page_id,'salereturn' as ref_page FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale_cr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail,sale_return.id as primary_id,sale_return.sale_return_type_id as ref_page_id,'salereturn' as ref_page FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail,sale_return.id as primary_id,sale_return.sale_return_type_id as ref_page_id,'salereturn' as ref_page FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail,sale_return.id as primary_id,sale_return.sale_return_type_id as ref_page_id,'salereturn' as ref_page FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'credit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail,sale_per.id as primary_id,0 as ref_page_id,'saletaxinvoice' as ref_page FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_tds_on as tds ON sale_per.tds_on_id=tds.id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.tds_on_id > 0 AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT 'receipt voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail,voucher.id as primary_id,voucher.voucher_type as ref_page_id,'voucher' as ref_page FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'payment voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail,voucher.id as primary_id,voucher.voucher_type as ref_page_id,'voucher' as ref_page FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail,voucher.id as primary_id,voucher.voucher_type as ref_page_id,'voucher' as ref_page FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail,voucher.id as primary_id,voucher.voucher_type as ref_page_id,'voucher' as ref_page FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail,voucher.id as primary_id,voucher.voucher_type as ref_page_id,'voucher' as ref_page FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail,voucher.id as primary_id,voucher.voucher_type as ref_page_id,'voucher' as ref_page FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'sale cr_note' as particular,COALESCE(sale_return.sale_return_total_sgst,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail,sale_return.id as primary_id,sale_return.sale_return_type_id as ref_page_id,'salereturn' as ref_page FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_sgst,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail,sale_return.id as primary_id,sale_return.sale_return_type_id as ref_page_id,'salereturn' as ref_page FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
    
	SELECT 'opening balance' as particular,COALESCE(party.party_opening_balance,0) as amount,party.opening_balance_type as type,party.party_entry_date as ledger_date,NULL as lf_no,NULL as ref_no,NULL as ref_detail FROM erp_party as party WHERE party.id=login_party_id AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_total_taxable,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal LEFT JOIN erp_journal_purchase_child as journal_child ON journal_child.journal_purchase_id=journal.id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal_child.supplier_id=login_party_id AND journal.is_delete_status='0' AND journal_child.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_net_total,0) as amount,'credit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(tax_par.purchase_tax_invoice_net_amount,0) as amount,'credit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_party as party ON party.id=tax_par.account_type WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(return_par.purchase_return_type_id='96','pur dr_note',party.party_name) as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_party as party ON party.id=return_par.purchase_return_account_type WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur dr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(mill.mill_tax_invoice_total_net_amount,0) as amount,'credit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.party_account_head_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(mill.mill_tax_invoice_total_tds,0) as amount,'debit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_tds_on as tds ON tds.id=mill.tds_on_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.tds_on_id > 0 AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(tax_par.puchase_tax_invoice_total_tds,0) as amount,'debit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_tds_on as tds ON tds.id=tax_par.tds_on_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.tds_on_id > 0 AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(journal.journal_purchase_tds,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal LEFT JOIN erp_tds_on as tds ON tds.id=journal.tds_on_id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.tds_on_id > 0 AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'debit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_party as party ON party.id=sale_per.account_type_party_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(sale_return.sale_return_type_id='98','sale cr_note',party.party_name) as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.sale_return_account_type WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id!='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale_cr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'credit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_tds_on as tds ON tds.id=sale_per.tds_on_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.tds_on_id > 0 AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT 'receipt voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'payment voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'sale cr_note' as particular,COALESCE(sale_return.sale_return_total_cgst,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_cgst,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(sale.sale_tax_invoice_total_sgst,0) as amount,'credit' as type,sale.sale_tax_invoice_date as ledger_date,sale.sale_tax_invoice_lf_no,sale.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale LEFT JOIN erp_party as party ON party.id=sale.account_type_party_id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date;
   
   SELECT 'opening balance' as particular,COALESCE(party.party_opening_balance,0) as amount,party.opening_balance_type as type,party.party_entry_date as ledger_date,NULL as lf_no,NULL as ref_no,NULL as ref_detail FROM erp_party as party WHERE party.id=login_party_id AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_total_taxable,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal LEFT JOIN erp_journal_purchase_child as journal_child ON journal_child.journal_purchase_id=journal.id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal_child.supplier_id=login_party_id AND journal.is_delete_status='0' AND journal_child.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_net_total,0) as amount,'credit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(tax_par.purchase_tax_invoice_net_amount,0) as amount,'credit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_party as party ON party.id=tax_par.account_type WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(return_par.purchase_return_type_id='96','pur dr_note',party.party_name) as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_party as party ON party.id=return_par.purchase_return_account_type WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur dr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(mill.mill_tax_invoice_total_net_amount,0) as amount,'credit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.party_account_head_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(mill.mill_tax_invoice_total_tds,0) as amount,'debit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_tds_on as tds ON tds.id=mill.tds_on_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.tds_on_id > 0 AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(tax_par.puchase_tax_invoice_total_tds,0) as amount,'debit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_tds_on as tds ON tds.id=tax_par.tds_on_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.tds_on_id > 0 AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(journal.journal_purchase_tds,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal LEFT JOIN erp_tds_on as tds ON tds.id=journal.tds_on_id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.tds_on_id > 0 AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'debit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_party as party ON party.id=sale_per.account_type_party_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(sale_return.sale_return_type_id='98','sale cr_note',party.party_name) as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.sale_return_account_type WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id!='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale_cr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'credit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_tds_on as tds ON tds.id=sale_per.tds_on_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.tds_on_id > 0 AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT 'receipt voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'payment voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'sale cr_note' as particular,COALESCE(sale_return.sale_return_total_cgst,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_cgst,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(sale.sale_tax_invoice_total_cgst,0) as amount,'credit' as type,sale.sale_tax_invoice_date as ledger_date,sale.sale_tax_invoice_lf_no,sale.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale LEFT JOIN erp_party as party ON party.id=sale.account_type_party_id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date;
   
   SELECT 'opening balance' as particular,COALESCE(party.party_opening_balance,0) as amount,party.opening_balance_type as type,party.party_entry_date as ledger_date,NULL as lf_no,NULL as ref_no,NULL as ref_detail FROM erp_party as party WHERE party.id=login_party_id AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_total_taxable,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal LEFT JOIN erp_journal_purchase_child as journal_child ON journal_child.journal_purchase_id=journal.id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal_child.supplier_id=login_party_id AND journal.is_delete_status='0' AND journal_child.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_net_total,0) as amount,'credit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(tax_par.purchase_tax_invoice_net_amount,0) as amount,'credit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_party as party ON party.id=tax_par.account_type WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(return_par.purchase_return_type_id='96','pur dr_note',party.party_name) as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_party as party ON party.id=return_par.purchase_return_account_type WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur dr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(mill.mill_tax_invoice_total_net_amount,0) as amount,'credit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.party_account_head_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(mill.mill_tax_invoice_total_tds,0) as amount,'debit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_tds_on as tds ON tds.id=mill.tds_on_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.tds_on_id > 0 AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(tax_par.puchase_tax_invoice_total_tds,0) as amount,'debit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_tds_on as tds ON tds.id=tax_par.tds_on_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.tds_on_id > 0 AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(journal.journal_purchase_tds,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal LEFT JOIN erp_tds_on as tds ON tds.id=journal.tds_on_id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.tds_on_id > 0 AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'debit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_party as party ON party.id=sale_per.account_type_party_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(sale_return.sale_return_type_id='98','sale cr_note',party.party_name) as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.sale_return_account_type WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id!='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale_cr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'credit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_tds_on as tds ON tds.id=sale_per.tds_on_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.tds_on_id > 0 AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT 'receipt voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'payment voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'sale cr_note' as particular,COALESCE(sale_return.sale_return_total_igst,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_igst,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(sale.sale_tax_invoice_total_igst,0) as amount,'credit' as type,sale.sale_tax_invoice_date as ledger_date,sale.sale_tax_invoice_lf_no,sale.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale LEFT JOIN erp_party as party ON party.id=sale.account_type_party_id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date;
   
   SELECT 'opening balance' as particular,COALESCE(party.party_opening_balance,0) as amount,party.opening_balance_type as type,party.party_entry_date as ledger_date,NULL as lf_no,NULL as ref_no,NULL as ref_detail FROM erp_party as party WHERE party.id=login_party_id AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_total_taxable,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal LEFT JOIN erp_journal_purchase_child as journal_child ON journal_child.journal_purchase_id=journal.id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal_child.supplier_id=login_party_id AND journal.is_delete_status='0' AND journal_child.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_net_total,0) as amount,'credit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(tax_par.purchase_tax_invoice_net_amount,0) as amount,'credit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_party as party ON party.id=tax_par.account_type WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(return_par.purchase_return_type_id='96','pur dr_note',party.party_name) as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_party as party ON party.id=return_par.purchase_return_account_type WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur dr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(mill.mill_tax_invoice_total_net_amount,0) as amount,'credit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.party_account_head_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(mill.mill_tax_invoice_total_tds,0) as amount,'debit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_tds_on as tds ON tds.id=mill.tds_on_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.tds_on_id > 0 AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(tax_par.puchase_tax_invoice_total_tds,0) as amount,'debit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_tds_on as tds ON tds.id=tax_par.tds_on_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.tds_on_id > 0 AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(journal.journal_purchase_tds,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal LEFT JOIN erp_tds_on as tds ON tds.id=journal.tds_on_id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.tds_on_id > 0 AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'debit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_party as party ON party.id=sale_per.account_type_party_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(sale_return.sale_return_type_id='98','sale cr_note',party.party_name) as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.sale_return_account_type WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id!='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale_cr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'credit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_tds_on as tds ON tds.id=sale_per.tds_on_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.tds_on_id > 0 AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT 'receipt voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'payment voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_total_sgst,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id!=login_party_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(mill.mill_tax_invoice_total_sgst,0) as amount,'debit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.party_account_head_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id!=login_party_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(tax_par.purchase_tax_invoice_total_sgst,0) as amount,'debit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_party as party ON party.id=tax_par.account_type WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id!=login_party_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT 'pur cr_note'as particular,COALESCE(return_par.purchase_return_total_sgst,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_par.supplier_id!=login_party_id AND return_child.party_id!=login_party_id AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT IF(return_par.purchase_return_type_id='96','pur dr_note',party.party_name) as particular,COALESCE(return_par.purchase_return_total_sgst,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id LEFT JOIN erp_party as party ON party.id=return_par.purchase_return_account_type WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id!='95' AND return_par.supplier_id!=login_party_id AND return_child.party_id!=login_party_id AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'sale cr_note' as particular,COALESCE(sale_return.sale_return_total_sgst,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_sgst,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
     
   SELECT 'opening balance' as particular,COALESCE(party.party_opening_balance,0) as amount,party.opening_balance_type as type,party.party_entry_date as ledger_date,NULL as lf_no,NULL as ref_no,NULL as ref_detail FROM erp_party as party WHERE party.id=login_party_id AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_total_taxable,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal LEFT JOIN erp_journal_purchase_child as journal_child ON journal_child.journal_purchase_id=journal.id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal_child.supplier_id=login_party_id AND journal.is_delete_status='0' AND journal_child.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_net_total,0) as amount,'credit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(tax_par.purchase_tax_invoice_net_amount,0) as amount,'credit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_party as party ON party.id=tax_par.account_type WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(return_par.purchase_return_type_id='96','pur dr_note',party.party_name) as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_party as party ON party.id=return_par.purchase_return_account_type WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur dr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(mill.mill_tax_invoice_total_net_amount,0) as amount,'credit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.party_account_head_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(mill.mill_tax_invoice_total_tds,0) as amount,'debit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_tds_on as tds ON tds.id=mill.tds_on_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.tds_on_id > 0 AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(tax_par.puchase_tax_invoice_total_tds,0) as amount,'debit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_tds_on as tds ON tds.id=tax_par.tds_on_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.tds_on_id > 0 AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(journal.journal_purchase_tds,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal LEFT JOIN erp_tds_on as tds ON tds.id=journal.tds_on_id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.tds_on_id > 0 AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'debit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_party as party ON party.id=sale_per.account_type_party_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(sale_return.sale_return_type_id='98','sale cr_note',party.party_name) as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.sale_return_account_type WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id!='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale_cr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'credit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_tds_on as tds ON tds.id=sale_per.tds_on_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.tds_on_id > 0 AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT 'receipt voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'payment voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_total_cgst,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id!=login_party_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(mill.mill_tax_invoice_total_cgst,0) as amount,'debit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.party_account_head_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id!=login_party_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(tax_par.purchase_tax_invoice_total_cgst,0) as amount,'debit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_party as party ON party.id=tax_par.account_type WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id!=login_party_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT 'pur cr_note'as particular,COALESCE(return_par.purchase_return_total_cgst,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_par.supplier_id!=login_party_id AND return_child.party_id!=login_party_id AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT IF(return_par.purchase_return_type_id='96','pur dr_note',party.party_name) as particular,COALESCE(return_par.purchase_return_total_cgst,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id LEFT JOIN erp_party as party ON party.id=return_par.purchase_return_account_type WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id!='95' AND return_par.supplier_id!=login_party_id AND return_child.party_id!=login_party_id AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'sale cr_note' as particular,COALESCE(sale_return.sale_return_total_cgst,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_cgst,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date; 
   
   SELECT 'opening balance' as particular,COALESCE(party.party_opening_balance,0) as amount,party.opening_balance_type as type,party.party_entry_date as ledger_date,NULL as lf_no,NULL as ref_no,NULL as ref_detail FROM erp_party as party WHERE party.id=login_party_id AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_total_taxable,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal LEFT JOIN erp_journal_purchase_child as journal_child ON journal_child.journal_purchase_id=journal.id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal_child.supplier_id=login_party_id AND journal.is_delete_status='0' AND journal_child.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_net_total,0) as amount,'credit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(tax_par.purchase_tax_invoice_net_amount,0) as amount,'credit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_party as party ON party.id=tax_par.account_type WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(return_par.purchase_return_type_id='96','pur dr_note',party.party_name) as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_party as party ON party.id=return_par.purchase_return_account_type WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_net_amount,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur cr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'pur dr_note' as particular,COALESCE(return_par.purchase_return_total_taxable,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(mill.mill_tax_invoice_total_net_amount,0) as amount,'credit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.party_account_head_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(mill.mill_tax_invoice_total_tds,0) as amount,'debit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_tds_on as tds ON tds.id=mill.tds_on_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=login_party_id AND mill.tds_on_id > 0 AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(tax_par.puchase_tax_invoice_total_tds,0) as amount,'debit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_tds_on as tds ON tds.id=tax_par.tds_on_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=login_party_id AND tax_par.tds_on_id > 0 AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='95' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(return_par.purchase_return_total_tds,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_tds_on as tds ON tds.id=return_par.tds_on_id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=login_party_id AND return_par.purchase_return_type_id='96' AND return_par.tds_on_id > 0 AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(journal.journal_purchase_tds,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal LEFT JOIN erp_tds_on as tds ON tds.id=journal.tds_on_id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=login_party_id AND journal.tds_on_id > 0 AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'debit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_party as party ON party.id=sale_per.account_type_party_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT IF(sale_return.sale_return_type_id='98','sale cr_note',party.party_name) as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_party as party ON party.id=sale_return.sale_return_account_type WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id!='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_net_amount,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale_cr_note' as particular,COALESCE(sale_return.sale_return_total_taxable,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_return.sale_return_total_tds,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_tds_on as tds ON tds.id=sale_return.tds_on_id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.tds_on_id > 0 AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT tds.tds_on_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'credit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_tds_on as tds ON tds.id=sale_per.tds_on_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=login_party_id AND sale_per.tds_on_id > 0 AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date UNION ALL SELECT 'receipt voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'payment voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cash',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,NULL as ref_detail FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'credit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type!='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.from_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'contra voucher' as particular,COALESCE(voucher.voucher_amount,0) as amount,'debit' as type,voucher.voucher_date as ledger_date,voucher.voucher_lf_no,voucher.voucher_no as ref_no,IF(voucher.voucher_transaction_type='cd',CONCAT(bank.party_name,'-',bank_detail.bank_cheque_no),'cash') as ref_detail FROM erp_voucher as voucher LEFT JOIN erp_party as bank ON bank.id=voucher.to_party_id LEFT JOIN erp_bank_cheque_detail as bank_detail ON bank_detail.voucher_id=voucher.id WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=login_party_id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date UNION ALL SELECT 'journal purchase' as particular,COALESCE(journal.journal_purchase_child_total_igst,0) as amount,'debit' as type,journal.journal_purchase_invoice_date as ledger_date,journal.journal_purchase_lf_no,journal.journal_purchase_invoice_no as ref_no,NULL as ref_detail FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id!=login_party_id AND journal.is_delete_status='0' AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(mill.mill_tax_invoice_total_igst,0) as amount,'debit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.party_account_head_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id!=login_party_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date UNION ALL SELECT party.party_name as particular,COALESCE(tax_par.purchase_tax_invoice_total_igst,0) as amount,'debit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_party as party ON party.id=tax_par.account_type WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id!=login_party_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date UNION ALL SELECT 'pur cr_note'as particular,COALESCE(return_par.purchase_return_total_igst,0) as amount,'debit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_par.supplier_id!=login_party_id AND return_child.party_id!=login_party_id AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT IF(return_par.purchase_return_type_id='96','pur dr_note',party.party_name) as particular,COALESCE(return_par.purchase_return_total_igst,0) as amount,'credit' as type,return_par.purchase_return_date as ledger_date,return_par.purchase_return_lf_no,return_par.purchase_return_note_no as ref_no,NULL as ref_detail FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id LEFT JOIN erp_party as party ON party.id=return_par.purchase_return_account_type WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id!='95' AND return_par.supplier_id!=login_party_id AND return_child.party_id!=login_party_id AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date UNION ALL SELECT 'sale cr_note' as particular,COALESCE(sale_return.sale_return_total_igst,0) as amount,'debit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date UNION ALL SELECT 'sale dr_note' as particular,COALESCE(sale_return.sale_return_total_igst,0) as amount,'credit' as type,sale_return.sale_return_date as ledger_date,sale_return.sale_return_lf_no,sale_return.sale_return_note_no as ref_no,NULL as ref_detail FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id!=login_party_id AND sale_return_child.party_id!=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)>=from_date AND DATE(sale_return.sale_return_entry_date)<=to_date;
   
    SELECT 'opening balance' as particular,COALESCE(party.party_opening_balance,0) as amount,party.opening_balance_type as type,party.party_entry_date as ledger_date,NULL as lf_no,NULL as ref_no,NULL as ref_detail FROM erp_party as party WHERE party.id=login_party_id AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' UNION ALL SELECT party.party_name as particular,COALESCE(tax_par.purchase_tax_invoice_net_amount,0) as amount,'credit' as type,tax_par.purchase_tax_invoice_date as ledger_date,tax_par.purchase_tax_invoice_lf_no,tax_par.purchase_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_party as party ON party.id=tax_par.account_type WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.account_type=login_party_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date;
    
   SELECT 'opening balance' as particular,COALESCE(party.party_opening_balance,0) as amount,party.opening_balance_type as type,party.party_entry_date as ledger_date,NULL as lf_no,NULL as ref_no,NULL as ref_detail FROM erp_party as party WHERE party.id=login_party_id AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' UNION ALL SELECT party.party_name as particular,COALESCE(sale_per.sale_tax_invoice_total_net_amount,0) as amount,'debit' as type,sale_per.sale_tax_invoice_date as ledger_date,sale_per.sale_tax_invoice_lf_no,sale_per.sale_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_sale_tax_invoice as sale_per LEFT JOIN erp_party as party ON party.id=sale_per.account_type_party_id WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.account_type_party_id=login_party_id AND sale_per.is_delete_status='0' AND DATE(sale_per.sale_tax_invoice_entry_date)>=from_date AND DATE(sale_per.sale_tax_invoice_entry_date)<=to_date;
   
   SELECT 'opening balance' as particular,COALESCE(party.party_opening_balance,0) as amount,party.opening_balance_type as type,party.party_entry_date as ledger_date,NULL as lf_no,NULL as ref_no,NULL as ref_detail FROM erp_party as party WHERE party.id=login_party_id AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' UNION ALL SELECT party.party_name as particular,COALESCE(mill.mill_tax_invoice_total_net_amount,0) as amount,'credit' as type,mill.mill_tax_invoice_date as ledger_date,mill.mill_tax_invoice_lf_no,mill.mill_tax_invoice_no as ref_no,NULL as ref_detail FROM erp_mill_tax_invoice as mill LEFT JOIN erp_party as party ON party.id=mill.party_account_head_id WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.party_account_head_id=login_party_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date;
   
    SELECT 'opening balance' as particular,COALESCE(party.party_opening_balance,0) as amount,party.opening_balance_type as type,party.party_entry_date as ledger_date,NULL as lf_no,NULL as ref_no,NULL as ref_detail FROM erp_party as party WHERE party.id=login_party_id AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0' UNION ALL SELECT party.party_name as particular,COALESCE(jober.jober_invoice_total_net_amount,0) as amount,'credit' as type,jober.jober_invoice_date as ledger_date,jober.jober_invoice_lf_no,jober.jober_invoice_no as ref_no,NULL as ref_detail FROM erp_jober_invoice as jober LEFT JOIN erp_party as party ON party.id=jober.jober_invoice_account_type WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND jober.jober_invoice_account_type=login_party_id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date;
  
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_login_data`(IN `login_email` VARCHAR(200))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_login_data');

 END;

	SELECT *,null as year_data FROM erp_user WHERE user_email=login_email;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_login_demo_user_company`(IN `login_user_id` INT, IN `search_company_name` VARCHAR(255))
BEGIN

Declare SQLQuery Varchar(10000);
DECLARE exit handler for SQLEXCEPTION
 
 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_login_demo_user_company');

 END;
 
	SET SQLQuery = 'SELECT com.id as company_id,com.user_id,com.company_name,com.company_code,year.year_name,com.company_address,com.company_email,com.company_mobile,com.company_phone FROM erp_company as com LEFT JOIN erp_year as year ON year.id=com.year_id WHERE com.user_id=login_user_id';

IF @search_company_name Is Not Null THEN
 	Set SQLQuery = SQLQuery +  ' AND com.company_name LIKE %search_company_name%';

END IF;

    
	

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_login_user_company`(IN `login_user_id` INT, IN `total_limit` INT, IN `total_offset` INT, IN `order_by` VARCHAR(255), IN `order_format` VARCHAR(255), IN `search_company_name` VARCHAR(255))
BEGIN

DECLARE Order_By varchar(255);
DECLARE Order_Format varchar(255);
DECLARE exit handler for SQLEXCEPTION
 
 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_login_user_company');

 END;
 
 
 SET Order_By = order_by;
 SET Order_Format = order_format;

 SELECT COUNT(com.id) as count FROM erp_company as com LEFT JOIN erp_year as year ON year.id=com.year_id WHERE com.user_id=login_user_id;
 
	SELECT com.id as company_id,com.user_id,com.company_name,com.company_code,year.year_name,com.company_address,com.company_email,com.company_mobile,com.company_phone FROM erp_company as com LEFT JOIN erp_year as year ON year.id=com.year_id WHERE com.user_id=login_user_id ORDER BY Order_By,Order_Format LIMIT total_offset,total_limit;

    
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_mill_tax_invoice_details`(IN `login_mill_tax_invoice_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_mill_tax_invoice_details');

 END; 	
    SELECT mill.*,party.state_id,party.party_city,party.party_gst_no,NULL AS mill_tax_invoice_child_data FROM `erp_mill_tax_invoice` as mill LEFT JOIN erp_party as party ON party.id=mill.mill_id WHERE mill.id=login_mill_tax_invoice_id AND mill.is_delete_status='0' AND party.is_delete_status='0';
  
    SELECT mill_child.*,mill_receive.mill_receive_mill_challan_no as mill_receive_challan_no,quality.quality_name,gst.gst_percentage,NULL AS mill_tax_invoice_child_sgst_amt,NULL AS mill_tax_invoice_child_cgst_amt,NULL AS mill_tax_invoice_child_igst_amt,mill_child.mill_tax_invoice_child_remark FROM erp_mill_tax_invoice_child as mill_child LEFT JOIN erp_quality as quality ON quality.id=mill_child.quality_id LEFT JOIN erp_gst as gst ON gst.id=mill_child.gst_id LEFT JOIN erp_mill_receive as mill_receive ON mill_receive.id=mill_child.mill_receive_id WHERE mill_child.mill_tax_invoice_id=login_mill_tax_invoice_id AND mill_child.is_delete_status='0' AND quality.is_delete_status='0' AND mill_receive.is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_opening_purchase_details`(IN `opening_purchase_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_opening_purchase_details');

 END;

	SELECT *,NULL AS opening_child_data FROM erp_opening_purchase WHERE id=opening_purchase_id;
    
    SELECT opening_child.*,gst.gst_percentage,quality.quality_name FROM erp_opening_purchase_child as opening_child LEFT JOIN erp_gst as gst ON gst.id=opening_child.gst_id LEFT JOIN erp_quality as quality ON quality.id=opening_child.quality_id WHERE opening_child.opening_purchase_id=opening_purchase_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_outstanding_child_data`(IN `login_party_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION	

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_outstanding_child_data');

END;    
      
      SELECT pur_tax.purchase_tax_invoice_date as invoice_date,pur_tax.purchase_tax_invoice_no as invoice_no,'purchase' as book,pur_tax.purchase_tax_invoice_net_amount as amount,0 as return_amt,(SELECT COALESCE(SUM(vc_child.voucher_child_balance),0) FROM erp_voucher_child as vc_child WHERE vc_child.tax_invoice_id=pur_tax.id AND vc_child.voucher_child_invoice_type='purchase' AND vc_child.is_delete_status='0') as paid,(SELECT voucher.voucher_date FROM erp_voucher as voucher LEFT JOIN erp_voucher_child as child ON child.voucher_id=voucher.id WHERE child.tax_invoice_id=pur_tax.id AND child.voucher_child_invoice_type='purchase' AND child.is_delete_status='0' ORDER BY child.id DESC LIMIT 1) as due_on FROM erp_purchase_tax_invoice as pur_tax WHERE pur_tax.supplier_id=login_party_id AND pur_tax.is_delete_status='0' AND pur_tax.purchase_tax_invoice_entry_date>=from_date AND pur_tax.purchase_tax_invoice_entry_date<=to_date UNION ALL SELECT journal.journal_purchase_invoice_date as invoice_date,journal.journal_purchase_invoice_no as invoice_no,'journalpurchase' as book,journal.journal_purchase_child_net_total as amount,0 as return_amt,(SELECT COALESCE(SUM(vc_child.voucher_child_balance),0) FROM erp_voucher_child as vc_child WHERE vc_child.tax_invoice_id=journal.id AND vc_child.voucher_child_invoice_type='journalpurchase' AND vc_child.is_delete_status='0') as paid,(SELECT voucher.voucher_date FROM erp_voucher as voucher LEFT JOIN erp_voucher_child as child ON child.voucher_id=voucher.id WHERE child.tax_invoice_id=journal.id AND child.voucher_child_invoice_type='journalpurchase' AND child.is_delete_status='0' ORDER BY child.id DESC LIMIT 1) as due_on FROM erp_journal_purchase as journal WHERE journal.supplier_id=login_party_id AND journal.is_delete_status='0' AND journal.journal_purchase_entry_date>=from_date AND journal.journal_purchase_entry_date<=to_date UNION ALL SELECT mill.mill_tax_invoice_date as invoice_date,mill.mill_tax_invoice_no as invoice_no,'mill' as book,mill.mill_tax_invoice_total_net_amount as amount,0 as return_amt,(SELECT COALESCE(SUM(vc_child.voucher_child_balance),0) FROM erp_voucher_child as vc_child WHERE vc_child.tax_invoice_id=mill.id AND vc_child.voucher_child_invoice_type='mill' AND vc_child.is_delete_status='0') as paid,(SELECT voucher.voucher_date FROM erp_voucher as voucher LEFT JOIN erp_voucher_child as child ON child.voucher_id=voucher.id WHERE child.tax_invoice_id=mill.id AND child.voucher_child_invoice_type='mill' AND child.is_delete_status='0' ORDER BY child.id DESC LIMIT 1) as due_on FROM erp_mill_tax_invoice as mill WHERE mill.mill_id=login_party_id AND mill.is_delete_status='0' AND mill.mill_tax_invoice_entry_date>=from_date AND mill.mill_tax_invoice_entry_date<=to_date UNION ALL SELECT jober.jober_invoice_date as invoice_date,jober.jober_invoice_no as invoice_no,'jober' as book,jober.jober_invoice_total_net_amount as amount,0 as return_amt,(SELECT COALESCE(SUM(vc_child.voucher_child_balance),0) FROM erp_voucher_child as vc_child WHERE vc_child.tax_invoice_id=jober.id AND vc_child.voucher_child_invoice_type='jober' AND vc_child.is_delete_status='0') as paid,(SELECT voucher.voucher_date FROM erp_voucher as voucher LEFT JOIN erp_voucher_child as child ON child.voucher_id=voucher.id WHERE child.tax_invoice_id=jober.id AND child.voucher_child_invoice_type='jober' AND child.is_delete_status='0' ORDER BY child.id DESC LIMIT 1) as due_on FROM erp_jober_invoice as jober WHERE jober.jober_id=login_party_id AND jober.is_delete_status='0' AND jober.jober_invoice_entry_date>=from_date AND jober.jober_invoice_entry_date<=to_date UNION ALL SELECT sale.sale_tax_invoice_date as invoice_date,sale.sale_tax_invoice_no as invoice_no,'sale' as book,sale.sale_tax_invoice_total_net_amount as amount,0 as return_amt,(SELECT COALESCE(SUM(vc_child.voucher_child_balance),0) FROM erp_voucher_child as vc_child WHERE vc_child.tax_invoice_id=sale.id AND vc_child.voucher_child_invoice_type='sale' AND vc_child.is_delete_status='0') as paid,(SELECT voucher.voucher_date FROM erp_voucher as voucher LEFT JOIN erp_voucher_child as child ON child.voucher_id=voucher.id WHERE child.tax_invoice_id=sale.id AND child.voucher_child_invoice_type='sale' AND child.is_delete_status='0' ORDER BY child.id DESC LIMIT 1) as due_on FROM erp_sale_tax_invoice as sale WHERE sale.buyer_id=login_party_id AND sale.is_delete_status='0' AND sale.sale_tax_invoice_entry_date>=from_date AND sale.sale_tax_invoice_entry_date<=to_date UNION ALL SELECT sale_return.sale_return_date as invoice_date,sale_return.sale_return_note_no as invoice_no,'saledebitnote' as book,sale_return.sale_return_total_net_amount as amount,0 as return_amt,(SELECT COALESCE(SUM(vc_child.voucher_child_balance),0) FROM erp_voucher_child as vc_child WHERE vc_child.tax_invoice_id=sale_return.id AND vc_child.voucher_child_invoice_type='saledebitnote' AND vc_child.is_delete_status='0') as paid,(SELECT voucher.voucher_date FROM erp_voucher as voucher LEFT JOIN erp_voucher_child as child ON child.voucher_id=voucher.id WHERE child.tax_invoice_id=sale_return.id AND child.voucher_child_invoice_type='saledebitnote' AND child.is_delete_status='0' ORDER BY child.id DESC LIMIT 1) as due_on FROM erp_sale_return as sale_return WHERE sale_return.buyer_id=login_party_id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return.sale_return_entry_date>=from_date AND sale_return.sale_return_entry_date<=to_date UNION ALL SELECT pur_return.purchase_return_date as invoice_date,pur_return.purchase_return_note_no as invoice_no,'purchasecreditnote' as book,pur_return.purchase_return_total_net_amount as amount,0 as return_amt,(SELECT COALESCE(SUM(vc_child.voucher_child_balance),0) FROM erp_voucher_child as vc_child WHERE vc_child.tax_invoice_id=pur_return.id AND vc_child.voucher_child_invoice_type='purchasecreditnote' AND vc_child.is_delete_status='0') as paid,(SELECT voucher.voucher_date FROM erp_voucher as voucher LEFT JOIN erp_voucher_child as child ON child.voucher_id=voucher.id WHERE child.tax_invoice_id=pur_return.id AND child.voucher_child_invoice_type='purchasecreditnote' AND child.is_delete_status='0' ORDER BY child.id DESC LIMIT 1) as due_on FROM erp_purchase_return as pur_return WHERE pur_return.supplier_id=login_party_id AND pur_return.purchase_return_type_id='95' AND pur_return.is_delete_status='0' AND pur_return.purchase_return_entry_date>=from_date AND pur_return.purchase_return_entry_date<=to_date;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_party_and_company_details`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_party_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_party_and_company_details');

 END;
 
    SELECT party.party_name,party.party_address_1,party.party_gst_no,party.party_email,party.party_mobile_1,party.state_id as party_state_id,company.company_name,company.company_email,company.company_mobile,company.company_gst_number,company.company_address,company.company_address_2,party.party_city,party.party_country,party.party_pincode,party_state.global_name as party_state,company_state.global_name as company_state,company.company_pan_no FROM erp_user as user LEFT JOIN erp_party as party ON party.user_id=user.id LEFT JOIN erp_company as company ON company.user_id=user.id LEFT JOIN erp_global as party_state ON party_state.id=party.state_id LEFT JOIN erp_global as company_state ON company_state.id=company.global_id WHERE user.id=login_user_id AND party.id=login_party_id AND company.id=login_company_id AND party.is_delete_status='0' AND company.is_delete_status='0';
    
    
    
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_party_and_quality_last_rate_fold_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_party_id` INT, IN `login_quality_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_party_and_quality_last_rate_fold_data');

 END;
 	SELECT child.sale_child_rate,child.sale_child_fold FROM erp_sale_child as child LEFT JOIN erp_sale as sale ON sale.id=child.sale_id WHERE sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.buyer_id=login_party_id AND child.quality_id=login_quality_id AND sale.is_delete_status='0' AND child.is_delete_status='0' ORDER BY child.id DESC LIMIT 1;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_party_balance_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION	

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_party_balance_data');

 END;    
      
   SELECT party.party_name,party.party_gst_no,party.party_city,CONCAT(state.global_name,'-',state.global_code) as party_state,party.party_mobile_1,head.account_head_short_name as type,type.type_name,COALESCE(party.party_opening_balance,0) as opening_balance,party.opening_balance_type,((SELECT COALESCE(SUM(journal.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as journal LEFT JOIN erp_journal_purchase_child as journal_child ON journal_child.journal_purchase_id=journal.id WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal_child.supplier_id=party.id AND journal.is_delete_status='0' AND journal_child.is_delete_status='0') + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=party.id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0') + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=party.id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0') + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_tds),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=party.id AND mill.is_delete_status='0') + (SELECT COALESCE(SUM(tax_par.puchase_tax_invoice_total_tds),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=party.id AND tax_par.is_delete_status='0') + (SELECT COALESCE(SUM(return_par.purchase_return_total_tds),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=party.id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0') + (SELECT COALESCE(SUM(journal.journal_purchase_tds),0) FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=party.id AND journal.is_delete_status='0') + (SELECT COALESCE(SUM(sale_per.sale_tax_invoice_total_net_amount),0) FROM erp_sale_tax_invoice as sale_per WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=party.id AND sale_per.is_delete_status='0') + (SELECT COALESCE(SUM(sale_return.sale_return_total_net_amount),0) FROM erp_sale_return as sale_return WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=party.id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0') + (SELECT COALESCE(SUM(sale_return.sale_return_total_taxable),0) FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=party.id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0') + (SELECT COALESCE(SUM(sale_return.sale_return_total_tds),0) FROM erp_sale_return as sale_return WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=party.id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0') + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=party.id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0') + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=party.id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0') + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=party.id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0')) as debit_amount,((SELECT COALESCE(SUM(journal.journal_purchase_child_net_total),0) FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.branch_id=login_branch_id AND journal.year_id=login_year_id AND journal.supplier_id=party.id AND journal.is_delete_status='0') + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=party.id AND tax_par.is_delete_status='0') + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=party.id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0') + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_child.party_id=party.id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND return_child.is_delete_status='0') + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_net_amount),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.mill_id=party.id AND mill.is_delete_status='0') + (SELECT COALESCE(SUM(return_par.purchase_return_total_tds),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.supplier_id=party.id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0') + (SELECT COALESCE(SUM(sale_return.sale_return_total_net_amount),0) FROM erp_sale_return as sale_return WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=party.id AND sale_return.sale_return_type_id!='97' AND sale_return.is_delete_status='0') + (SELECT COALESCE(SUM(sale_return.sale_return_total_taxable),0) FROM erp_sale_return as sale_return LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return.id WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return_child.party_id=party.id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0' AND sale_return_child.is_delete_status='0') + (SELECT COALESCE(SUM(sale_return.sale_return_total_tds),0) FROM erp_sale_return as sale_return WHERE sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.branch_id=login_branch_id AND sale_return.year_id=login_year_id AND sale_return.buyer_id=party.id AND sale_return.sale_return_type_id='97' AND sale_return.is_delete_status='0') + (SELECT COALESCE(SUM(sale_per.sale_tax_invoice_total_net_amount),0) FROM erp_sale_tax_invoice as sale_per WHERE sale_per.user_id=login_user_id AND sale_per.company_id=login_company_id AND sale_per.branch_id=login_branch_id AND sale_per.year_id=login_year_id AND sale_per.buyer_id=party.id AND sale_per.is_delete_status='0') + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=party.id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0') + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.to_party_id=party.id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0') + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.from_party_id=party.id AND voucher.voucher_type='contra' AND voucher.is_delete_status='0')) as credit_amount FROM erp_party as party LEFT JOIN erp_global as state ON state.id=party.state_id LEFT JOIN erp_account_head as head ON head.id=party.account_head_id LEFT JOIN erp_type as type ON type.id=party.party_type_id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
       
               
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_party_broker_details`(IN `login_party_id` INT, IN `login_year_id` INT, IN `login_company_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_party_broker_details');

 END;

    SELECT party.*,party.id as party_broker_id,head.account_head_short_name as short_name,opening.party_balance,opening.party_balance_type FROM erp_party as party LEFT JOIN erp_account_head as head ON head.id=party.account_head_id LEFT JOIN erp_party_opening_balance as opening ON opening.party_id=party.id WHERE party.id=login_party_id AND party.is_delete_status='0';
    
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_party_tds_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_nature_of_payment_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_party_tds_data');

 END;
 	SELECT * FROM erp_tds_rate WHERE user_id=login_user_id AND year_id=login_year_id AND company_id=login_company_id AND branch_id=login_branch_id AND nature_of_payment_id=login_nature_of_payment_id;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_profit_and_loss_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `from_date` VARCHAR(100), IN `to_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_profit_and_loss_data');

 END;    
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date)) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='47' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);  
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_tax_invoice_total_taxable),0) FROM erp_purchase_tax_invoice as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.account_type=party.id AND purchase.is_delete_status='0' AND DATE(purchase.purchase_tax_invoice_entry_date)>=from_date AND DATE(purchase.purchase_tax_invoice_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date)) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='56' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);   
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_tax_invoice_total_taxable),0) FROM erp_purchase_tax_invoice as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.quality_type_id='61' AND purchase.is_delete_status='0' AND DATE(purchase.purchase_tax_invoice_entry_date)>=from_date AND DATE(purchase.purchase_tax_invoice_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date)) as credit FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.account_type=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='56' AND tax_par.quality_type_id='61' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_taxable_amount),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)>=from_date AND DATE(mill.mill_tax_invoice_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date)) as credit FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.account_type=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='89' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);	
   
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=1 AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=1 AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=1 AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=1 AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=1 AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=1 AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=1 AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id='39' AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date)) as credit FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.account_type=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='39' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_taxable),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.branch_id=login_branch_id AND jober.jober_invoice_account_type=party.id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date)) as credit FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.account_type=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='90' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date)) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='32' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
     
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_tax_invoice_total_taxable),0) FROM erp_sale_tax_invoice as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.account_type_party_id=party.id AND sale.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date)>=from_date AND DATE(sale.sale_tax_invoice_entry_date)<=to_date)) as credit FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.account_type=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='54' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='98' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='38' AND return_par.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='97' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date)) as credit FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.account_type=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='38' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date)) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='33' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='98' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(pur_return.purchase_return_total_taxable),0) FROM erp_purchase_return as pur_return LEFT JOIN erp_purchase_return_child as pur_child ON pur_child.purchase_return_id=pur_return.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_child.party_id=party.id AND pur_return.is_delete_status='0' AND pur_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='97' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)>=from_date AND DATE(return_par.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(pur_return.purchase_return_total_taxable),0) FROM erp_purchase_return as pur_return LEFT JOIN erp_purchase_return_child as pur_child ON pur_child.purchase_return_id=pur_return.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_child.party_id=party.id AND pur_return.is_delete_status='0' AND pur_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)>=from_date AND DATE(pur_return.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date)) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='25' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date)) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='7' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
   
   SELECT 'Rounding Off' as particular,0  as opening,(SELECT COALESCE(SUM(journal.journal_purchase_round_off),0) FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.year_id=login_year_id AND journal.branch_id=login_branch_id AND journal.is_delete_status='0' AND journal.journal_purchase_round_off > 0 AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_round_off),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id!='96' AND purchase.purchase_return_round_off < 0 AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_round_off),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id='96' AND purchase.purchase_return_round_off > 0 AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_round_off),0) FROM erp_sale_return as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.sale_return_type_id!='97' AND sale.sale_return_round_off > 0 AND sale.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_round_off),0) FROM erp_sale_return as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.sale_return_type_id='97' AND sale.sale_return_round_off < 0 AND sale.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_round_off),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.purchase_tax_invoice_round_off > 0 AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(tax_par.sale_tax_invoice_round_off),0) FROM erp_sale_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.sale_tax_invoice_round_off < 0 AND DATE(tax_par.sale_tax_invoice_entry_date)>=from_date AND DATE(tax_par.sale_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(tax_par.mill_tax_invoice_total_round_off),0) FROM erp_mill_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.mill_tax_invoice_total_round_off > 0 AND DATE(tax_par.mill_tax_invoice_entry_date)>=from_date AND DATE(tax_par.mill_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_round_off),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.branch_id=login_branch_id AND jober.is_delete_status='0' AND jober.jober_invoice_total_round_off > 0 AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(journal.journal_purchase_round_off),0) FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.year_id=login_year_id AND journal.branch_id=login_branch_id AND journal.is_delete_status='0' AND journal.journal_purchase_round_off < 0 AND DATE(journal.journal_purchase_entry_date)>=from_date AND DATE(journal.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_round_off),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id!='96' AND purchase.purchase_return_round_off > 0 AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_round_off),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id='96' AND purchase.purchase_return_round_off < 0 AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_round_off),0) FROM erp_sale_return as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.sale_return_type_id!='97' AND sale.sale_return_round_off < 0 AND sale.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_round_off),0) FROM erp_sale_return as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.sale_return_type_id='97' AND sale.sale_return_round_off > 0 AND sale.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_round_off),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.purchase_tax_invoice_round_off < 0 AND DATE(tax_par.purchase_tax_invoice_entry_date)>=from_date AND DATE(tax_par.purchase_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(tax_par.sale_tax_invoice_round_off),0) FROM erp_sale_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.sale_tax_invoice_round_off > 0 AND DATE(tax_par.sale_tax_invoice_entry_date)>=from_date AND DATE(tax_par.sale_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(tax_par.mill_tax_invoice_total_round_off),0) FROM erp_mill_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.mill_tax_invoice_total_round_off < 0 AND DATE(tax_par.mill_tax_invoice_entry_date)>=from_date AND DATE(tax_par.mill_tax_invoice_entry_date)<=to_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_round_off),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.branch_id=login_branch_id AND jober.is_delete_status='0' AND jober.jober_invoice_total_round_off < 0 AND DATE(jober.jober_invoice_entry_date)>=from_date AND DATE(jober.jober_invoice_entry_date)<=to_date)) as credit;
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date)) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='48' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)>=from_date AND DATE(purchase.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=to_date)) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='8' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date)) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='44' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date)) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='41' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date)) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='36' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
   
   SELECT party.id as party_id, party.party_name as particular,CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) as debit,-ABS((SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)>=from_date AND DATE(voucher.voucher_entry_date)<=to_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)>=from_date AND DATE(return_par.purchase_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)>=from_date AND DATE(sale.sale_return_entry_date)<=to_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)>=from_date AND DATE(purchase_par.journal_purchase_entry_date)<=to_date)) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='58' AND party.is_delete_status='0' HAVING (opening > 0 OR credit > 0 OR debit > 0);
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_purchase_return_details`(IN `purchase_return_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_purchase_return_details');

 END;

	SELECT purchase.*,supplier.state_id,supplier.party_city,broker.party_name as broker_name,broker.party_gst_no as broker_gst_no,haste.party_name as haste_name,haste.party_gst_no as haste_gst_no,transporter.party_name as transporter_name,transporter.party_gst_no as transporter_gst_no,NULL AS purchase_return_child_data FROM erp_purchase_return as purchase LEFT JOIN erp_party as supplier ON supplier.id=purchase.supplier_id LEFT JOIN erp_party as broker ON broker.id=purchase.broker_id LEFT JOIN erp_party as haste ON haste.id=purchase.haste_id LEFT JOIN erp_party as transporter ON transporter.id=purchase.transporter_id WHERE purchase.id=purchase_return_id AND purchase.is_delete_status='0';
   
   SELECT ret_child.*,quality.quality_name,gst.gst_percentage,NULL AS purchase_return_child_sgst_amt,NULL AS purchase_return_child_cgst_amt,NULL AS purchase_return_child_igst_amt,party.party_name FROM erp_purchase_return_child as ret_child LEFT JOIN erp_quality as quality ON quality.id=ret_child.quality_id LEFT JOIN erp_gst as gst ON gst.id=ret_child.gst_id LEFT JOIN erp_purchase_return as ret_par ON ret_par.id=ret_child.purchase_return_id LEFT JOIN erp_party as party ON party.id=ret_child.party_id WHERE ret_child.purchase_return_id=purchase_return_id AND ret_child.is_delete_status='0' AND ret_par.is_delete_status='0';
   
    

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_purchase_tax_invoice_details`(IN `purchase_tax_invoice_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_purchase_tax_invoice_details');

 END;
 
 	SELECT pur_tax.*,party.state_id,party.party_name as supplier_name,party.party_gst_no as supplier_gst_no,party.party_city as supplier_city,broker.party_name as broker_name,broker.party_gst_no as broker_gst_no,NULL AS purchase_tax_invoice_child_data FROM erp_purchase_tax_invoice as pur_tax LEFT JOIN erp_party as party ON party.id=pur_tax.supplier_id LEFT JOIN erp_party as broker ON broker.id=pur_tax.broker_id WHERE pur_tax.id=purchase_tax_invoice_id AND pur_tax.is_delete_status='0';
   
    SELECT pur_tax_child.*,quality.quality_name,gst.gst_percentage,NULL AS purchase_tax_invoice_child_sgst_amt,NULL AS purchase_tax_invoice_child_cgst_amt,NULL AS purchase_tax_invoice_child_igst_amt FROM erp_purchase_tax_invoice_child as pur_tax_child LEFT JOIN erp_quality as quality ON quality.id=pur_tax_child.quality_id LEFT JOIN erp_gst as gst ON gst.id=pur_tax_child.gst_id WHERE pur_tax_child.purchase_tax_invoice_id=purchase_tax_invoice_id AND pur_tax_child.is_delete_status='0' AND quality.is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_quality_details`(IN `login_quality_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_quality_details');

 END;

	SELECT * FROM erp_quality WHERE id=login_quality_id AND is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_sale_jober_issue_details`(IN `sale_jober_issue_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_sale_jober_issue_details');

END;

	SELECT * FROM erp_sale_jober_issue WHERE id=sale_jober_issue_id AND is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_sale_jober_receive_details`(IN `sale_jober_receive_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_sale_jober_receive_details');

END;

	SELECT * FROM erp_sale_jober_receive WHERE id=sale_jober_receive_id AND is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_sale_return_details`(IN `sale_return_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_sale_return_details');

END;
	SELECT sale.*,party.state_id,party.party_gst_no,NULL AS sale_return_child_data FROM erp_sale_return as sale LEFT JOIN erp_party as party ON party.id=sale.buyer_id WHERE sale.id=sale_return_id AND sale.is_delete_status='0';
   
   SELECT sale_child.*,quality.quality_name,gst.gst_percentage,NULL AS sale_return_child_sgst_amt,NULL AS sale_return_child_cgst_amt,NULL AS sale_return_child_igst_amt,party.party_name,child.sale_tax_invoice_child_meter,child.sale_tax_invoice_child_meter - (SELECT COALESCE(sum(sr_child.sale_return_child_meter),0) FROM erp_sale_return_child as sr_child WHERE sr_child.sale_tax_child_id=child.id AND sr_child.id!=sale_child.id) as due_meter FROM erp_sale_return_child as sale_child LEFT JOIN erp_quality as quality ON quality.id=sale_child.quality_id LEFT JOIN erp_gst as gst ON gst.id=sale_child.gst_id LEFT JOIN erp_sale_return as sale ON sale.id=sale_child.sale_return_id LEFT JOIN erp_party as party ON party.id=sale_child.party_id LEFT JOIN erp_sale_tax_invoice_child as child ON child.id=sale_child.sale_tax_child_id WHERE sale_child.sale_return_id=sale_return_id AND sale_child.is_delete_status='0';
   
    
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_sale_tax_invoice_details`(IN `sale_tax_invoice_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_sale_tax_invoice_details');

 END; 
	SELECT sale.*,party.state_id,party.party_city,party.party_gst_no,transporter.party_name as transporter_name,NULL AS sale_tax_invoice_child_data,sale_order.sale_order_no,sale_order.sale_order_date FROM erp_sale_tax_invoice as sale LEFT JOIN erp_party as party ON party.id=sale.buyer_id LEFT JOIN erp_party as transporter ON transporter.id=sale.transporter_id LEFT JOIN erp_sale as sale_order ON sale_order.id=sale.sale_id WHERE sale.id=sale_tax_invoice_id AND sale.is_delete_status='0';
    SELECT sale_child.*,quality.quality_name,jober.party_name as jober_name,order_status.type_name as order_status_name,NULL AS sale_tax_invoice_child_sgst_amt,NULL AS sale_tax_invoice_child_cgst_amt,NULL AS sale_tax_invoice_child_igst_amt,gst.gst_percentage,unit.unit_measurement_name as unit_name FROM erp_sale_tax_invoice_child as sale_child LEFT JOIN erp_quality as quality ON quality.id=sale_child.quality_id LEFT JOIN erp_party as jober ON jober.id=sale_child.jober_id LEFT JOIN erp_type as order_status ON order_status.id=sale_child.order_status_id LEFT JOIN erp_gst as gst ON gst.id=sale_child.gst_id LEFT JOIN erp_unit_measurement as unit ON unit.id=sale_child.sale_tax_invoice_child_rate_per WHERE sale_child.sale_tax_invoice_id=sale_tax_invoice_id AND sale_child.is_delete_status='0' AND quality.is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_stock_detail_report_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `login_quality_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_stock_detail_report_data');

 END;
 	
    IF login_quality_id > 0 THEN
    
    SELECT '0' as kg,'0' as kg_amount,'0' as mtr,'0' as mtr_amount; 
    
    SELECT (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_total_qty_sent),0) FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.purchase_tax_invoice_id=tax_par.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_qty_per='20' AND tax_child.quality_id=login_quality_id) as kg,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.purchase_tax_invoice_id=tax_par.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_qty_per='20' AND tax_child.quality_id=login_quality_id) as kg_amount,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_total_qty_sent),0) FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.purchase_tax_invoice_id=tax_par.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_qty_per='24' AND tax_child.quality_id=login_quality_id) as mtr,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.purchase_tax_invoice_id=tax_par.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_qty_per='24' AND tax_child.quality_id=login_quality_id) as mtr_amount FROM erp_quality as quality WHERE quality.user_id=login_user_id AND quality.company_id=login_company_id AND quality.is_delete_status='0' AND quality.quality_type_id='62' AND quality.id=login_quality_id;
    
    SELECT (SELECT COALESCE(SUM(return_par.purchase_return_total_qty_sent),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child on return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND return_child.purchase_return_child_qty_per='20' AND return_child.quality_id=login_quality_id) as kg,(SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child on return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND return_child.purchase_return_child_qty_per='20' AND return_child.quality_id=login_quality_id) as kg_amount,(SELECT COALESCE(SUM(return_par.purchase_return_total_qty_sent),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child on return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND return_child.purchase_return_child_qty_per='24' AND return_child.quality_id=login_quality_id) as mtr,(SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child on return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND return_child.purchase_return_child_qty_per='24' AND return_child.quality_id=login_quality_id) as mtr_amount FROM erp_quality as quality WHERE quality.user_id=login_user_id AND quality.company_id=login_company_id AND quality.is_delete_status='0' AND quality.quality_type_id='62' AND quality.id=login_quality_id;
    
    SELECT (SELECT COALESCE(SUM(issue.grey_issue_meter),0) FROM erp_grey_issue as issue LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.id=issue.purchase_tax_invoice_child_id WHERE issue.user_id=login_user_id AND issue.company_id=login_company_id AND issue.branch_id=login_branch_id AND issue.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='20' AND issue.quality_id=login_quality_id) as kg,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_grey_issue as issue LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.id=issue.purchase_tax_invoice_child_id LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.id=tax_child.purchase_tax_invoice_id WHERE issue.user_id=login_user_id AND issue.company_id=login_company_id AND issue.branch_id=login_branch_id AND issue.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='20' AND issue.quality_id=login_quality_id AND tax_par.is_delete_status='0') as kg_amount,(SELECT COALESCE(SUM(issue.grey_issue_meter),0) FROM erp_grey_issue as issue LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.id=issue.purchase_tax_invoice_child_id WHERE issue.user_id=login_user_id AND issue.company_id=login_company_id AND issue.branch_id=login_branch_id AND issue.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='24' AND issue.quality_id=login_quality_id) as mtr,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_grey_issue as issue LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.id=issue.purchase_tax_invoice_child_id LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.id=tax_child.purchase_tax_invoice_id WHERE issue.user_id=login_user_id AND issue.company_id=login_company_id AND issue.branch_id=login_branch_id AND issue.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='24' AND issue.quality_id=login_quality_id AND tax_par.is_delete_status='0') as mtr_amount FROM erp_quality as quality WHERE quality.user_id=login_user_id AND quality.company_id=login_company_id AND quality.is_delete_status='0' AND quality.quality_type_id='62' AND quality.id=login_quality_id;
    
    SELECT (SELECT COALESCE(SUM(tax_child.purchase_tax_invoice_child_qty_sent),0) - (SELECT COALESCE(SUM(issue.grey_issue_meter),0) FROM erp_grey_issue as issue WHERE issue.user_id=login_user_id AND issue.company_id=login_company_id AND issue.branch_id=login_branch_id AND issue.year_id=login_year_id AND issue.is_delete_status='0' AND issue.purchase_tax_invoice_child_id=tax_child.id) FROM erp_purchase_tax_invoice_child as tax_child LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.id=tax_child.purchase_tax_invoice_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='20' AND tax_child.quality_id=login_quality_id) as kg,0 as kg_amount,(SELECT COALESCE(SUM(tax_child.purchase_tax_invoice_child_qty_sent),0) - (SELECT COALESCE(SUM(issue.grey_issue_meter),0) FROM erp_grey_issue as issue WHERE issue.user_id=login_user_id AND issue.company_id=login_company_id AND issue.branch_id=login_branch_id AND issue.year_id=login_year_id AND issue.is_delete_status='0' AND issue.purchase_tax_invoice_child_id=tax_child.id) FROM erp_purchase_tax_invoice_child as tax_child LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.id=tax_child.purchase_tax_invoice_id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='24' AND tax_child.quality_id=login_quality_id) as mtr,0 as mtr_amount FROM erp_quality as quality WHERE quality.user_id=login_user_id AND quality.company_id=login_company_id AND quality.is_delete_status='0' AND quality.quality_type_id='62' AND quality.id=login_quality_id;
    
    
    SELECT 'opening' as particular,'0' as kg,'0' as kg_amount,'0' as mtr,'0' as mtr_amount;
    
    SELECT (SELECT COALESCE(SUM(issue.grey_issue_meter),0) FROM erp_grey_issue as issue LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.id=issue.purchase_tax_invoice_child_id WHERE issue.user_id=login_user_id AND issue.company_id=login_company_id AND issue.branch_id=login_branch_id AND issue.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='20' AND issue.quality_id=login_quality_id) as kg,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_grey_issue as issue LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.id=issue.purchase_tax_invoice_child_id LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.id=tax_child.purchase_tax_invoice_id WHERE issue.user_id=login_user_id AND issue.company_id=login_company_id AND issue.branch_id=login_branch_id AND issue.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='20' AND issue.quality_id=login_quality_id AND tax_par.is_delete_status='0') as kg_amount,(SELECT COALESCE(SUM(issue.grey_issue_meter),0) FROM erp_grey_issue as issue LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.id=issue.purchase_tax_invoice_child_id WHERE issue.user_id=login_user_id AND issue.company_id=login_company_id AND issue.branch_id=login_branch_id AND issue.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='24' AND issue.quality_id=login_quality_id) as mtr,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_grey_issue as issue LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.id=issue.purchase_tax_invoice_child_id LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.id=tax_child.purchase_tax_invoice_id WHERE issue.user_id=login_user_id AND issue.company_id=login_company_id AND issue.branch_id=login_branch_id AND issue.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='24' AND issue.quality_id=login_quality_id AND tax_par.is_delete_status='0') as mtr_amount FROM erp_quality as quality WHERE quality.user_id=login_user_id AND quality.company_id=login_company_id AND quality.is_delete_status='0' AND quality.quality_type_id='62' AND quality.id=login_quality_id;
    
    SELECT 'grey return from mill' as particular,(SELECT COALESCE(SUM(issue.grey_issue_meter),0) FROM erp_mill_receive as receive LEFT JOIN erp_grey_issue as issue ON issue.id=receive.grey_issue_id LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.id=issue.purchase_tax_invoice_child_id WHERE receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND issue.is_delete_status='0' AND receive.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='20' AND issue.quality_id=login_quality_id AND receive.is_grey_return='1') as kg,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_mill_receive as receive LEFT JOIN erp_grey_issue as issue ON issue.id=receive.grey_issue_id LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.id=issue.purchase_tax_invoice_child_id LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.id=tax_child.purchase_tax_invoice_id WHERE receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='20' AND issue.quality_id=login_quality_id AND tax_par.is_delete_status='0' AND receive.is_delete_status='0' AND receive.is_grey_return='1') as kg_amount,(SELECT COALESCE(SUM(issue.grey_issue_meter),0) FROM erp_mill_receive as receive LEFT JOIN erp_grey_issue as issue ON issue.id=receive.grey_issue_id LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.id=issue.purchase_tax_invoice_child_id WHERE receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND issue.is_delete_status='0' AND receive.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='24' AND issue.quality_id=login_quality_id AND receive.is_grey_return='1') as mtr,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_mill_receive as receive LEFT JOIN erp_grey_issue as issue ON issue.id=receive.grey_issue_id LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.id=issue.purchase_tax_invoice_child_id LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.id=tax_child.purchase_tax_invoice_id WHERE receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='24' AND issue.quality_id=login_quality_id AND tax_par.is_delete_status='0' AND receive.is_delete_status='0' AND receive.is_grey_return='1') as mtr_amount FROM erp_quality as quality WHERE quality.user_id=login_user_id AND quality.company_id=login_company_id AND quality.is_delete_status='0' AND quality.quality_type_id='62' AND quality.id=login_quality_id;
    
    SELECT 'Finish Goods receive from mill' as particular,(SELECT COALESCE(SUM(issue.grey_issue_meter),0) FROM erp_mill_receive as receive LEFT JOIN erp_grey_issue as issue ON issue.id=receive.grey_issue_id LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.id=issue.purchase_tax_invoice_child_id WHERE receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND issue.is_delete_status='0' AND receive.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='20' AND issue.quality_id=login_quality_id AND receive.is_grey_return!='1') as kg,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_mill_receive as receive LEFT JOIN erp_grey_issue as issue ON issue.id=receive.grey_issue_id LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.id=issue.purchase_tax_invoice_child_id LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.id=tax_child.purchase_tax_invoice_id WHERE receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='20' AND issue.quality_id=login_quality_id AND tax_par.is_delete_status='0' AND receive.is_delete_status='0' AND receive.is_grey_return!='1') as kg_amount,(SELECT COALESCE(SUM(issue.grey_issue_meter),0) FROM erp_mill_receive as receive LEFT JOIN erp_grey_issue as issue ON issue.id=receive.grey_issue_id LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.id=issue.purchase_tax_invoice_child_id WHERE receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND issue.is_delete_status='0' AND receive.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='24' AND issue.quality_id=login_quality_id AND receive.is_grey_return!='1') as mtr,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_mill_receive as receive LEFT JOIN erp_grey_issue as issue ON issue.id=receive.grey_issue_id LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.id=issue.purchase_tax_invoice_child_id LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.id=tax_child.purchase_tax_invoice_id WHERE receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='24' AND issue.quality_id=login_quality_id AND tax_par.is_delete_status='0' AND receive.is_delete_status='0' AND receive.is_grey_return!='1') as mtr_amount FROM erp_quality as quality WHERE quality.user_id=login_user_id AND quality.company_id=login_company_id AND quality.is_delete_status='0' AND quality.quality_type_id='62' AND quality.id=login_quality_id;
    
    SELECT (SELECT COALESCE(SUM(issue.grey_issue_meter),0) - (SELECT COALESCE(SUM(receive.mill_receive_qty),0) FROM erp_mill_receive as receive WHERE receive.grey_issue_id=issue.id AND receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND receive.is_delete_status='0') FROM erp_grey_issue as issue LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.id=issue.purchase_tax_invoice_child_id WHERE issue.user_id=login_user_id AND issue.company_id=login_company_id AND issue.branch_id=login_branch_id AND issue.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='20' AND issue.quality_id=login_quality_id) as kg,0 as kg_amount,(SELECT COALESCE(SUM(issue.grey_issue_meter),0) - (SELECT COALESCE(SUM(receive.mill_receive_qty),0) FROM erp_mill_receive as receive WHERE receive.grey_issue_id=issue.id AND receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND receive.is_delete_status='0') FROM erp_grey_issue as issue LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.id=issue.purchase_tax_invoice_child_id WHERE issue.user_id=login_user_id AND issue.company_id=login_company_id AND issue.branch_id=login_branch_id AND issue.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='24' AND issue.quality_id=login_quality_id) as mtr,0 as mtr_amount FROM erp_quality as quality WHERE quality.user_id=login_user_id AND quality.company_id=login_company_id AND quality.is_delete_status='0' AND quality.quality_type_id='62' AND quality.id=login_quality_id;
    
	SELECT 'opening' as particular,'0' as kg,'0' as kg_amount,'0' as mtr,'0' as mtr_amount;
    
    SELECT 'finish purchase' as particular,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_total_qty_sent),0) FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.purchase_tax_invoice_id=tax_par.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_qty_per='20' AND tax_child.quality_id=login_quality_id) as kg,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.purchase_tax_invoice_id=tax_par.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_qty_per='20' AND tax_child.quality_id=login_quality_id) as kg_amount,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_total_qty_sent),0) FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.purchase_tax_invoice_id=tax_par.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_qty_per='24' AND tax_child.quality_id=login_quality_id) as mtr,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_purchase_tax_invoice as tax_par LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.purchase_tax_invoice_id=tax_par.id WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_qty_per='24' AND tax_child.quality_id=login_quality_id) as mtr_amount FROM erp_quality as quality WHERE quality.user_id=login_user_id AND quality.company_id=login_company_id AND quality.is_delete_status='0' AND quality.quality_type_id='61' AND quality.id=login_quality_id;
    
    SELECT 'Finish Goods receive from mill' as particular,(SELECT COALESCE(SUM(issue.grey_issue_meter),0) FROM erp_mill_receive as receive LEFT JOIN erp_grey_issue as issue ON issue.id=receive.grey_issue_id LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.id=issue.purchase_tax_invoice_child_id WHERE receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND issue.is_delete_status='0' AND receive.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='20' AND issue.quality_id=login_quality_id AND receive.is_grey_return!='1') as kg,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_mill_receive as receive LEFT JOIN erp_grey_issue as issue ON issue.id=receive.grey_issue_id LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.id=issue.purchase_tax_invoice_child_id LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.id=tax_child.purchase_tax_invoice_id WHERE receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='20' AND issue.quality_id=login_quality_id AND tax_par.is_delete_status='0' AND receive.is_delete_status='0' AND receive.is_grey_return!='1') as kg_amount,(SELECT COALESCE(SUM(issue.grey_issue_meter),0) FROM erp_mill_receive as receive LEFT JOIN erp_grey_issue as issue ON issue.id=receive.grey_issue_id LEFT JOIN erp_purchase_tax_invoice_child as tax_child ON tax_child.id=issue.purchase_tax_invoice_child_id WHERE receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND issue.is_delete_status='0' AND receive.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='24' AND issue.quality_id=login_quality_id AND receive.is_grey_return!='1') as mtr,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_mill_receive as receive LEFT JOIN erp_grey_issue as issue ON issue.id=receive.grey_issue_id LEFT JOIN erp_purchase_tax_invoice_child as tax_child on tax_child.id=issue.purchase_tax_invoice_child_id LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.id=tax_child.purchase_tax_invoice_id WHERE receive.user_id=login_user_id AND receive.company_id=login_company_id AND receive.branch_id=login_branch_id AND receive.year_id=login_year_id AND issue.is_delete_status='0' AND tax_child.is_delete_status='0' AND tax_child.purchase_tax_invoice_child_rate_per='24' AND issue.quality_id=login_quality_id AND tax_par.is_delete_status='0' AND receive.is_delete_status='0' AND receive.is_grey_return!='1') as mtr_amount FROM erp_quality as quality WHERE quality.user_id=login_user_id AND quality.company_id=login_company_id AND quality.is_delete_status='0' AND quality.quality_type_id='62' AND quality.id=login_quality_id;
    
    SELECT 0 as kg,0 as kg_amount,0 as mtr,0 as mtr_amount;
    
    SELECT 0 as kg,0 as kg_amount,0 as mtr,0 as mtr_amount;

    END IF;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_trial_balance_phase1_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `from_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION	

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_trial_balance_phase1_data');

 END;    
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.voucher_type='payment' AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.voucher_type='receipt' AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as credit,0 as closing FROM erp_party as party WHERE party.account_head_id='1' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
    
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.voucher_type='receipt' AND voucher.voucher_transaction_type IN ('bank','netbanking') AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.voucher_type='contra' AND voucher.voucher_transaction_type IN ('cd','b2b') AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.voucher_type='payment' AND voucher.voucher_transaction_type IN ('bank','netbanking') AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.voucher_type='contra' AND voucher.voucher_transaction_type IN ('cw','b2b') AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) as credit,0 as closing FROM erp_party as party WHERE party.account_head_id='16' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE  voucher.to_party_id=party.id AND voucher.voucher_transaction_type IN ('cash','cw') AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.voucher_transaction_type IN ('cash','cd') AND voucher.user_id=login_user_id AND voucher.branch_id=login_branch_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) as credit,0 as closing FROM erp_party as party WHERE party.account_head_id='18' AND party.user_id=login_user_id AND party.company_id=login_company_id AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_total_cgst),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_date)<=from_date) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_cgst),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_date)<=from_date) + (SELECT COALESCE(SUM(purchase.journal_purchase_child_total_cgst),0) FROM erp_journal_purchase as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_invoice_date)<=from_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_cgst),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_cgst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_cgst),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id!='97' AND sale_return_child.party_id!=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_cgst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id!='95' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_cgst),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id!=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.account_head_id='63' AND party.user_id=login_user_id AND party.company_id=login_company_id;
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_total_igst),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_date)<=from_date) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_igst),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_date)<=from_date) + (SELECT COALESCE(SUM(purchase.journal_purchase_child_total_igst),0) FROM erp_journal_purchase as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_invoice_date)<=from_date)  + (SELECT COALESCE(SUM(jober.jober_invoice_total_igst),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_igst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_igst),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id!='98' AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_igst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id!='95' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_igst),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id!='98' AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.account_head_id='64' AND party.user_id=login_user_id AND party.company_id=login_company_id;
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.account_head_id='69' AND party.user_id=login_user_id AND party.company_id=login_company_id;
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.account_head_id='70' AND party.user_id=login_user_id AND party.company_id=login_company_id;
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.account_head_id='68' AND party.user_id=login_user_id AND party.company_id=login_company_id;
   
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND voucher.to_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as credit FROM erp_party as party LEFT JOIN erp_voucher as voucher ON voucher.from_party_id=party.id WHERE party.account_head_id='21' AND party.user_id=login_user_id AND party.company_id=login_company_id;
   
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_total_sgst),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_date)<=from_date) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_sgst),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.branch_id=login_branch_id AND mill.year_id=login_year_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_date)<=from_date) + (SELECT COALESCE(SUM(purchase.journal_purchase_child_total_sgst),0) FROM erp_journal_purchase as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_invoice_date)<=from_date)  + (SELECT COALESCE(SUM(jober.jober_invoice_total_sgst),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.branch_id=login_branch_id AND jober.year_id=login_year_id AND jober.is_delete_status='0' AND DATE(jober.jober_invoice_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_sgst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_sgst),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id!='98' AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_sgst),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id!='95' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_sgst),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id!='98' AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.account_head_id='62' AND party.user_id=login_user_id AND party.company_id=login_company_id;
   
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='98' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(pur_return.purchase_return_total_taxable),0) FROM erp_purchase_return as pur_return LEFT JOIN erp_purchase_return_child as pur_child ON pur_child.purchase_return_id=pur_return.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_child.party_id=party.id AND pur_return.is_delete_status='0' AND pur_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='97' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(pur_return.purchase_return_total_taxable),0) FROM erp_purchase_return as pur_return LEFT JOIN erp_purchase_return_child as pur_child ON pur_child.purchase_return_id=pur_return.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_child.party_id=party.id AND pur_return.is_delete_status='0' AND pur_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='25' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(sale.sale_tax_invoice_total_net_amount),0) FROM erp_sale_tax_invoice as sale WHERE sale.buyer_id=party.id AND sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return.sale_return_total_net_amount),0) FROM erp_sale_return as sale_return WHERE sale_return.buyer_id=party.id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id!='98' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return.sale_return_total_net_amount),0) FROM erp_sale_return as sale_return WHERE sale_return.buyer_id=party.id AND sale_return.user_id=login_user_id AND sale_return.company_id=login_company_id AND sale_return.year_id=login_year_id AND sale_return.branch_id=login_branch_id AND sale_return.sale_return_type_id='98' AND sale_return.is_delete_status='0' AND DATE(sale_return.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND voucher.to_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='27' AND party.is_delete_status='0';
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_trial_balance_phase2_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `from_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION	

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_trial_balance_phase2_data');

END;    
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.account_head_id='3' AND party.user_id=login_user_id AND party.company_id=login_company_id;
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='31' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(sale.sale_return_total_cgst),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.sale_return_type_id='98' AND sale.buyer_id!=party.id AND sale_child.party_id!=party.id AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(sale_tax.sale_tax_invoice_total_cgst),0) FROM erp_sale_tax_invoice as sale_tax WHERE sale_tax.user_id=login_user_id AND sale_tax.company_id=login_company_id AND sale_tax.branch_id=login_branch_id AND sale_tax.year_id=login_year_id AND sale_tax.is_delete_status='0' AND DATE(sale_tax.sale_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_cgst),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.sale_return_type_id='97' AND sale.buyer_id!=party.id AND sale_child.party_id!=party.id AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND sale_return_par.sale_return_entry_date=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='60' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='82' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='75' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(purchase.puchase_tax_invoice_tcs_amt),0) FROM erp_purchase_tax_invoice as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND purchase.is_delete_status='0' AND DATE(purchase.purchase_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_tcs_amt),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='39' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='92' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.is_delete_status='0' AND sale.sale_return_type_id='98' AND sale_child.party_id=party.id AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.is_delete_status='0' AND sale.sale_return_type_id='97' AND sale_child.party_id=party.id AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='91' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(sale.sale_return_total_igst),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.sale_return_type_id='98' AND sale.buyer_id!=party.id AND sale_child.party_id!=party.id AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(sale_tax.sale_tax_invoice_total_cgst),0) FROM erp_sale_tax_invoice as sale_tax WHERE sale_tax.user_id=login_user_id AND sale_tax.company_id=login_company_id AND sale_tax.branch_id=login_branch_id AND sale_tax.year_id=login_year_id AND sale_tax.is_delete_status='0' AND DATE(sale_tax.sale_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_igst),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.sale_return_type_id='97' AND sale.buyer_id!=party.id AND sale_child.party_id!=party.id AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='61' AND party.is_delete_status='0';
   
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(sale.sale_return_total_sgst),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.sale_return_type_id='98' AND sale.buyer_id!=party.id AND sale_child.party_id!=party.id AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.is_delete_status='0' AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(sale_tax.sale_tax_invoice_total_cgst),0) FROM erp_sale_tax_invoice as sale_tax WHERE sale_tax.user_id=login_user_id AND sale_tax.company_id=login_company_id AND sale_tax.branch_id=login_branch_id AND sale_tax.year_id=login_year_id AND sale_tax.is_delete_status='0' AND DATE(sale_tax.sale_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_sgst),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.branch_id=login_branch_id AND sale.year_id=login_year_id AND sale.sale_return_type_id='97' AND sale.buyer_id!=party.id AND sale_child.party_id!=party.id AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='59' AND party.is_delete_status='0';
   
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.account_head_id='66' AND party.user_id=login_user_id AND party.company_id=login_company_id;
   
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.account_head_id='67' AND party.user_id=login_user_id AND party.company_id=login_company_id;
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='98' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale_return_par.sale_return_total_taxable),0) FROM erp_sale_return as sale_return_par LEFT JOIN erp_sale_return_child as sale_return_child ON sale_return_child.sale_return_id=sale_return_par.id WHERE sale_return_par.user_id=login_user_id AND sale_return_par.company_id=login_company_id AND sale_return_par.branch_id=login_branch_id AND sale_return_par.year_id=login_year_id AND sale_return_par.sale_return_type_id='97' AND sale_return_child.party_id=party.id AND sale_return_par.is_delete_status='0' AND sale_return_child.is_delete_status='0' AND DATE(sale_return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.supplier_id=party.id AND purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.account_head_id='65' AND party.user_id=login_user_id AND party.company_id=login_company_id;
   
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='payment' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.from_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id!='95' AND return_par.supplier_id=party.id AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='receipt' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.to_party_id=party.id AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.branch_id=login_branch_id AND return_par.year_id=login_year_id AND return_par.purchase_return_type_id='95' AND return_par.supplier_id=party.id AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.branch_id=login_branch_id AND tax_par.year_id=login_year_id AND tax_par.supplier_id=party.id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.branch_id=login_branch_id AND purchase.year_id=login_year_id AND purchase.supplier_id=party.id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.account_head_id='26' AND party.user_id=login_user_id AND party.company_id=login_company_id;
   
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND voucher.to_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(mill.mill_tax_invoice_total_net_amount),0) FROM erp_mill_tax_invoice as mill WHERE mill.mill_id=party.id AND mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.branch_id=login_branch_id AND voucher.year_id=login_year_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND voucher.from_party_id=party.id AND DATE(voucher.voucher_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='73' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.supplier_id=party.id AND tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='77' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.supplier_id=party.id AND tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='76' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id!='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_net_amount),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.supplier_id=party.id AND tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND DATE(tax_par.purchase_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_net_amount),0) FROM erp_purchase_return as return_par WHERE return_par.supplier_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(inventory.inventory_invoice_total_total),0) FROM erp_inventory_invoice as inventory LEFT JOIN erp_inventory_invoice_child as inventory_child ON inventory_child.inventory_invoice_id=inventory.id LEFT JOIN erp_inventory_receive as receive ON receive.id=inventory_child.inventory_receive_id WHERE inventory.user_id=login_user_id AND inventory.company_id=login_company_id AND inventory.year_id=login_year_id AND inventory.branch_id=login_branch_id AND receive.jober_id=party.id AND receive.is_delete_status='0' AND inventory_child.is_delete_status='0' AND inventory.is_delete_status='0' AND DATE(inventory.inventory_invoice_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='78' AND party.is_delete_status='0';
   
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='42' AND party.is_delete_status='0';
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_trial_balance_phase3_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `from_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_trial_balance_phase3_data');

 END;
 	SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='48' AND party.is_delete_status='0';
    
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='32' AND party.is_delete_status='0';
	
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='44' AND party.is_delete_status='0';
    
    
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='41' AND party.is_delete_status='0';
    
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='36' AND party.is_delete_status='0';
    
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='33' AND party.is_delete_status='0';
    
    
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_child.party_id=party.id AND return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_par.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='58' AND party.is_delete_status='0';
    
     SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='6' AND party.is_delete_status='0';
    
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='7' AND party.is_delete_status='0';
    
     SELECT 'Rounding Off' as particular,0 as opening,(SELECT COALESCE(SUM(journal.journal_purchase_round_off),0) FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.year_id=login_year_id AND journal.branch_id=login_branch_id AND journal.is_delete_status='0' AND journal.journal_purchase_round_off > 0 AND DATE(journal.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_round_off),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id!='96' AND purchase.purchase_return_round_off < 0 AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_round_off),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id='96' AND purchase.purchase_return_round_off > 0 AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_round_off),0) FROM erp_sale_return as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.sale_return_type_id!='97' AND sale.sale_return_round_off > 0 AND sale.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_round_off),0) FROM erp_sale_return as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.sale_return_type_id='97' AND sale.sale_return_round_off < 0 AND sale.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_round_off),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.purchase_tax_invoice_round_off > 0 AND DATE(tax_par.purchase_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(tax_par.sale_tax_invoice_round_off),0) FROM erp_sale_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.sale_tax_invoice_round_off < 0 AND DATE(tax_par.sale_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(tax_par.mill_tax_invoice_total_round_off),0) FROM erp_mill_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.mill_tax_invoice_total_round_off > 0 AND DATE(tax_par.mill_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_round_off),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.branch_id=login_branch_id AND jober.is_delete_status='0' AND jober.jober_invoice_total_round_off > 0 AND DATE(jober.jober_invoice_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(journal.journal_purchase_round_off),0) FROM erp_journal_purchase as journal WHERE journal.user_id=login_user_id AND journal.company_id=login_company_id AND journal.year_id=login_year_id AND journal.branch_id=login_branch_id AND journal.is_delete_status='0' AND journal.journal_purchase_round_off < 0 AND DATE(journal.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_round_off),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id!='96' AND purchase.purchase_return_round_off > 0 AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_round_off),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id='96' AND purchase.purchase_return_round_off < 0 AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_round_off),0) FROM erp_sale_return as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.sale_return_type_id!='97' AND sale.sale_return_round_off < 0 AND sale.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_round_off),0) FROM erp_sale_return as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.sale_return_type_id='97' AND sale.sale_return_round_off > 0 AND sale.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(tax_par.purchase_tax_invoice_round_off),0) FROM erp_purchase_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.purchase_tax_invoice_round_off < 0 AND DATE(tax_par.purchase_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(tax_par.sale_tax_invoice_round_off),0) FROM erp_sale_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.sale_tax_invoice_round_off > 0 AND DATE(tax_par.sale_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(tax_par.mill_tax_invoice_total_round_off),0) FROM erp_mill_tax_invoice as tax_par WHERE tax_par.user_id=login_user_id AND tax_par.company_id=login_company_id AND tax_par.year_id=login_year_id AND tax_par.branch_id=login_branch_id AND tax_par.is_delete_status='0' AND tax_par.mill_tax_invoice_total_round_off < 0 AND DATE(tax_par.mill_tax_invoice_entry_date)<=from_date) + (SELECT COALESCE(SUM(jober.jober_invoice_total_round_off),0) FROM erp_jober_invoice as jober WHERE jober.user_id=login_user_id AND jober.company_id=login_company_id AND jober.year_id=login_year_id AND jober.branch_id=login_branch_id AND jober.is_delete_status='0' AND jober.jober_invoice_total_round_off < 0 AND DATE(jober.jober_invoice_entry_date)<=from_date) as credit;
    
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='8' AND party.is_delete_status='0';
    
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='9' AND party.is_delete_status='0';
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_trial_balance_phase4_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_branch_id` INT, IN `login_year_id` INT, IN `from_date` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_trial_balance_phase4_data');

 END;
 	SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='17' AND party.is_delete_status='0';
    
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='24' AND party.is_delete_status='0';
    
    
    SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='28' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='95' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='98' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase_par LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase_par.id WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase_par.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase LEFT JOIN erp_purchase_return_child as purchase_child ON purchase_child.purchase_return_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.party_id=party.id AND purchase.purchase_return_type_id='96' AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_return_total_taxable),0) FROM erp_sale_return as sale LEFT JOIN erp_sale_return_child as sale_child ON sale_child.sale_return_id=sale.id WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale_child.party_id=party.id AND sale.sale_return_type_id='97' AND sale.is_delete_status='0' AND sale_child.is_delete_status='0' AND DATE(sale.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase_par.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase_par WHERE purchase_par.user_id=login_user_id AND purchase_par.company_id=login_company_id AND purchase_par.year_id=login_year_id AND purchase_par.branch_id=login_branch_id AND purchase_par.supplier_id=party.id AND purchase_par.is_delete_status='0' AND DATE(purchase_par.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='47' AND party.is_delete_status='0';
   
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_tax_invoice_total_taxable),0) FROM erp_purchase_tax_invoice as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.quality_type_id='62' AND purchase.is_delete_status='0' AND DATE(purchase.purchase_tax_invoice_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) as credit FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.account_type=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='56' AND tax_par.quality_type_id='62' AND party.is_delete_status='0';
   
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_tax_invoice_total_taxable),0) FROM erp_purchase_tax_invoice as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.quality_type_id='61' AND purchase.is_delete_status='0' AND DATE(purchase.purchase_tax_invoice_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) as credit FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.account_type=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='56' AND tax_par.quality_type_id='61' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(mill.mill_tax_invoice_total_taxable_amount),0) FROM erp_mill_tax_invoice as mill WHERE mill.user_id=login_user_id AND mill.company_id=login_company_id AND mill.year_id=login_year_id AND mill.branch_id=login_branch_id AND mill.is_delete_status='0' AND DATE(mill.mill_tax_invoice_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) as credit FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.account_type=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='89' AND party.is_delete_status='0';
   
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=1 AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=1 AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=1 AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='95' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=1 AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=1 AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.purchase_return_total_taxable),0) FROM erp_purchase_return as return_par LEFT JOIN erp_purchase_return_child as return_child ON return_child.purchase_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=1 AND return_par.branch_id=login_branch_id AND return_par.purchase_return_type_id='96' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.purchase_return_total_taxable),0) FROM erp_purchase_return as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=1 AND purchase.branch_id=login_branch_id AND purchase.purchase_return_type_id='39' AND purchase.is_delete_status='0' AND DATE(purchase.purchase_return_entry_date)<=from_date) as credit FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.account_type=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='39' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(inventory.inventory_invoice_total_taxable),0) FROM erp_inventory_invoice as inventory WHERE inventory.user_id=login_user_id AND inventory.company_id=login_company_id AND inventory.year_id=login_year_id AND inventory.branch_id=login_branch_id AND inventory.is_delete_status='0' AND DATE(inventory.inventory_invoice_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) as credit FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.account_type=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='90' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(sale.sale_tax_invoice_total_taxable),0) FROM erp_sale_tax_invoice as sale WHERE sale.user_id=login_user_id AND sale.company_id=login_company_id AND sale.year_id=login_year_id AND sale.branch_id=login_branch_id AND sale.is_delete_status='0' AND DATE(sale.sale_tax_invoice_entry_date)<=from_date) as credit FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.account_type=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='54' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='98' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='38' AND return_par.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='97' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)<=from_date) as credit FROM erp_party as party LEFT JOIN erp_purchase_tax_invoice as tax_par ON tax_par.account_type=party.id WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='38' AND party.is_delete_status='0';
   
   SELECT party.id as party_id, party.account_head_id, party.party_name as particular,party.opening_balance_type as type, CASE WHEN party.opening_balance_type = 'cr' THEN -ABS(COALESCE(party.party_opening_balance,0)) ELSE COALESCE(party.party_opening_balance,0) END as opening,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='payment' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='98' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(pur_return.purchase_return_total_taxable),0) FROM erp_purchase_return as pur_return LEFT JOIN erp_purchase_return_child as pur_child ON pur_child.purchase_return_id=pur_return.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='95' AND pur_child.party_id=party.id AND pur_return.is_delete_status='0' AND pur_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.journal_purchase_child_total_taxable),0) FROM erp_journal_purchase as purchase LEFT JOIN erp_journal_purchase_child as purchase_child ON purchase_child.journal_purchase_id=purchase.id WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase_child.supplier_id=party.id AND purchase.is_delete_status='0' AND purchase_child.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)<=from_date) as debit,(SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.from_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='recepit' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(voucher.voucher_amount),0) FROM erp_voucher as voucher WHERE voucher.to_party_id=party.id AND voucher.user_id=login_user_id AND voucher.company_id=login_company_id AND voucher.year_id=login_year_id AND voucher.branch_id=login_branch_id AND voucher.voucher_type='journal' AND voucher.is_delete_status='0' AND DATE(voucher.voucher_entry_date)<=from_date) + (SELECT COALESCE(SUM(return_par.sale_return_total_taxable),0) FROM erp_sale_return as return_par LEFT JOIN erp_sale_return_child as return_child ON return_child.sale_return_id=return_par.id WHERE return_par.user_id=login_user_id AND return_par.company_id=login_company_id AND return_par.year_id=login_year_id AND return_par.branch_id=login_branch_id AND return_par.sale_return_type_id='97' AND return_child.party_id=party.id AND return_par.is_delete_status='0' AND return_child.is_delete_status='0' AND DATE(return_par.sale_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(pur_return.purchase_return_total_taxable),0) FROM erp_purchase_return as pur_return LEFT JOIN erp_purchase_return_child as pur_child ON pur_child.purchase_return_id=pur_return.id WHERE pur_return.user_id=login_user_id AND pur_return.company_id=login_company_id AND pur_return.year_id=login_year_id AND pur_return.branch_id=login_branch_id AND pur_return.purchase_return_type_id='96' AND pur_child.party_id=party.id AND pur_return.is_delete_status='0' AND pur_child.is_delete_status='0' AND DATE(pur_return.purchase_return_entry_date)<=from_date) + (SELECT COALESCE(SUM(purchase.journal_purchase_child_net_total),0) FROM erp_journal_purchase as purchase WHERE purchase.user_id=login_user_id AND purchase.company_id=login_company_id AND purchase.year_id=login_year_id AND purchase.branch_id=login_branch_id AND purchase.supplier_id=party.id AND purchase.is_delete_status='0' AND DATE(purchase.journal_purchase_entry_date)<=from_date) as credit FROM erp_party as party WHERE party.user_id=login_user_id AND party.company_id=login_company_id AND party.account_head_id='45' AND party.is_delete_status='0';
   
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_type_data`(IN `type` VARCHAR(200))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_type_data');

 END;

	SELECT id as type_id,id as value,type_name,type_name as label,type_rate,type_code,type_parent_name,NULL as status_data FROM erp_type WHERE type_parent_name=type AND type_status='active';
    
    
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_unit_of_measurement_details`(IN `login_unit_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_unit_of_measurement_details');

 END;


	SELECT * FROM erp_unit_measurement WHERE id=login_unit_id AND is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_use_company_data`(IN `create_company_name` VARCHAR(255), IN `create_company_code` VARCHAR(255), IN `login_company_id` INT)
BEGIN 
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_use_company_data');

 END;


    SELECT company_name FROM erp_company WHERE company_name=create_company_name AND id!=login_company_id;
	
    SELECT company_code FROM erp_company WHERE company_code=create_company_code AND id!=login_company_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_user_details`(IN `login_user_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_user_details');

 END;

    SELECT * FROM erp_user WHERE id=login_user_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_voucher_details`(IN `voucher_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_voucher_details');

 END;

	SELECT *,NULL AS voucher_child_data,NULL as bank_cheque_data FROM erp_voucher WHERE id=voucher_id AND is_delete_status='0';
   
    SELECT voucher_child.* FROM erp_voucher_child as voucher_child WHERE voucher_child.voucher_id=voucher_id AND voucher_child.is_delete_status='0';
    
    SELECT * FROM erp_bank_cheque_detail as bank_cheque WHERE bank_cheque.voucher_id=voucher_id AND bank_cheque.is_delete_status='0';

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_year_data`()
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_year_data');

 END;

	SELECT id as year_id,id as value,year_name,year_name as label FROM erp_year WHERE 1=1;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `login_year_data`(IN `login_user_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'login_year_data');

 END;
	SELECT id as year_id,id as value,year_name,year_name as label,is_default FROM erp_year WHERE user_id=login_user_id;
    SELECT year.id as year_id,year.id as value,year.year_name,year.year_name as label,year.is_default FROM erp_year as year LEFT JOIN erp_user_year as user_year ON user_year.year_id=year.id WHERE user_year.user_id=login_user_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `selected_branch_godown_data`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'selected_branch_godown_data');

 END;
	SELECT id as godown_id,id as value,godown_name,godown_name as label FROM erp_godown WHERE user_id=login_user_id AND company_id=login_company_id AND year_id=login_year_id AND branch_id=login_branch_id;
    SELECT id as godown_id,id as value,godown_name,godown_name as label FROM erp_godown WHERE company_id=login_company_id AND year_id=login_year_id AND branch_id=login_branch_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `selected_year_company_branch_data`(IN `login_user_id` INT, IN `login_company_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'selected_year_company_branch_data');

 END;
	SELECT id as branch_id,id as value,branch_name,branch_name as label,null as godown_data,state_id FROM erp_branch WHERE user_id=login_user_id AND company_id=login_company_id;
    SELECT branch.id as branch_id,branch.id as value,branch.branch_name,branch.branch_name as label,null as godown_data,branch.state_id FROM erp_branch as branch WHERE branch.company_id=login_company_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `selected_year_company_data`(IN `login_user_id` INT, IN `login_year_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'selected_year_company_data');
  
 END;
	SELECT id as company_id,id as value,company_name,company_name as label,null as branch_data FROM erp_company WHERE user_id=login_user_id AND year_id=login_year_id;
    SELECT comp.id as company_id,comp.id as value,comp.company_name,comp.company_name as label,null as branch_data FROM erp_company as comp LEFT JOIN erp_company_user_relation as comp_user ON comp_user.company_id=comp.id WHERE comp.year_id=login_year_id AND comp_user.user_id=login_user_id;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `update_bankreco_date`(IN `update_id` INT, IN `login_voucher_bank_reco_date` VARCHAR(100), IN `login_entry_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'update_bankreco_date');

 END;
 
 	UPDATE `erp_voucher` SET `voucher_bank_reco_date`=login_voucher_bank_reco_date,`voucher_update_date`=login_entry_date WHERE id=update_id;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `update_company_data`(IN `update_id` INT, IN `update_user_id` INT, IN `update_company_name` VARCHAR(255), IN `update_company_address` VARCHAR(255), IN `update_year_id` INT, IN `update_industries_id` INT, IN `update_business_group` VARCHAR(255), IN `update_company_code` VARCHAR(255), IN `update_company_address_2` VARCHAR(255), IN `update_state_id` INT, IN `update_company_phone` VARCHAR(255), IN `update_company_mobile` VARCHAR(255), IN `update_company_email` VARCHAR(255), IN `update_company_open_status` VARCHAR(100), IN `update_company_pan_no` VARCHAR(255), IN `update_company_tan_no` VARCHAR(255), IN `update_company_cin_no` VARCHAR(255), IN `update_company_fssai_no` VARCHAR(255), IN `update_company_declaration` VARCHAR(255), IN `update_company_order_declaration` VARCHAR(255), IN `update_company_juridiction` VARCHAR(255), IN `update_company_bakup_email` VARCHAR(255), IN `update_company_video_refereance` VARCHAR(100), IN `update_company_user_entry` VARCHAR(100), IN `update_company_email_server_config` VARCHAR(100), IN `update_company_gmail_email` VARCHAR(255), IN `update_company_gmail_password` VARCHAR(255), IN `update_company_gmail_client_id` VARCHAR(255), IN `update_company_gmail_client_secreate` VARCHAR(255), IN `update_company_challan_no` VARCHAR(100), IN `update_company_outstanding` VARCHAR(100), IN `update_company_matrix_view` VARCHAR(100), IN `update_company_hide_nostock_quality_delivery` VARCHAR(100), IN `update_company_delivery_quality_filter` VARCHAR(100), IN `update_company_purchase_delivery_quality_filter` VARCHAR(100), IN `update_company_quality_stock` VARCHAR(100), IN `update_company_rate_help_factor` VARCHAR(255), IN `update_company_visit_success_buffer` VARCHAR(255), IN `update_company_visit_duplication_filter_minute` VARCHAR(255), IN `update_compnay_case_limit` VARCHAR(255), IN `update_company_deafult_bank_charge_head` VARCHAR(255), IN `update_company_auto_frezz_days` VARCHAR(255), IN `update_company_sales_cost_percentage_for_gp` VARCHAR(255), IN `update_company_block_letter` VARCHAR(100), IN `update_company_auto_party_lock` VARCHAR(100), IN `update_company_strict_credit_mode` VARCHAR(100), IN `update_company_header_serch` VARCHAR(100), IN `update_company_gst_date_config` VARCHAR(100), IN `update_company_tcs_applicable` VARCHAR(100), IN `update_company_shipping_without_gst` VARCHAR(100), IN `update_company_proprietary` VARCHAR(255), IN `update_company_website` VARCHAR(255), IN `update_company_invoice_watermark` VARCHAR(255), IN `update_company_sales_quality_rate_factor` VARCHAR(100), IN `update_company_barcode_scan_config` VARCHAR(100), IN `update_update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'update_company_data');

 END;


    UPDATE erp_company SET user_id=update_user_id,
    global_id=update_state_id,
    year_id=update_year_id,
    industries_id=update_industries_id,
    company_name=update_company_name,
    company_email=update_company_email,
    company_mobile=update_company_mobile,
    company_phone=update_company_phone,
    company_business_group=update_business_group,
    company_code=update_company_code,
    company_address=update_company_address,
    company_address_2=update_company_address_2,
    company_pan_no=update_company_pan_no,
    company_tan_no=update_company_tan_no,
    company_cin_no=update_company_cin_no,
    company_fssai_no=update_company_fssai_no,
    company_declaration=update_company_declaration,
    company_order_declaration=update_company_order_declaration,
    company_juridiction=update_company_juridiction,
    company_bakup_email=update_company_bakup_email,
    company_video_refereance=update_company_video_refereance,
    company_user_entry=update_company_user_entry,
    company_email_server_config=update_company_email_server_config,
    company_gmail_email=update_company_gmail_email,
    company_gmail_password=update_company_gmail_password,
    company_gmail_client_id=update_company_gmail_client_id,
    company_gmail_client_secreate=update_company_gmail_client_secreate,
    company_challan_no=update_company_challan_no,
    company_outstanding=update_company_outstanding,
    company_matrix_view=update_company_matrix_view,
    company_hide_nostock_quality_delivery=update_company_hide_nostock_quality_delivery,
    company_delivery_quality_filter=update_company_delivery_quality_filter,
    company_purchase_delivery_quality_filter=update_company_purchase_delivery_quality_filter,
    company_quality_stock=update_company_quality_stock,
    company_rate_help_factor=update_company_rate_help_factor,
    company_visit_success_buffer=update_company_visit_success_buffer,
    company_visit_duplication_filter_minute=update_company_visit_duplication_filter_minute,
    compnay_case_limit=update_compnay_case_limit,
    company_deafult_bank_charge_head=update_company_deafult_bank_charge_head,
    company_auto_frezz_days=update_company_auto_frezz_days,
    company_sales_cost_percentage_for_gp=update_company_sales_cost_percentage_for_gp,
    company_block_letter=update_company_block_letter,
    company_auto_party_lock=update_company_auto_party_lock,
    company_strict_credit_mode=update_company_strict_credit_mode,
    company_header_serch=update_company_header_serch,
    company_gst_date_config=update_company_gst_date_config,
    company_tcs_applicable=update_company_tcs_applicable,
    company_shipping_without_gst=update_company_shipping_without_gst,
    company_proprietary=update_company_proprietary,
    company_website=update_company_website,
    company_invoice_watermark=update_company_invoice_watermark,
    company_sales_quality_rate_factor=update_company_sales_quality_rate_factor,
    company_barcode_scan_config=update_company_barcode_scan_config,
    company_open_status=update_company_open_status,
    company_update_date=update_update_date WHERE id=update_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `update_profile`(IN `update_id` INT, IN `update_user_name` VARCHAR(100), IN `update_user_mobile` VARCHAR(100), IN `update_user_whatsapp_number` VARCHAR(100), IN `update_user_profile` LONGTEXT, IN `update_user_address` VARCHAR(100), IN `update_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'update_profile');

 END;

   UPDATE `erp_user` SET `user_name`=update_user_name,`user_mobile`=update_user_mobile,`user_profile`=update_user_profile,`user_whatsapp_number`=update_user_whatsapp_number,`user_address`=update_user_address,`user_update_date`=update_date WHERE `id`=update_id;
   
   SELECT * FROM erp_user WHERE id=update_id;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `update_sale_tax_invoice`(IN `update_id` INT, IN `login_transporter_id` INT, IN `login_sale_tax_invoice_lf_no` VARCHAR(255), IN `login_entry_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'update_sale_tax_invoice');

 END;
  
 	UPDATE `erp_sale_tax_invoice` SET `transporter_id`=login_transporter_id,`sale_tax_invoice_lf_no`=login_sale_tax_invoice_lf_no,`sale_tax_invoice_entry_date`=login_entry_date WHERE id=update_id;

 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `update_transporter`(IN `update_id` INT, IN `login_transporter_id` VARCHAR(100), IN `login_entry_date` DATETIME)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'update_transporter');

 END;
 
 	UPDATE `erp_party` SET transporter_id=login_transporter_id,`party_update_date`=login_entry_date WHERE id=update_id;
 
 END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_party_broker_transporter_dropdown`(IN `login_user_id` VARCHAR(100), IN `login_company_id` VARCHAR(100), IN `login_type_id` VARCHAR(100))
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_party_broker_transporter_dropdown');
  
 END;
  
	SELECT id,id as value,party_name,party_name as label,party_address_1,state_id FROM erp_party WHERE account_head_id IN (login_type_id) AND user_id IN (login_user_id,0); 

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_quality_dropdown`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_quality_type_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_quality_dropdown');

 END;
 
 IF login_quality_type_id > 0 THEN
 
 	SELECT quality.id as quality_id,quality.id as value,quality.quality_name,quality.quality_name as label,NULL as quality_stock_value,material.gst_id,material.material_hsn,material.material_purchase_qty,purchase_qty.unit_measurement_symbol as purchase_qty,material.material_sale_qty,sale_qty.unit_measurement_symbol as sale_qty,quality.quality_meter,material.material_purchase_rate,purchase_rate.unit_measurement_symbol as purchase_rate,material.material_sale_rate as sale_rate,gst.gst_percentage as gst_per,quality.quality_type_id,quality.quality_image FROM erp_quality as quality LEFT JOIN erp_material as material ON material.id=quality.material_id LEFT JOIN erp_gst as gst ON gst.id=material.gst_id LEFT JOIN erp_unit_measurement as purchase_qty ON purchase_qty.id=material.material_purchase_qty LEFT JOIN erp_unit_measurement as sale_qty ON sale_qty.id=material.material_sale_qty LEFT JOIN erp_unit_measurement as purchase_rate ON purchase_rate.id=material.material_purchase_rate WHERE quality.company_id<=login_company_id AND quality.quality_type_id=login_quality_type_id AND quality.is_delete_status='0';
 ELSE
 	SELECT quality.id as quality_id,quality.id as value,quality.quality_name,quality.quality_name as label,NULL as quality_stock_value,material.gst_id,material.material_hsn,material.material_purchase_qty,purchase_qty.unit_measurement_symbol as purchase_qty,material.material_sale_qty,sale_qty.unit_measurement_symbol as sale_qty,quality.quality_meter,material.material_purchase_rate,purchase_rate.unit_measurement_symbol as purchase_rate,material.material_sale_rate as sale_rate,gst.gst_percentage as gst_per,quality.quality_type_id,quality.quality_image FROM erp_quality as quality LEFT JOIN erp_material as material ON material.id=quality.material_id LEFT JOIN erp_gst as gst ON gst.id=material.gst_id LEFT JOIN erp_unit_measurement as purchase_qty ON purchase_qty.id=material.material_purchase_qty LEFT JOIN erp_unit_measurement as sale_qty ON sale_qty.id=material.material_sale_qty LEFT JOIN erp_unit_measurement as purchase_rate ON purchase_rate.id=material.material_purchase_rate WHERE quality.company_id<=login_company_id AND quality.is_delete_status='0';
 
 END IF;
	
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_purchase_invoice_dropdown`(IN `login_user_id` INT, IN `login_company_id` INT, IN `login_year_id` INT, IN `login_branch_id` INT, IN `login_supplier_id` INT, IN `login_quality_type_id` INT)
BEGIN
DECLARE exit handler for SQLEXCEPTION

 BEGIN
  GET DIAGNOSTICS CONDITION 1 
  	@sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  
  INSERT INTO erp_sql_errors(full_error,error_no,error_msg,procedure_name) VALUES (@full_error,@errno,@text,'get_all_purchase_invoice_dropdown');

 END;
	
    IF login_quality_type_id > 0 THEN
    
    		SELECT `id` as value, `purchase_tax_invoice_no` as label FROM `erp_purchase_tax_invoice` WHERE user_id=login_user_id AND company_id<=login_company_id AND year_id<=login_year_id AND branch_id<=login_branch_id AND supplier_id=login_supplier_id AND quality_type_id=login_quality_type_id AND is_delete_status='0';
            
    
    ELSE
   			SELECT `id` as value, `journal_purchase_invoice_no` as label FROM `erp_journal_purchase` WHERE user_id=login_user_id AND company_id<=login_company_id AND year_id<=login_year_id AND branch_id<=login_branch_id AND supplier_id=login_supplier_id AND is_delete_status='0';
		
END IF;

END$$
DELIMITER ;
